### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSArchiveListResult
  commentId: T:CRMScript.NetServer.NSArchiveListResult
  id: NSArchiveListResult
  so.intellisense: Void.NSArchiveListResult
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSArchiveListResult.GetRowCount()
  - CRMScript.NetServer.NSArchiveListResult.GetRows()
  - CRMScript.NetServer.NSArchiveListResult.#ctor()
  - CRMScript.NetServer.NSArchiveListResult.SetRowCount(Integer)
  - CRMScript.NetServer.NSArchiveListResult.SetRows()
  name: NSArchiveListResult
  nameWithType: NSArchiveListResult
  fullName: CRMScript.NetServer.NSArchiveListResult
  type: Class
  summary: 
  example: 
- uid: CRMScript.NetServer.NSArchiveListResult.GetRowCount()
  commentId: M:CRMScript.NetServer.NSArchiveListResult.GetRowCount()
  id: 'GetRowCount()'
  so.intellisense: NSArchiveListResult.GetRowCount
  langs:
  - crmscript
  name: 'GetRowCount()'
  nameWithType: NSArchiveListResult.GetRowCount()
  fullName: CRMScript.NetServer.NSArchiveListResult.GetRowCount()
  type: Method
  summary: "\nCount of rows, independent of paging. If you order up page 1 with page size 50, the row count may still be 279, that being the number of rows that would have been returned in a  paging-off situation<p></p>\n<strong>Returns:</strong>Integer<p></p>\n<pre><code>NSArchiveListResult thing;\nInteger rowCount  = thing.GetRowCount();</code></pre>\n"
  remarks: 
  syntax: 
    content: Integer GetRowCount()
    parameters:
    return:
      type: CRMScript.Global.Integer
  example: 
  - "\n<pre><code>NSArchiveListResult thing;\nInteger rowCount  = thing.GetRowCount();</code></pre>\n"
- uid: CRMScript.NetServer.NSArchiveListResult.GetRows()
  commentId: M:CRMScript.NetServer.NSArchiveListResult.GetRows()
  id: 'GetRows()'
  so.intellisense: NSArchiveListResult.GetRows
  langs:
  - crmscript
  name: 'GetRows()'
  nameWithType: NSArchiveListResult.GetRows()
  fullName: CRMScript.NetServer.NSArchiveListResult.GetRows()
  type: Method
  summary: "\nThe actual rows, according to the paging info, of the result. See RowCount for a paging-independent count estimate<p></p>\n<strong>Returns:</strong>NSArchiveListItem[]<p></p>\n<pre><code>NSArchiveListResult thing;\nNSArchiveListItem[] rows  = thing.GetRows();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSArchiveListItem[] GetRows()
    parameters:
    return:
      type: CRMScript.NetServer.NSArchiveListItem[]
  example: 
  - "\n<pre><code>NSArchiveListResult thing;\nNSArchiveListItem[] rows  = thing.GetRows();</code></pre>\n"
- uid: CRMScript.NetServer.NSArchiveListResult.#ctor()
  commentId: M:CRMScript.NetServer.NSArchiveListResult.#ctor()
  id: '#ctor()'
  so.intellisense: Void.NSArchiveListResult
  langs:
  - crmscript
  name: '#ctor()'
  nameWithType: NSArchiveListResult.#ctor()
  fullName: CRMScript.NetServer.NSArchiveListResult.#ctor()
  type: Constructor
  summary: 
  remarks: 
  syntax: 
    content: NSArchiveListResult
  example: 
- uid: CRMScript.NetServer.NSArchiveListResult.SetRowCount(Integer)
  commentId: M:CRMScript.NetServer.NSArchiveListResult.SetRowCount(Integer)
  id: 'SetRowCount(Integer)'
  so.intellisense: NSArchiveListResult.SetRowCount
  langs:
  - crmscript
  name: 'SetRowCount(Integer)'
  nameWithType: NSArchiveListResult.SetRowCount(Integer)
  fullName: CRMScript.NetServer.NSArchiveListResult.SetRowCount(Integer)
  type: Method
  summary: "\nCount of rows, independent of paging. If you order up page 1 with page size 50, the row count may still be 279, that being the number of rows that would have been returned in a  paging-off situation\n"
  remarks: 
  syntax: 
    content: SetRowCount(Integer rowCount)
    parameters:
    - id: rowCount
      type: CRMScript.Global.Integer
      description: 
  example: 
  - "\n<pre><code>NSArchiveListResult thing;\nInteger rowCount;\nthing.SetRowCount(rowCount);</code></pre>\n"
- uid: CRMScript.NetServer.NSArchiveListResult.SetRows()
  commentId: M:CRMScript.NetServer.NSArchiveListResult.SetRows()
  id: 'SetRows()'
  so.intellisense: NSArchiveListResult.SetRows
  langs:
  - crmscript
  name: 'SetRows()'
  nameWithType: NSArchiveListResult.SetRows()
  fullName: CRMScript.NetServer.NSArchiveListResult.SetRows()
  type: Method
  summary: "\nThe actual rows, according to the paging info, of the result. See RowCount for a paging-independent count estimate\n"
  remarks: 
  syntax: 
    content: SetRows(NSArchiveListItem[] rows)
    parameters:
  example: 
  - "\n<pre><code>NSArchiveListResult thing;\nNSArchiveListItem[] rows;\nthing.SetRows(rows);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSArchiveListResult
  commentId: T:CRMScript.NetServer.NSArchiveListResult
  isExternal: true
  name: NSArchiveListResult
  nameWithType: NSArchiveListResult
  fullName: CRMScript.NetServer.NSArchiveListResult
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSArchiveListItem[]
  isExternal: true
  name: NSArchiveListItem[]
  nameWithType: NSArchiveListItem[]
  fullName: CRMScript.NetServer.NSArchiveListItem[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSArchiveListItem
    isExternal: true
    name: NSArchiveListItem
    nameWithType: NSArchiveListItem
    fullName: CRMScript.NetServer.NSArchiveListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSArchiveListItem
  commentId: T:CRMScript.NetServer.NSArchiveListItem
  isExternal: true
  name: NSArchiveListItem
  nameWithType: NSArchiveListItem
  fullName: CRMScript.NetServer.NSArchiveListItem