### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSSelectionAgent
  commentId: T:CRMScript.NetServer.NSSelectionAgent
  id: NSSelectionAgent
  so.intellisense: Void.NSSelectionAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembersFromSearch
  - CRMScript.NetServer.NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  - CRMScript.NetServer.NSSelectionAgent.AddSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.AddSelectionMembersFromSearch
  - CRMScript.NetServer.NSSelectionAgent.CopyContactSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.CopySelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromSelection
  - CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromShadowSelection
  - CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeSettings
  - CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeTask
  - CRMScript.NetServer.NSSelectionAgent.CreateDefaultSelectionEntity
  - CRMScript.NetServer.NSSelectionAgent.CreateNewEntry
  - CRMScript.NetServer.NSSelectionAgent.CreateSelectionEntity
  - CRMScript.NetServer.NSSelectionAgent.CreateSelectionFromSelection
  - CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelection
  - CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  - CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  - CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  - CRMScript.NetServer.NSSelectionAgent.CreateTemporarySelectionFromIds
  - CRMScript.NetServer.NSSelectionAgent.DeleteContacts
  - CRMScript.NetServer.NSSelectionAgent.DeleteEntities
  - CRMScript.NetServer.NSSelectionAgent.DeletePersons
  - CRMScript.NetServer.NSSelectionAgent.DeleteSelectionEntity
  - CRMScript.NetServer.NSSelectionAgent.EditContactSelectionMemberDetails
  - CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembersWithOrderBy
  - CRMScript.NetServer.NSSelectionAgent.GenerateFollowUps
  - CRMScript.NetServer.NSSelectionAgent.GetDuplicateRules
  - CRMScript.NetServer.NSSelectionAgent.GetDuplicates
  - CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteria
  - CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  - CRMScript.NetServer.NSSelectionAgent.GetParentCombinedSelections
  - CRMScript.NetServer.NSSelectionAgent.GetRecipientStatistics
  - CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  - CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  - CRMScript.NetServer.NSSelectionAgent.GetSelectionEntity
  - CRMScript.NetServer.NSSelectionAgent.GetSelectionForFind
  - CRMScript.NetServer.NSSelectionAgent.GetSelectionMembersArchiveRows
  - CRMScript.NetServer.NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  - CRMScript.NetServer.NSSelectionAgent.#ctor
  - CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromIds
  - CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  - CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembers
  - CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersById
  - CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersFromSearch
  - CRMScript.NetServer.NSSelectionAgent.SaveSelectionEntity
  - CRMScript.NetServer.NSSelectionAgent.SetDuplicateRulesStatus
  - CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria
  - CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria2
  - CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria3
  - CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  - CRMScript.NetServer.NSSelectionAgent.StartMailMerge
  - CRMScript.NetServer.NSSelectionAgent.UpdateTypicalSearch
  name: NSSelectionAgent
  nameWithType: NSSelectionAgent
  fullName: CRMScript.NetServer.NSSelectionAgent
  type: Class
  summary: "\nSelections, entities, members and tasks<p></p>\n<pre><code>NSSelectionAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembers
  id: 'AddContactSelectionMembers'
  so.intellisense: NSSelectionAgent.AddContactSelectionMembers
  langs:
  - crmscript
  name: 'AddContactSelectionMembers'
  nameWithType: NSSelectionAgent.AddContactSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembers
  type: Method
  summary: "\nAdds the collection of ContactPersonId as members to the static selection\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembersFromSearch
  commentId: M:CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembersFromSearch
  id: 'AddContactSelectionMembersFromSearch'
  so.intellisense: NSSelectionAgent.AddContactSelectionMembersFromSearch
  langs:
  - crmscript
  name: 'AddContactSelectionMembersFromSearch'
  nameWithType: NSSelectionAgent.AddContactSelectionMembersFromSearch
  fullName: CRMScript.NetServer.NSSelectionAgent.AddContactSelectionMembersFromSearch
  type: Method
  summary: "\nAdds members to the selection from the search result.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString storageKey;\nInteger res = agent.AddContactSelectionMembersFromSearch(selectionId, storageKey);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  commentId: M:CRMScript.NetServer.NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  id: 'AddRemoveContactSelectionMemberInterests'
  so.intellisense: NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  langs:
  - crmscript
  name: 'AddRemoveContactSelectionMemberInterests'
  nameWithType: NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  fullName: CRMScript.NetServer.NSSelectionAgent.AddRemoveContactSelectionMemberInterests
  type: Method
  summary: "\nAdds or removes interests on companies and persons in a selection.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.AddSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.AddSelectionMembers
  id: 'AddSelectionMembers'
  so.intellisense: NSSelectionAgent.AddSelectionMembers
  langs:
  - crmscript
  name: 'AddSelectionMembers'
  nameWithType: NSSelectionAgent.AddSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.AddSelectionMembers
  type: Method
  summary: "\nAdd selection members to a static selection of type others than contacts.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nInteger[] ids;\nInteger res = agent.AddSelectionMembers(selectionId, ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.AddSelectionMembersFromSearch
  commentId: M:CRMScript.NetServer.NSSelectionAgent.AddSelectionMembersFromSearch
  id: 'AddSelectionMembersFromSearch'
  so.intellisense: NSSelectionAgent.AddSelectionMembersFromSearch
  langs:
  - crmscript
  name: 'AddSelectionMembersFromSearch'
  nameWithType: NSSelectionAgent.AddSelectionMembersFromSearch
  fullName: CRMScript.NetServer.NSSelectionAgent.AddSelectionMembersFromSearch
  type: Method
  summary: "\nAdds members from the selection using the search result.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString storageKey;\nInteger res = agent.AddSelectionMembersFromSearch(selectionId, storageKey);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CopyContactSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CopyContactSelectionMembers
  id: 'CopyContactSelectionMembers'
  so.intellisense: NSSelectionAgent.CopyContactSelectionMembers
  langs:
  - crmscript
  name: 'CopyContactSelectionMembers'
  nameWithType: NSSelectionAgent.CopyContactSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.CopyContactSelectionMembers
  type: Method
  summary: "\nCopy contact selection members from selection into an existing selection.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.CopySelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CopySelectionMembers
  id: 'CopySelectionMembers'
  so.intellisense: NSSelectionAgent.CopySelectionMembers
  langs:
  - crmscript
  name: 'CopySelectionMembers'
  nameWithType: NSSelectionAgent.CopySelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.CopySelectionMembers
  type: Method
  summary: "\nCopy selection members from selection into an existing selection.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromSelection
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromSelection
  id: 'CreateContactSelectionFromSelection'
  so.intellisense: NSSelectionAgent.CreateContactSelectionFromSelection
  langs:
  - crmscript
  name: 'CreateContactSelectionFromSelection'
  nameWithType: NSSelectionAgent.CreateContactSelectionFromSelection
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromSelection
  type: Method
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString name;\nInteger targetSelectionType;\nBool copyMembers;\nNSSelectionEntity res = agent.CreateContactSelectionFromSelection(selectionId, name, targetSelectionType, copyMembers);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromShadowSelection
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromShadowSelection
  id: 'CreateContactSelectionFromShadowSelection'
  so.intellisense: NSSelectionAgent.CreateContactSelectionFromShadowSelection
  langs:
  - crmscript
  name: 'CreateContactSelectionFromShadowSelection'
  nameWithType: NSSelectionAgent.CreateContactSelectionFromShadowSelection
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateContactSelectionFromShadowSelection
  type: Method
  summary: "\nCreates a new contact selection based on contact selection members from an existing shadow sale, appointment, project or document selection. The new selection will always be static even if the original selection is dynamic.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString name;\nNSSelectionEntity res = agent.CreateContactSelectionFromShadowSelection(selectionId, name);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeSettings
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeSettings
  id: 'CreateDefaultMailMergeSettings'
  so.intellisense: NSSelectionAgent.CreateDefaultMailMergeSettings
  langs:
  - crmscript
  name: 'CreateDefaultMailMergeSettings'
  nameWithType: NSSelectionAgent.CreateDefaultMailMergeSettings
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeSettings
  type: Method
  summary: "\nSet default values into a new NSMailMergeSettings.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSMailMergeSettings<p></p>\n<pre><code>NSSelectionAgent agent;\nNSMailMergeSettings thing = agent.CreateDefaultMailMergeSettings();\nthing = agent.SaveMailMergeSettings(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSMailMergeSettings thing = agent.CreateDefaultMailMergeSettings();\nthing = agent.SaveMailMergeSettings(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeTask
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeTask
  id: 'CreateDefaultMailMergeTask'
  so.intellisense: NSSelectionAgent.CreateDefaultMailMergeTask
  langs:
  - crmscript
  name: 'CreateDefaultMailMergeTask'
  nameWithType: NSSelectionAgent.CreateDefaultMailMergeTask
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateDefaultMailMergeTask
  type: Method
  summary: "\nSet default values into a new NSMailMergeTask.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSMailMergeTask<p></p>\n<pre><code>NSSelectionAgent agent;\nNSMailMergeTask thing = agent.CreateDefaultMailMergeTask();\nthing = agent.SaveMailMergeTask(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSMailMergeTask thing = agent.CreateDefaultMailMergeTask();\nthing = agent.SaveMailMergeTask(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateDefaultSelectionEntity
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateDefaultSelectionEntity
  id: 'CreateDefaultSelectionEntity'
  so.intellisense: NSSelectionAgent.CreateDefaultSelectionEntity
  langs:
  - crmscript
  name: 'CreateDefaultSelectionEntity'
  nameWithType: NSSelectionAgent.CreateDefaultSelectionEntity
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateDefaultSelectionEntity
  type: Method
  summary: "\nSet default values into a new NSSelectionEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSSelectionEntity<p></p>\n<pre><code>NSSelectionAgent agent;\nNSSelectionEntity thing = agent.CreateDefaultSelectionEntity();\nthing = agent.SaveSelectionEntity(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSSelectionEntity thing = agent.CreateDefaultSelectionEntity();\nthing = agent.SaveSelectionEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateNewEntry
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateNewEntry
  id: 'CreateNewEntry'
  so.intellisense: NSSelectionAgent.CreateNewEntry
  langs:
  - crmscript
  name: 'CreateNewEntry'
  nameWithType: NSSelectionAgent.CreateNewEntry
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateNewEntry
  type: Method
  summary: "\nCreates a new selection based on external duplicate\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSDuplicateEntry duplicate;\nInteger res = agent.CreateNewEntry(duplicate);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateSelectionEntity
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateSelectionEntity
  id: 'CreateSelectionEntity'
  so.intellisense: NSSelectionAgent.CreateSelectionEntity
  langs:
  - crmscript
  name: 'CreateSelectionEntity'
  nameWithType: NSSelectionAgent.CreateSelectionEntity
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateSelectionEntity
  type: Method
  summary: "\nCreate (but do not save) a new selection entity, for the current user and the given target table; other fields populated as by CreateDefaultSelectionEntity()\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nString targetTableName;\nNSSelectionEntity res = agent.CreateSelectionEntity(targetTableName);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateSelectionFromSelection
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateSelectionFromSelection
  id: 'CreateSelectionFromSelection'
  so.intellisense: NSSelectionAgent.CreateSelectionFromSelection
  langs:
  - crmscript
  name: 'CreateSelectionFromSelection'
  nameWithType: NSSelectionAgent.CreateSelectionFromSelection
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateSelectionFromSelection
  type: Method
  summary: "\nCreates a new selection based on selection members from an existing selection.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString name;\nInteger targetSelectionType;\nBool copyMembers;\nNSSelectionEntity res = agent.CreateSelectionFromSelection(selectionId, name, targetSelectionType, copyMembers);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelection
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelection
  id: 'CreateTemporaryContactSelection'
  so.intellisense: NSSelectionAgent.CreateTemporaryContactSelection
  langs:
  - crmscript
  name: 'CreateTemporaryContactSelection'
  nameWithType: NSSelectionAgent.CreateTemporaryContactSelection
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelection
  type: Method
  summary: "\nCreates a temporary selection.<p></p>\n<strong>Returns:</strong>NSSelectionEntity<p></p>\n<pre><code>NSSelectionAgent agent;\nNSSelectionEntity res = agent.CreateTemporaryContactSelection();</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSSelectionEntity res = agent.CreateTemporaryContactSelection();</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  id: 'CreateTemporaryContactSelectionFromContactPersonIds'
  so.intellisense: NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  langs:
  - crmscript
  name: 'CreateTemporaryContactSelectionFromContactPersonIds'
  nameWithType: NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  type: Method
  summary: "\nCreates a temporary selection with members from a collection of ContactPerson id's.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSContactPersonId[] contactPersonIds;\nNSSelectionEntity res = agent.CreateTemporaryContactSelectionFromContactPersonIds(contactPersonIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  id: 'CreateTemporaryContactSelectionFromProjectMembers'
  so.intellisense: NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  langs:
  - crmscript
  name: 'CreateTemporaryContactSelectionFromProjectMembers'
  nameWithType: NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  type: Method
  summary: "\nCreates a temporary selection with members from an existing project.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger projectId;\nNSSelectionEntity res = agent.CreateTemporaryContactSelectionFromProjectMembers(projectId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  id: 'CreateTemporaryContactSelectionFromSelectionMemberIds'
  so.intellisense: NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  langs:
  - crmscript
  name: 'CreateTemporaryContactSelectionFromSelectionMemberIds'
  nameWithType: NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  type: Method
  summary: "\nCreates a temporary selection with members from a collection of selectionmember id's.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nInteger[] selectionMemberIds;\nNSSelectionEntity res = agent.CreateTemporaryContactSelectionFromSelectionMemberIds(selectionId, selectionMemberIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.CreateTemporarySelectionFromIds
  commentId: M:CRMScript.NetServer.NSSelectionAgent.CreateTemporarySelectionFromIds
  id: 'CreateTemporarySelectionFromIds'
  so.intellisense: NSSelectionAgent.CreateTemporarySelectionFromIds
  langs:
  - crmscript
  name: 'CreateTemporarySelectionFromIds'
  nameWithType: NSSelectionAgent.CreateTemporarySelectionFromIds
  fullName: CRMScript.NetServer.NSSelectionAgent.CreateTemporarySelectionFromIds
  type: Method
  summary: "\nCreates a temporary selection with members from a collection of entity id's.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger[] ids;\nInteger targetTableNumber;\nNSSelectionEntity res = agent.CreateTemporarySelectionFromIds(ids, targetTableNumber);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.DeleteContacts
  commentId: M:CRMScript.NetServer.NSSelectionAgent.DeleteContacts
  id: 'DeleteContacts'
  so.intellisense: NSSelectionAgent.DeleteContacts
  langs:
  - crmscript
  name: 'DeleteContacts'
  nameWithType: NSSelectionAgent.DeleteContacts
  fullName: CRMScript.NetServer.NSSelectionAgent.DeleteContacts
  type: Method
  summary: "\nDeletes all contacts from a selection. If a contact does not have delete rights, it will be skipped.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.DeleteEntities
  commentId: M:CRMScript.NetServer.NSSelectionAgent.DeleteEntities
  id: 'DeleteEntities'
  so.intellisense: NSSelectionAgent.DeleteEntities
  langs:
  - crmscript
  name: 'DeleteEntities'
  nameWithType: NSSelectionAgent.DeleteEntities
  fullName: CRMScript.NetServer.NSSelectionAgent.DeleteEntities
  type: Method
  summary: "\nDeletes all entities from a selection. If an entity does not have delete rights, it will be skipped.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.DeletePersons
  commentId: M:CRMScript.NetServer.NSSelectionAgent.DeletePersons
  id: 'DeletePersons'
  so.intellisense: NSSelectionAgent.DeletePersons
  langs:
  - crmscript
  name: 'DeletePersons'
  nameWithType: NSSelectionAgent.DeletePersons
  fullName: CRMScript.NetServer.NSSelectionAgent.DeletePersons
  type: Method
  summary: "\nDeletes all persons from a selection. If a person does not have delete rights, it will be skipped.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.DeleteSelectionEntity
  commentId: M:CRMScript.NetServer.NSSelectionAgent.DeleteSelectionEntity
  id: 'DeleteSelectionEntity'
  so.intellisense: NSSelectionAgent.DeleteSelectionEntity
  langs:
  - crmscript
  name: 'DeleteSelectionEntity'
  nameWithType: NSSelectionAgent.DeleteSelectionEntity
  fullName: CRMScript.NetServer.NSSelectionAgent.DeleteSelectionEntity
  type: Method
  summary: "\nDeletes the NSSelectionEntity\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nagent.DeleteSelectionEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.EditContactSelectionMemberDetails
  commentId: M:CRMScript.NetServer.NSSelectionAgent.EditContactSelectionMemberDetails
  id: 'EditContactSelectionMemberDetails'
  so.intellisense: NSSelectionAgent.EditContactSelectionMemberDetails
  langs:
  - crmscript
  name: 'EditContactSelectionMemberDetails'
  nameWithType: NSSelectionAgent.EditContactSelectionMemberDetails
  fullName: CRMScript.NetServer.NSSelectionAgent.EditContactSelectionMemberDetails
  type: Method
  summary: "\nEdit company and contact details in a selection based on contents in selectionMemberEditValues.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembers
  id: 'ExportSelectionMembers'
  so.intellisense: NSSelectionAgent.ExportSelectionMembers
  langs:
  - crmscript
  name: 'ExportSelectionMembers'
  nameWithType: NSSelectionAgent.ExportSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembers
  type: Method
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString templateName;\nBool useContacts;\nByte[] res = agent.ExportSelectionMembers(selectionId, templateName, useContacts);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembersWithOrderBy
  commentId: M:CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembersWithOrderBy
  id: 'ExportSelectionMembersWithOrderBy'
  so.intellisense: NSSelectionAgent.ExportSelectionMembersWithOrderBy
  langs:
  - crmscript
  name: 'ExportSelectionMembersWithOrderBy'
  nameWithType: NSSelectionAgent.ExportSelectionMembersWithOrderBy
  fullName: CRMScript.NetServer.NSSelectionAgent.ExportSelectionMembersWithOrderBy
  type: Method
  summary: "\nExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString templateName;\nBool useContacts;\nString orderBy;\nByte[] res = agent.ExportSelectionMembersWithOrderBy(selectionId, templateName, useContacts, orderBy);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GenerateFollowUps
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GenerateFollowUps
  id: 'GenerateFollowUps'
  so.intellisense: NSSelectionAgent.GenerateFollowUps
  langs:
  - crmscript
  name: 'GenerateFollowUps'
  nameWithType: NSSelectionAgent.GenerateFollowUps
  fullName: CRMScript.NetServer.NSSelectionAgent.GenerateFollowUps
  type: Method
  summary: "\nGenerate follow-ups for members in the selection.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.GetDuplicateRules
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetDuplicateRules
  id: 'GetDuplicateRules'
  so.intellisense: NSSelectionAgent.GetDuplicateRules
  langs:
  - crmscript
  name: 'GetDuplicateRules'
  nameWithType: NSSelectionAgent.GetDuplicateRules
  fullName: CRMScript.NetServer.NSSelectionAgent.GetDuplicateRules
  type: Method
  summary: "\nRetrieve all available duplicate rules for selection<p></p>\n<strong>Returns:</strong>NSDuplicateRule[]<p></p>\n<pre><code>NSSelectionAgent agent;\nNSDuplicateRule[] res = agent.GetDuplicateRules();</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSDuplicateRule[] res = agent.GetDuplicateRules();</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetDuplicates
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetDuplicates
  id: 'GetDuplicates'
  so.intellisense: NSSelectionAgent.GetDuplicates
  langs:
  - crmscript
  name: 'GetDuplicates'
  nameWithType: NSSelectionAgent.GetDuplicates
  fullName: CRMScript.NetServer.NSSelectionAgent.GetDuplicates
  type: Method
  summary: "\nGet duplicates(exact or similar in the database) based on the name\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nString name;\nNSDuplicateEntry[] res = agent.GetDuplicates(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteria
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteria
  id: 'GetDynamicSelectionCriteria'
  so.intellisense: NSSelectionAgent.GetDynamicSelectionCriteria
  langs:
  - crmscript
  name: 'GetDynamicSelectionCriteria'
  nameWithType: NSSelectionAgent.GetDynamicSelectionCriteria
  fullName: CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteria
  type: Method
  summary: "\nGet the criteria for this dynamic selection.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSArchiveRestrictionInfo[] res = agent.GetDynamicSelectionCriteria(selectionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  id: 'GetDynamicSelectionCriteriaGroups'
  so.intellisense: NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  langs:
  - crmscript
  name: 'GetDynamicSelectionCriteriaGroups'
  nameWithType: NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  fullName: CRMScript.NetServer.NSSelectionAgent.GetDynamicSelectionCriteriaGroups
  type: Method
  summary: "\nGet the criteria for this dynamic selection. This call supports multiple criteria groups.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSArchiveRestrictionGroup[] res = agent.GetDynamicSelectionCriteriaGroups(selectionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetParentCombinedSelections
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetParentCombinedSelections
  id: 'GetParentCombinedSelections'
  so.intellisense: NSSelectionAgent.GetParentCombinedSelections
  langs:
  - crmscript
  name: 'GetParentCombinedSelections'
  nameWithType: NSSelectionAgent.GetParentCombinedSelections
  fullName: CRMScript.NetServer.NSSelectionAgent.GetParentCombinedSelections
  type: Method
  summary: "\nGet a list of all selection ids where the given selection is used to create a combined selection.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nInteger[] res = agent.GetParentCombinedSelections(selectionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatistics
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetRecipientStatistics
  id: 'GetRecipientStatistics'
  so.intellisense: NSSelectionAgent.GetRecipientStatistics
  langs:
  - crmscript
  name: 'GetRecipientStatistics'
  nameWithType: NSSelectionAgent.GetRecipientStatistics
  fullName: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatistics
  type: Method
  summary: "\nReturns a NSRecipientStatistics object with a count of addresses, emailaddresses and emailaddresses.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSRecipientStatistics res = agent.GetRecipientStatistics(selectionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  id: 'GetRecipientStatisticsFromContactPersonIds'
  so.intellisense: NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  langs:
  - crmscript
  name: 'GetRecipientStatisticsFromContactPersonIds'
  nameWithType: NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  fullName: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromContactPersonIds
  type: Method
  summary: "\nReturns a NSRecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on contact and persons in a collection of ContactPersonId.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSContactPersonId[] contactPersonIds;\nNSRecipientStatistics res = agent.GetRecipientStatisticsFromContactPersonIds(contactPersonIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  id: 'GetRecipientStatisticsFromProjectMembers'
  so.intellisense: NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  langs:
  - crmscript
  name: 'GetRecipientStatisticsFromProjectMembers'
  nameWithType: NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.GetRecipientStatisticsFromProjectMembers
  type: Method
  summary: "\nReturns a NSRecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on members in a project.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger projectId;\nNSRecipientStatistics res = agent.GetRecipientStatisticsFromProjectMembers(projectId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetSelectionEntity
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetSelectionEntity
  id: 'GetSelectionEntity'
  so.intellisense: NSSelectionAgent.GetSelectionEntity
  langs:
  - crmscript
  name: 'GetSelectionEntity'
  nameWithType: NSSelectionAgent.GetSelectionEntity
  fullName: CRMScript.NetServer.NSSelectionAgent.GetSelectionEntity
  type: Method
  summary: "\nGets a NSSelectionEntity object.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nNSSelectionEntity thing = agent.GetSelectionEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetSelectionForFind
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetSelectionForFind
  id: 'GetSelectionForFind'
  so.intellisense: NSSelectionAgent.GetSelectionForFind
  langs:
  - crmscript
  name: 'GetSelectionForFind'
  nameWithType: NSSelectionAgent.GetSelectionForFind
  fullName: CRMScript.NetServer.NSSelectionAgent.GetSelectionForFind
  type: Method
  summary: "\nObtain a selection for the given entity, for the current user, of type WorkingSetForFind. Optionally populate criteria from the TypicalSearches system\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nString entityName;\nInteger typicalSearchId;\nNSSelectionForFind res = agent.GetSelectionForFind(entityName, typicalSearchId);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetSelectionMembersArchiveRows
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetSelectionMembersArchiveRows
  id: 'GetSelectionMembersArchiveRows'
  so.intellisense: NSSelectionAgent.GetSelectionMembersArchiveRows
  langs:
  - crmscript
  name: 'GetSelectionMembersArchiveRows'
  nameWithType: NSSelectionAgent.GetSelectionMembersArchiveRows
  fullName: CRMScript.NetServer.NSSelectionAgent.GetSelectionMembersArchiveRows
  type: Method
  summary: "\nGet the list of members in this selection. The type of members depends on the target table of the selection.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString select;\nNSArchiveListItem[] res = agent.GetSelectionMembersArchiveRows(selectionId, select);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  commentId: M:CRMScript.NetServer.NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  id: 'GetSelectionShadowMembersArchiveRows'
  so.intellisense: NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  langs:
  - crmscript
  name: 'GetSelectionShadowMembersArchiveRows'
  nameWithType: NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  fullName: CRMScript.NetServer.NSSelectionAgent.GetSelectionShadowMembersArchiveRows
  type: Method
  summary: "\nGet the list of members in this selection's shadow (i.e. the list of contacts + persons referenced in the main selection).\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString select;\nNSArchiveListItem[] res = agent.GetSelectionShadowMembersArchiveRows(selectionId, select);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.#ctor
  commentId: M:CRMScript.NetServer.NSSelectionAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSSelectionAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSSelectionAgent.#ctor
  fullName: CRMScript.NetServer.NSSelectionAgent.#ctor
  type: Method
  summary: "\nSelections, entities, members and tasks<p></p>\n<pre><code>NSSelectionAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembers
  id: 'RemoveContactSelectionMembers'
  so.intellisense: NSSelectionAgent.RemoveContactSelectionMembers
  langs:
  - crmscript
  name: 'RemoveContactSelectionMembers'
  nameWithType: NSSelectionAgent.RemoveContactSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembers
  type: Method
  summary: "\nRemoves members from the selection as  specified in the collection of ContactPersonId.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromIds
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromIds
  id: 'RemoveContactSelectionMembersFromIds'
  so.intellisense: NSSelectionAgent.RemoveContactSelectionMembersFromIds
  langs:
  - crmscript
  name: 'RemoveContactSelectionMembersFromIds'
  nameWithType: NSSelectionAgent.RemoveContactSelectionMembersFromIds
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromIds
  type: Method
  summary: "\nRemoves members from the selection using a collection a selectionmember id's. Members can only be removed from single selection.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  id: 'RemoveContactSelectionMembersFromSearch'
  so.intellisense: NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  langs:
  - crmscript
  name: 'RemoveContactSelectionMembersFromSearch'
  nameWithType: NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveContactSelectionMembersFromSearch
  type: Method
  summary: "\nRemoves members from the selection using the search result.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString storageKey;\nInteger res = agent.RemoveContactSelectionMembersFromSearch(selectionId, storageKey);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembers
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembers
  id: 'RemoveSelectionMembers'
  so.intellisense: NSSelectionAgent.RemoveSelectionMembers
  langs:
  - crmscript
  name: 'RemoveSelectionMembers'
  nameWithType: NSSelectionAgent.RemoveSelectionMembers
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembers
  type: Method
  summary: "\nRemoves members from the selection as  specified in the collection of entity ids. The ids are selection member ids (selection member primary key)\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersById
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersById
  id: 'RemoveSelectionMembersById'
  so.intellisense: NSSelectionAgent.RemoveSelectionMembersById
  langs:
  - crmscript
  name: 'RemoveSelectionMembersById'
  nameWithType: NSSelectionAgent.RemoveSelectionMembersById
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersById
  type: Method
  summary: "\nRemoves members from the selection as specified in the collection of entity ids. The ids can be a collection of sale ids, or other supported types.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersFromSearch
  commentId: M:CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersFromSearch
  id: 'RemoveSelectionMembersFromSearch'
  so.intellisense: NSSelectionAgent.RemoveSelectionMembersFromSearch
  langs:
  - crmscript
  name: 'RemoveSelectionMembersFromSearch'
  nameWithType: NSSelectionAgent.RemoveSelectionMembersFromSearch
  fullName: CRMScript.NetServer.NSSelectionAgent.RemoveSelectionMembersFromSearch
  type: Method
  summary: "\nRemoves members from the selection using the search result.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString storageKey;\nInteger res = agent.RemoveSelectionMembersFromSearch(selectionId, storageKey);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.SaveSelectionEntity
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SaveSelectionEntity
  id: 'SaveSelectionEntity'
  so.intellisense: NSSelectionAgent.SaveSelectionEntity
  langs:
  - crmscript
  name: 'SaveSelectionEntity'
  nameWithType: NSSelectionAgent.SaveSelectionEntity
  fullName: CRMScript.NetServer.NSSelectionAgent.SaveSelectionEntity
  type: Method
  summary: "\nCRMScript method in the NSSelectionAgent class that creates or updates an NSSelectionEntityUpdates the existing NSSelectionEntity or creates a new NSSelectionEntity if the ID parameter is 0.<p></p>\nReturns the new or updated NSSelectionEntity<p></p>\n<code>NSSelectionEntity SaveSelectionEntity(NSSelectionEntity selectionEntity)</code>\n"
  example: 
  - "\n<pre><code>NSSelection  agent;\nNSSelectionEntity thing = agent.CreateDefaultSelectionEntity();\nthing = agent.SaveSelectionEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.SetDuplicateRulesStatus
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SetDuplicateRulesStatus
  id: 'SetDuplicateRulesStatus'
  so.intellisense: NSSelectionAgent.SetDuplicateRulesStatus
  langs:
  - crmscript
  name: 'SetDuplicateRulesStatus'
  nameWithType: NSSelectionAgent.SetDuplicateRulesStatus
  fullName: CRMScript.NetServer.NSSelectionAgent.SetDuplicateRulesStatus
  type: Method
  summary: "\nSet which duplicate rules should be active or not\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria
  id: 'SetDynamicSelectionCriteria'
  so.intellisense: NSSelectionAgent.SetDynamicSelectionCriteria
  langs:
  - crmscript
  name: 'SetDynamicSelectionCriteria'
  nameWithType: NSSelectionAgent.SetDynamicSelectionCriteria
  fullName: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria
  type: Method
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSArchiveRestrictionInfo[] criteria;\nNSArchiveRestrictionInfo[] res = agent.SetDynamicSelectionCriteria(selectionId, criteria);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria2
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria2
  id: 'SetDynamicSelectionCriteria2'
  so.intellisense: NSSelectionAgent.SetDynamicSelectionCriteria2
  langs:
  - crmscript
  name: 'SetDynamicSelectionCriteria2'
  nameWithType: NSSelectionAgent.SetDynamicSelectionCriteria2
  fullName: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria2
  type: Method
  summary: "\nUpdate the criteria for this dynamic selection using string. Criteria are parsed from the OData filter form: ''name startswith 'foo' and category in (1,2,3)''\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nString filter;\nNSArchiveRestrictionInfo[] res = agent.SetDynamicSelectionCriteria2(selectionId, filter);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria3
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria3
  id: 'SetDynamicSelectionCriteria3'
  so.intellisense: NSSelectionAgent.SetDynamicSelectionCriteria3
  langs:
  - crmscript
  name: 'SetDynamicSelectionCriteria3'
  nameWithType: NSSelectionAgent.SetDynamicSelectionCriteria3
  fullName: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteria3
  type: Method
  summary: "\nUpdate the criteria for this dynamic selection. Use criteria as either restriction objects or OData string format. Criteria are parsed from the OData filter form: ''name startswith 'foo' and category in (1,2,3)''\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSArchiveRestrictionInfo[] criteria;\nString filter;\nNSArchiveRestrictionInfo[] res = agent.SetDynamicSelectionCriteria3(selectionId, criteria, filter);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  commentId: M:CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  id: 'SetDynamicSelectionCriteriaGroups'
  so.intellisense: NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  langs:
  - crmscript
  name: 'SetDynamicSelectionCriteriaGroups'
  nameWithType: NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  fullName: CRMScript.NetServer.NSSelectionAgent.SetDynamicSelectionCriteriaGroups
  type: Method
  summary: "\nUpdate the criteria for this dynamic selection. Replaces existing criteria with the new values. This call supports multiple criteria groups.\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nInteger selectionId;\nNSArchiveRestrictionGroup[] criteria;\nNSArchiveRestrictionGroup[] res = agent.SetDynamicSelectionCriteriaGroups(selectionId, criteria);</code></pre>\n"
- uid: CRMScript.NetServer.NSSelectionAgent.StartMailMerge
  commentId: M:CRMScript.NetServer.NSSelectionAgent.StartMailMerge
  id: 'StartMailMerge'
  so.intellisense: NSSelectionAgent.StartMailMerge
  langs:
  - crmscript
  name: 'StartMailMerge'
  nameWithType: NSSelectionAgent.StartMailMerge
  fullName: CRMScript.NetServer.NSSelectionAgent.StartMailMerge
  type: Method
  summary: "\nStart a mailmerge operation with specified settings.\n"
  example: 
- uid: CRMScript.NetServer.NSSelectionAgent.UpdateTypicalSearch
  commentId: M:CRMScript.NetServer.NSSelectionAgent.UpdateTypicalSearch
  id: 'UpdateTypicalSearch'
  so.intellisense: NSSelectionAgent.UpdateTypicalSearch
  langs:
  - crmscript
  name: 'UpdateTypicalSearch'
  nameWithType: NSSelectionAgent.UpdateTypicalSearch
  fullName: CRMScript.NetServer.NSSelectionAgent.UpdateTypicalSearch
  type: Method
  summary: "\nUpdate (import) TypicalSearch information in the database\n"
  example: 
  - "\n<pre><code>NSSelectionAgent agent;\nTypicalSearches searches;\nString res = agent.UpdateTypicalSearch(searches);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSSelectionAgent
  commentId: T:CRMScript.NetServer.NSSelectionAgent
  isExternal: true
  name: NSSelectionAgent
  nameWithType: NSSelectionAgent
  fullName: CRMScript.NetServer.NSSelectionAgent