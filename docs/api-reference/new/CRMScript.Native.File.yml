### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.File
  commentId: T:CRMScript.Native.File
  id: File
  so.intellisense: Void.File
  langs:
  - crmscript
  children:
  - CRMScript.Native.File.close()
  - CRMScript.Native.File.eof()
  - CRMScript.Native.File.#ctor()
  - CRMScript.Native.File.flush()
  - CRMScript.Native.File.open(String,String,String)
  - CRMScript.Native.File.readAll()
  - CRMScript.Native.File.readBinary()
  - CRMScript.Native.File.readLine()
  - CRMScript.Native.File.rewind()
  - CRMScript.Native.File.unlink()
  - CRMScript.Native.File.write(String,String)
  - CRMScript.Native.File.writeBinary(Byte[])
  name: File
  nameWithType: File
  fullName: CRMScript.Native.File
  type: Class
  summary: "\nThis represents a file.<p></p>\nUse open before you call any other methods.\n"
  example: 
  - "\n<pre><code>File f;\n\nf.open(&quot;test.txt&quot;, &quot;a+&quot;); // Opening file appending (and creating)\nf.write(&quot;test&quot;);\nf.close(); // Closing the file when done writing\n\nFile g;\n\ng.open(&quot;test.txt&quot;, &quot;r&quot;); // Opening file for reading only\nprint(g.readAll());</code></pre>\n"
- uid: CRMScript.Native.File.close()
  commentId: M:CRMScript.Native.File.close()
  id: 'close()'
  so.intellisense: File.close
  langs:
  - crmscript
  name: 'close()'
  nameWithType: File.close()
  fullName: CRMScript.Native.File.close()
  type: Method
  summary: "\nThis function closes the file, the File object is then ready for<code>open()</code>-ing a new file\n"
  remarks: 
  syntax: 
    content: close()
    parameters:
  example: 
- uid: CRMScript.Native.File.eof()
  commentId: M:CRMScript.Native.File.eof()
  id: 'eof()'
  so.intellisense: File.eof
  langs:
  - crmscript
  name: 'eof()'
  nameWithType: File.eof()
  fullName: CRMScript.Native.File.eof()
  type: Method
  summary: "\n<ul><li><strong>Returns:</strong>True if a read passed the end of file has been attempted.</li></ul>When you read lines in a loop, you can break out of the loop when this function return true.\n"
  remarks: 
  syntax: 
    content: eof()
    parameters:
  example: 
- uid: CRMScript.Native.File.#ctor()
  commentId: M:CRMScript.Native.File.#ctor()
  id: '#ctor()'
  so.intellisense: Void.File
  langs:
  - crmscript
  name: '#ctor()'
  nameWithType: File.#ctor()
  fullName: CRMScript.Native.File.#ctor()
  type: Constructor
  summary: "\nThis represents a file.<p></p>\nUse open before you call any other methods.\n"
  remarks: 
  syntax: 
    content: File
  example: 
  - "\n<pre><code>File f;\n\nf.open(&quot;test.txt&quot;, &quot;a+&quot;); // Opening file appending (and creating)\nf.write(&quot;test&quot;);\nf.close(); // Closing the file when done writing\n\nFile g;\n\ng.open(&quot;test.txt&quot;, &quot;r&quot;); // Opening file for reading only\nprint(g.readAll());</code></pre>\n"
- uid: CRMScript.Native.File.flush()
  commentId: M:CRMScript.Native.File.flush()
  id: 'flush()'
  so.intellisense: File.flush
  langs:
  - crmscript
  name: 'flush()'
  nameWithType: File.flush()
  fullName: CRMScript.Native.File.flush()
  type: Method
  summary: "\nFlush will empty the output buffer, writing the data to the file.\n"
  remarks: 
  syntax: 
    content: flush()
    parameters:
  example: 
- uid: CRMScript.Native.File.open(String,String,String)
  commentId: M:CRMScript.Native.File.open(String,String,String)
  id: 'open(String,String,String)'
  so.intellisense: File.open
  langs:
  - crmscript
  name: 'open(String,String,String)'
  nameWithType: File.open(String,String,String)
  fullName: CRMScript.Native.File.open(String,String,String)
  type: Method
  summary: "\nCRMScript method in the File class that opens the file to be available for other callsOpens the file to be available for other method calls.<p></p>\nYou can optionally provide a codepage.\n"
  remarks: "\n<h3>Modes</h3><table><thead><tr><th>Mode</th><th>Description</th></tr></thead><tbody><tr><td>r or rb</td><td>Open file for reading.</td></tr><tr><td>w or wb</td><td>Truncate to zero length or create a file for writing.</td></tr><tr><td>a or ab</td><td>Append; open or create a file for writing at the end-of-file.</td></tr><tr><td>r+ or rb+ or r+b</td><td>Open file for update (reading and writing).</td></tr><tr><td>w+ or wb+ or w+b</td><td>Truncate to zero length or create a file for update.</td></tr></tbody></table>\n"
  syntax: 
    content: open()
    parameters:
    - id: filename
      type: CRMScript.Global.String
      description: Path to the file
    - id: mode
      type: CRMScript.Global.String
      description: How to open the file
    - id: codepage
      type: CRMScript.Global.String
      description: Optional. What text codepage the file is in. Default is ISO-8859-1 (Latin-1), but UTF-8 is common for Unicode text files.
  example: 
- uid: CRMScript.Native.File.readAll()
  commentId: M:CRMScript.Native.File.readAll()
  id: 'readAll()'
  so.intellisense: File.readAll
  langs:
  - crmscript
  name: 'readAll()'
  nameWithType: File.readAll()
  fullName: CRMScript.Native.File.readAll()
  type: Method
  summary: "\n<ul><li><strong>Returns:</strong>All text from the file.</li></ul>\n"
  remarks: 
  syntax: 
    content: readAll()
    parameters:
  example: 
- uid: CRMScript.Native.File.readBinary()
  commentId: M:CRMScript.Native.File.readBinary()
  id: 'readBinary()'
  so.intellisense: File.readBinary
  langs:
  - crmscript
  name: 'readBinary()'
  nameWithType: File.readBinary()
  fullName: CRMScript.Native.File.readBinary()
  type: Method
  summary: "\n<ul><li><strong>Returns:</strong>Reads the file and returns binary data in a Byte array</li></ul>\n"
  remarks: 
  syntax: 
    content: readBinary()
    parameters:
  example: 
- uid: CRMScript.Native.File.readLine()
  commentId: M:CRMScript.Native.File.readLine()
  id: 'readLine()'
  so.intellisense: File.readLine
  langs:
  - crmscript
  name: 'readLine()'
  nameWithType: File.readLine()
  fullName: CRMScript.Native.File.readLine()
  type: Method
  summary: "\n<ul><li><strong>Returns:</strong>The next line from the file or a null string if no more data in the file.</li></ul>\n"
  remarks: 
  syntax: 
    content: readLine()
    parameters:
  example: 
- uid: CRMScript.Native.File.rewind()
  commentId: M:CRMScript.Native.File.rewind()
  id: 'rewind()'
  so.intellisense: File.rewind
  langs:
  - crmscript
  name: 'rewind()'
  nameWithType: File.rewind()
  fullName: CRMScript.Native.File.rewind()
  type: Method
  summary: "\nThis function will set the current file pointer to the beginning of the file.\n"
  remarks: 
  syntax: 
    content: rewind()
    parameters:
  example: 
- uid: CRMScript.Native.File.unlink()
  commentId: M:CRMScript.Native.File.unlink()
  id: 'unlink()'
  so.intellisense: File.unlink
  langs:
  - crmscript
  name: 'unlink()'
  nameWithType: File.unlink()
  fullName: CRMScript.Native.File.unlink()
  type: Method
  summary: "\nThis function will delete the file.\n"
  remarks: 
  syntax: 
    content: unlink()
    parameters:
  example: 
- uid: CRMScript.Native.File.write(String,String)
  commentId: M:CRMScript.Native.File.write(String,String)
  id: 'write(String,String)'
  so.intellisense: File.write
  langs:
  - crmscript
  name: 'write(String,String)'
  nameWithType: File.write(String,String)
  fullName: CRMScript.Native.File.write(String,String)
  type: Method
  summary: 
  remarks: 
  syntax: 
    content: write(String data)
    parameters:
    - id: data
      type: CRMScript.Global.String
      description: 
    - id: Data
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.File.writeBinary(Byte[])
  commentId: M:CRMScript.Native.File.writeBinary(Byte[])
  id: 'writeBinary(Byte[])'
  so.intellisense: File.writeBinary
  langs:
  - crmscript
  name: 'writeBinary(Byte[])'
  nameWithType: File.writeBinary(Byte[])
  fullName: CRMScript.Native.File.writeBinary(Byte[])
  type: Method
  summary: "\nWrite binary data to file.\n"
  remarks: 
  syntax: 
    content: writeBinary(Byte[] data)
    parameters:
    - id: data
      type: CRMScript.Global.Byte[]
      description: 
  example: 
references:
- uid: CRMScript.Native.File
  commentId: T:CRMScript.Native.File
  isExternal: true
  name: File
  nameWithType: File
  fullName: CRMScript.Native.File
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: CRMScript.Global.Byte[]
  spec.crmscript:
  - uid: CRMScript.Global.Byte
    isExternal: true
    name: Byte
    nameWithType: Byte
    fullName: CRMScript.Global.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Byte
  commentId: T:CRMScript.Global.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: CRMScript.Global.Byte