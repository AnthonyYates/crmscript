### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSUserAgent
  commentId: T:CRMScript.NetServer.NSUserAgent
  id: NSUserAgent
  so.intellisense: Void.NSUserAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSUserAgent.AddOwnerContact
  - CRMScript.NetServer.NSUserAgent.CanChangePassword
  - CRMScript.NetServer.NSUserAgent.ChangeOwnPassword
  - CRMScript.NetServer.NSUserAgent.ChangePassword
  - CRMScript.NetServer.NSUserAgent.ChangePasswordFromName
  - CRMScript.NetServer.NSUserAgent.ChangeUserType
  - CRMScript.NetServer.NSUserAgent.CheckAccessGatewayRegistration
  - CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntity
  - CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntityFromType
  - CRMScript.NetServer.NSUserAgent.CreateDefaultServiceAuth
  - CRMScript.NetServer.NSUserAgent.CreateDefaultUntrustedCredentials
  - CRMScript.NetServer.NSUserAgent.CreateDefaultUser
  - CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserType
  - CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  - CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  - CRMScript.NetServer.NSUserAgent.CreateExternalUser
  - CRMScript.NetServer.NSUserAgent.CreateUserGroup
  - CRMScript.NetServer.NSUserAgent.DecryptAndSaveExternalTokens
  - CRMScript.NetServer.NSUserAgent.DeleteCredential
  - CRMScript.NetServer.NSUserAgent.DeleteExternalUser
  - CRMScript.NetServer.NSUserAgent.DeleteRole
  - CRMScript.NetServer.NSUserAgent.DeleteServiceAuth
  - CRMScript.NetServer.NSUserAgent.DeleteUser
  - CRMScript.NetServer.NSUserAgent.DeleteUserFromName
  - CRMScript.NetServer.NSUserAgent.DeleteUserGroup
  - CRMScript.NetServer.NSUserAgent.FindCredentialsGroups
  - CRMScript.NetServer.NSUserAgent.FindCredentialUsers
  - CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRight
  - CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRights
  - CRMScript.NetServer.NSUserAgent.FindRolesWithoutFunctionalRights
  - CRMScript.NetServer.NSUserAgent.GenerateNewPasswordForExternalUser
  - CRMScript.NetServer.NSUserAgent.GetAccessGatewayInfo
  - CRMScript.NetServer.NSUserAgent.GetAccessToken
  - CRMScript.NetServer.NSUserAgent.GetAllFunctionalRights
  - CRMScript.NetServer.NSUserAgent.GetAllRoles
  - CRMScript.NetServer.NSUserAgent.GetAllUserGroups
  - CRMScript.NetServer.NSUserAgent.GetCredentialsGroups
  - CRMScript.NetServer.NSUserAgent.GetCredentialTypes
  - CRMScript.NetServer.NSUserAgent.GetCredentialTypesForUserType
  - CRMScript.NetServer.NSUserAgent.GetCredentialUsers
  - CRMScript.NetServer.NSUserAgent.GetCredentialUsersInGroup
  - CRMScript.NetServer.NSUserAgent.GetDataRight
  - CRMScript.NetServer.NSUserAgent.GetDataRights
  - CRMScript.NetServer.NSUserAgent.GetDefaultAssociateUserName
  - CRMScript.NetServer.NSUserAgent.GetExternalTokens
  - CRMScript.NetServer.NSUserAgent.GetFunctionalRights
  - CRMScript.NetServer.NSUserAgent.GetRole
  - CRMScript.NetServer.NSUserAgent.GetRoleEntity
  - CRMScript.NetServer.NSUserAgent.GetServiceAuth
  - CRMScript.NetServer.NSUserAgent.GetUntrustedCredentials
  - CRMScript.NetServer.NSUserAgent.GetUntrustedCredentialsForAssociate
  - CRMScript.NetServer.NSUserAgent.GetUser
  - CRMScript.NetServer.NSUserAgent.GetUserFromEjUserId
  - CRMScript.NetServer.NSUserAgent.GetUserFromName
  - CRMScript.NetServer.NSUserAgent.GetUserFromPersonId
  - CRMScript.NetServer.NSUserAgent.GetUserGroup
  - CRMScript.NetServer.NSUserAgent.GetUserGroupList
  - CRMScript.NetServer.NSUserAgent.GetUserInfo
  - CRMScript.NetServer.NSUserAgent.GetUserInfoList
  - CRMScript.NetServer.NSUserAgent.GetValidUserName
  - CRMScript.NetServer.NSUserAgent.GetValidUserNameForNewUser
  - CRMScript.NetServer.NSUserAgent.IsNickNameUnique
  - CRMScript.NetServer.NSUserAgent.IsPasswordValid
  - CRMScript.NetServer.NSUserAgent.IsPasswordValidWithReason
  - CRMScript.NetServer.NSUserAgent.IsUserNameValid
  - CRMScript.NetServer.NSUserAgent.IsUserNameValidWithReason
  - CRMScript.NetServer.NSUserAgent.MakeRetired
  - CRMScript.NetServer.NSUserAgent.#ctor
  - CRMScript.NetServer.NSUserAgent.RegisterWithAccessGateway
  - CRMScript.NetServer.NSUserAgent.RemoveLicenses
  - CRMScript.NetServer.NSUserAgent.RemoveOwnerContact
  - CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentials
  - CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentialsForAssociate
  - CRMScript.NetServer.NSUserAgent.ResolveUserFromInfo
  - CRMScript.NetServer.NSUserAgent.SaveCredential
  - CRMScript.NetServer.NSUserAgent.SaveExternalTokens
  - CRMScript.NetServer.NSUserAgent.SaveRoleEntity
  - CRMScript.NetServer.NSUserAgent.SaveServiceAuth
  - CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentials
  - CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentialsForAssociate
  - CRMScript.NetServer.NSUserAgent.SaveUser
  - CRMScript.NetServer.NSUserAgent.SaveUserFromName
  - CRMScript.NetServer.NSUserAgent.SaveUserGroup
  - CRMScript.NetServer.NSUserAgent.SetDataRight
  - CRMScript.NetServer.NSUserAgent.SetExternalUserInfo
  - CRMScript.NetServer.NSUserAgent.SetFunctionalRights
  - CRMScript.NetServer.NSUserAgent.SetGeneratedPassword
  - CRMScript.NetServer.NSUserAgent.SetGeneratedPasswordFromName
  - CRMScript.NetServer.NSUserAgent.SetPassword
  - CRMScript.NetServer.NSUserAgent.SetPasswordFromName
  - CRMScript.NetServer.NSUserAgent.ValidateUser
  name: NSUserAgent
  nameWithType: NSUserAgent
  fullName: CRMScript.NetServer.NSUserAgent
  type: Class
  summary: "\nUser administration.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.AddOwnerContact
  commentId: M:CRMScript.NetServer.NSUserAgent.AddOwnerContact
  id: 'AddOwnerContact'
  so.intellisense: NSUserAgent.AddOwnerContact
  langs:
  - crmscript
  name: 'AddOwnerContact'
  nameWithType: NSUserAgent.AddOwnerContact
  fullName: CRMScript.NetServer.NSUserAgent.AddOwnerContact
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.CanChangePassword
  commentId: M:CRMScript.NetServer.NSUserAgent.CanChangePassword
  id: 'CanChangePassword'
  so.intellisense: NSUserAgent.CanChangePassword
  langs:
  - crmscript
  name: 'CanChangePassword'
  nameWithType: NSUserAgent.CanChangePassword
  fullName: CRMScript.NetServer.NSUserAgent.CanChangePassword
  type: Method
  summary: "\nCheck if the current assoicate can change the password for an associate\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger associateId;\nBool res = agent.CanChangePassword(associateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.ChangeOwnPassword
  commentId: M:CRMScript.NetServer.NSUserAgent.ChangeOwnPassword
  id: 'ChangeOwnPassword'
  so.intellisense: NSUserAgent.ChangeOwnPassword
  langs:
  - crmscript
  name: 'ChangeOwnPassword'
  nameWithType: NSUserAgent.ChangeOwnPassword
  fullName: CRMScript.NetServer.NSUserAgent.ChangeOwnPassword
  type: Method
  summary: "\nChange password for a user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString oldPassword;\nString newPassword;\nBool res = agent.ChangeOwnPassword(oldPassword, newPassword);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.ChangePassword
  commentId: M:CRMScript.NetServer.NSUserAgent.ChangePassword
  id: 'ChangePassword'
  so.intellisense: NSUserAgent.ChangePassword
  langs:
  - crmscript
  name: 'ChangePassword'
  nameWithType: NSUserAgent.ChangePassword
  fullName: CRMScript.NetServer.NSUserAgent.ChangePassword
  type: Method
  summary: "\nChange password for a user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger associateId;\nString oldPassword;\nString newPassword;\nBool res = agent.ChangePassword(associateId, oldPassword, newPassword);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.ChangePasswordFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.ChangePasswordFromName
  id: 'ChangePasswordFromName'
  so.intellisense: NSUserAgent.ChangePasswordFromName
  langs:
  - crmscript
  name: 'ChangePasswordFromName'
  nameWithType: NSUserAgent.ChangePasswordFromName
  fullName: CRMScript.NetServer.NSUserAgent.ChangePasswordFromName
  type: Method
  summary: "\nChange password for a user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString associateName;\nString oldPassword;\nString newPassword;\nBool res = agent.ChangePasswordFromName(associateName, oldPassword, newPassword);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.ChangeUserType
  commentId: M:CRMScript.NetServer.NSUserAgent.ChangeUserType
  id: 'ChangeUserType'
  so.intellisense: NSUserAgent.ChangeUserType
  langs:
  - crmscript
  name: 'ChangeUserType'
  nameWithType: NSUserAgent.ChangeUserType
  fullName: CRMScript.NetServer.NSUserAgent.ChangeUserType
  type: Method
  summary: "\nGet a user from the user name.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUser user;\nInteger userType;\nNSUser res = agent.ChangeUserType(user, userType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CheckAccessGatewayRegistration
  commentId: M:CRMScript.NetServer.NSUserAgent.CheckAccessGatewayRegistration
  id: 'CheckAccessGatewayRegistration'
  so.intellisense: NSUserAgent.CheckAccessGatewayRegistration
  langs:
  - crmscript
  name: 'CheckAccessGatewayRegistration'
  nameWithType: NSUserAgent.CheckAccessGatewayRegistration
  fullName: CRMScript.NetServer.NSUserAgent.CheckAccessGatewayRegistration
  type: Method
  summary: "\nChecks if AccessGatewayRegistration is valid<p></p>\n<strong>Returns:</strong>Bool<p></p>\n<pre><code>NSUserAgent agent;\nBool res = agent.CheckAccessGatewayRegistration();</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nBool res = agent.CheckAccessGatewayRegistration();</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntity
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntity
  id: 'CreateDefaultRoleEntity'
  so.intellisense: NSUserAgent.CreateDefaultRoleEntity
  langs:
  - crmscript
  name: 'CreateDefaultRoleEntity'
  nameWithType: NSUserAgent.CreateDefaultRoleEntity
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntity
  type: Method
  summary: "\nSet default values into a new NSRoleEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSRoleEntity<p></p>\n<pre><code>NSUserAgent agent;\nNSRoleEntity thing = agent.CreateDefaultRoleEntity();\nthing = agent.SaveRoleEntity(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSRoleEntity thing = agent.CreateDefaultRoleEntity();\nthing = agent.SaveRoleEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntityFromType
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntityFromType
  id: 'CreateDefaultRoleEntityFromType'
  so.intellisense: NSUserAgent.CreateDefaultRoleEntityFromType
  langs:
  - crmscript
  name: 'CreateDefaultRoleEntityFromType'
  nameWithType: NSUserAgent.CreateDefaultRoleEntityFromType
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultRoleEntityFromType
  type: Method
  summary: "\nCreate a new role entity of the specified role type. The role type cannot be changed after the entity is created.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger type;\nNSRoleEntity res = agent.CreateDefaultRoleEntityFromType(type);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultServiceAuth
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultServiceAuth
  id: 'CreateDefaultServiceAuth'
  so.intellisense: NSUserAgent.CreateDefaultServiceAuth
  langs:
  - crmscript
  name: 'CreateDefaultServiceAuth'
  nameWithType: NSUserAgent.CreateDefaultServiceAuth
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultServiceAuth
  type: Method
  summary: "\nSet default values into a new NSServiceAuth.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSServiceAuth<p></p>\n<pre><code>NSUserAgent agent;\nNSServiceAuth thing = agent.CreateDefaultServiceAuth();\nthing = agent.SaveServiceAuth(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSServiceAuth thing = agent.CreateDefaultServiceAuth();\nthing = agent.SaveServiceAuth(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultUntrustedCredentials
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultUntrustedCredentials
  id: 'CreateDefaultUntrustedCredentials'
  so.intellisense: NSUserAgent.CreateDefaultUntrustedCredentials
  langs:
  - crmscript
  name: 'CreateDefaultUntrustedCredentials'
  nameWithType: NSUserAgent.CreateDefaultUntrustedCredentials
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultUntrustedCredentials
  type: Method
  summary: "\nSet default values into a new NSUntrustedCredentials.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSUntrustedCredentials<p></p>\n<pre><code>NSUserAgent agent;\nNSUntrustedCredentials thing = agent.CreateDefaultUntrustedCredentials();\nthing = agent.SaveUntrustedCredentials(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUntrustedCredentials thing = agent.CreateDefaultUntrustedCredentials();\nthing = agent.SaveUntrustedCredentials(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultUser
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultUser
  id: 'CreateDefaultUser'
  so.intellisense: NSUserAgent.CreateDefaultUser
  langs:
  - crmscript
  name: 'CreateDefaultUser'
  nameWithType: NSUserAgent.CreateDefaultUser
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultUser
  type: Method
  summary: "\nSet default values into a new NSUser.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSUser<p></p>\n<pre><code>NSUserAgent agent;\nNSUser thing = agent.CreateDefaultUser();\nthing = agent.SaveUser(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUser thing = agent.CreateDefaultUser();\nthing = agent.SaveUser(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserType
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserType
  id: 'CreateDefaultUserFromUserType'
  so.intellisense: NSUserAgent.CreateDefaultUserFromUserType
  langs:
  - crmscript
  name: 'CreateDefaultUserFromUserType'
  nameWithType: NSUserAgent.CreateDefaultUserFromUserType
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserType
  type: Method
  summary: "\nCreate default NSUser providing the user type.  Only System and Anonymous users can be created without an exsisting person.  Use CreateDefaultUserFromUserTypeAndPersonId to create internal (i.e. Employee) or external users.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger userType;\nNSUser res = agent.CreateDefaultUserFromUserType(userType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  id: 'CreateDefaultUserFromUserTypeAndCredential'
  so.intellisense: NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  langs:
  - crmscript
  name: 'CreateDefaultUserFromUserTypeAndCredential'
  nameWithType: NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndCredential
  type: Method
  summary: "\nCreates a NSPersonEntity with default values based on the contactId and credentials.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  id: 'CreateDefaultUserFromUserTypeAndPersonId'
  so.intellisense: NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  langs:
  - crmscript
  name: 'CreateDefaultUserFromUserTypeAndPersonId'
  nameWithType: NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  fullName: CRMScript.NetServer.NSUserAgent.CreateDefaultUserFromUserTypeAndPersonId
  type: Method
  summary: "\nCreate default NSUser providing the associate type and person id.  System and Anonymous users can be created without an exsisting person and permits person id to be 0.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger userType;\nInteger personId;\nNSUser res = agent.CreateDefaultUserFromUserTypeAndPersonId(userType, personId);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateExternalUser
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateExternalUser
  id: 'CreateExternalUser'
  so.intellisense: NSUserAgent.CreateExternalUser
  langs:
  - crmscript
  name: 'CreateExternalUser'
  nameWithType: NSUserAgent.CreateExternalUser
  fullName: CRMScript.NetServer.NSUserAgent.CreateExternalUser
  type: Method
  summary: "\nCreates an associate of type external user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger personId;\nString userName;\nString password;\nInteger roleId;\nBool isActive;\nInteger res = agent.CreateExternalUser(personId, userName, password, roleId, isActive);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.CreateUserGroup
  commentId: M:CRMScript.NetServer.NSUserAgent.CreateUserGroup
  id: 'CreateUserGroup'
  so.intellisense: NSUserAgent.CreateUserGroup
  langs:
  - crmscript
  name: 'CreateUserGroup'
  nameWithType: NSUserAgent.CreateUserGroup
  fullName: CRMScript.NetServer.NSUserAgent.CreateUserGroup
  type: Method
  summary: "\nCreate UserGroup (Rank is assigned to the highest rank)\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.DecryptAndSaveExternalTokens
  commentId: M:CRMScript.NetServer.NSUserAgent.DecryptAndSaveExternalTokens
  id: 'DecryptAndSaveExternalTokens'
  so.intellisense: NSUserAgent.DecryptAndSaveExternalTokens
  langs:
  - crmscript
  name: 'DecryptAndSaveExternalTokens'
  nameWithType: NSUserAgent.DecryptAndSaveExternalTokens
  fullName: CRMScript.NetServer.NSUserAgent.DecryptAndSaveExternalTokens
  type: Method
  summary: "\nFirst asks AccessGateway to decrypt the tokens, then saves the external tokens to the DB and returns a key that can be used to retrieve them\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSTokenManagementInfo tokenManagementInfo;\nString res = agent.DecryptAndSaveExternalTokens(tokenManagementInfo);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.DeleteCredential
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteCredential
  id: 'DeleteCredential'
  so.intellisense: NSUserAgent.DeleteCredential
  langs:
  - crmscript
  name: 'DeleteCredential'
  nameWithType: NSUserAgent.DeleteCredential
  fullName: CRMScript.NetServer.NSUserAgent.DeleteCredential
  type: Method
  summary: "\nRemove credential of a specific type for a user\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger userId;\nString credentialType;\nBool res = agent.DeleteCredential(userId, credentialType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.DeleteExternalUser
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteExternalUser
  id: 'DeleteExternalUser'
  so.intellisense: NSUserAgent.DeleteExternalUser
  langs:
  - crmscript
  name: 'DeleteExternalUser'
  nameWithType: NSUserAgent.DeleteExternalUser
  fullName: CRMScript.NetServer.NSUserAgent.DeleteExternalUser
  type: Method
  summary: "\nDeletes an associate of type external user.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.DeleteRole
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteRole
  id: 'DeleteRole'
  so.intellisense: NSUserAgent.DeleteRole
  langs:
  - crmscript
  name: 'DeleteRole'
  nameWithType: NSUserAgent.DeleteRole
  fullName: CRMScript.NetServer.NSUserAgent.DeleteRole
  type: Method
  summary: "\nDelete the specified role and move all users associated with the role to the replacingRoleId\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.DeleteServiceAuth
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteServiceAuth
  id: 'DeleteServiceAuth'
  so.intellisense: NSUserAgent.DeleteServiceAuth
  langs:
  - crmscript
  name: 'DeleteServiceAuth'
  nameWithType: NSUserAgent.DeleteServiceAuth
  fullName: CRMScript.NetServer.NSUserAgent.DeleteServiceAuth
  type: Method
  summary: "\nDeletes the NSServiceAuth\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nagent.DeleteServiceAuth(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.DeleteUser
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteUser
  id: 'DeleteUser'
  so.intellisense: NSUserAgent.DeleteUser
  langs:
  - crmscript
  name: 'DeleteUser'
  nameWithType: NSUserAgent.DeleteUser
  fullName: CRMScript.NetServer.NSUserAgent.DeleteUser
  type: Method
  summary: "\nDeletes the NSUser\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nagent.DeleteUser(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.DeleteUserFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteUserFromName
  id: 'DeleteUserFromName'
  so.intellisense: NSUserAgent.DeleteUserFromName
  langs:
  - crmscript
  name: 'DeleteUserFromName'
  nameWithType: NSUserAgent.DeleteUserFromName
  fullName: CRMScript.NetServer.NSUserAgent.DeleteUserFromName
  type: Method
  summary: "\nDelete a user, with lookup based on the user name.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString userName;\nagent.DeleteUserFromName(userName);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.DeleteUserGroup
  commentId: M:CRMScript.NetServer.NSUserAgent.DeleteUserGroup
  id: 'DeleteUserGroup'
  so.intellisense: NSUserAgent.DeleteUserGroup
  langs:
  - crmscript
  name: 'DeleteUserGroup'
  nameWithType: NSUserAgent.DeleteUserGroup
  fullName: CRMScript.NetServer.NSUserAgent.DeleteUserGroup
  type: Method
  summary: "\nDelete a usergroup and move its members to another usergroup\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.FindCredentialsGroups
  commentId: M:CRMScript.NetServer.NSUserAgent.FindCredentialsGroups
  id: 'FindCredentialsGroups'
  so.intellisense: NSUserAgent.FindCredentialsGroups
  langs:
  - crmscript
  name: 'FindCredentialsGroups'
  nameWithType: NSUserAgent.FindCredentialsGroups
  fullName: CRMScript.NetServer.NSUserAgent.FindCredentialsGroups
  type: Method
  summary: "\nGet user groups holding users filtered by the searchString.  This method is only relevant if the CredentialType control is of type link.  There will allways be at least one groups even if the underlying provider does not support groups.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.FindCredentialUsers
  commentId: M:CRMScript.NetServer.NSUserAgent.FindCredentialUsers
  id: 'FindCredentialUsers'
  so.intellisense: NSUserAgent.FindCredentialUsers
  langs:
  - crmscript
  name: 'FindCredentialUsers'
  nameWithType: NSUserAgent.FindCredentialUsers
  fullName: CRMScript.NetServer.NSUserAgent.FindCredentialUsers
  type: Method
  summary: "\nFind users matching the partial name.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRight
  commentId: M:CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRight
  id: 'FindRolesWithFunctionalRight'
  so.intellisense: NSUserAgent.FindRolesWithFunctionalRight
  langs:
  - crmscript
  name: 'FindRolesWithFunctionalRight'
  nameWithType: NSUserAgent.FindRolesWithFunctionalRight
  fullName: CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRight
  type: Method
  summary: "\nFind all roles with a given functional right. The roles matched must contain the specified functional right.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString functionalRightName;\nNSMDOListItem[] res = agent.FindRolesWithFunctionalRight(functionalRightName);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRights
  commentId: M:CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRights
  id: 'FindRolesWithFunctionalRights'
  so.intellisense: NSUserAgent.FindRolesWithFunctionalRights
  langs:
  - crmscript
  name: 'FindRolesWithFunctionalRights'
  nameWithType: NSUserAgent.FindRolesWithFunctionalRights
  fullName: CRMScript.NetServer.NSUserAgent.FindRolesWithFunctionalRights
  type: Method
  summary: "\nFind all roles with a given set of functional rights. The roles matched must contain one or more of the specified functional rights.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString[] functionalRightNames;\nInteger[] res = agent.FindRolesWithFunctionalRights(functionalRightNames);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.FindRolesWithoutFunctionalRights
  commentId: M:CRMScript.NetServer.NSUserAgent.FindRolesWithoutFunctionalRights
  id: 'FindRolesWithoutFunctionalRights'
  so.intellisense: NSUserAgent.FindRolesWithoutFunctionalRights
  langs:
  - crmscript
  name: 'FindRolesWithoutFunctionalRights'
  nameWithType: NSUserAgent.FindRolesWithoutFunctionalRights
  fullName: CRMScript.NetServer.NSUserAgent.FindRolesWithoutFunctionalRights
  type: Method
  summary: "\nFind all roles without a given set of functional rights. The roles matched must not contain any of the specified functional rights.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString[] functionalRightNames;\nInteger[] res = agent.FindRolesWithoutFunctionalRights(functionalRightNames);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GenerateNewPasswordForExternalUser
  commentId: M:CRMScript.NetServer.NSUserAgent.GenerateNewPasswordForExternalUser
  id: 'GenerateNewPasswordForExternalUser'
  so.intellisense: NSUserAgent.GenerateNewPasswordForExternalUser
  langs:
  - crmscript
  name: 'GenerateNewPasswordForExternalUser'
  nameWithType: NSUserAgent.GenerateNewPasswordForExternalUser
  fullName: CRMScript.NetServer.NSUserAgent.GenerateNewPasswordForExternalUser
  type: Method
  summary: "\nGenerates a new password for an external user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString associateName;\nString res = agent.GenerateNewPasswordForExternalUser(associateName);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetAccessGatewayInfo
  commentId: M:CRMScript.NetServer.NSUserAgent.GetAccessGatewayInfo
  id: 'GetAccessGatewayInfo'
  so.intellisense: NSUserAgent.GetAccessGatewayInfo
  langs:
  - crmscript
  name: 'GetAccessGatewayInfo'
  nameWithType: NSUserAgent.GetAccessGatewayInfo
  fullName: CRMScript.NetServer.NSUserAgent.GetAccessGatewayInfo
  type: Method
  summary: "\nReturns accessgateway registration info\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetAccessToken
  commentId: M:CRMScript.NetServer.NSUserAgent.GetAccessToken
  id: 'GetAccessToken'
  so.intellisense: NSUserAgent.GetAccessToken
  langs:
  - crmscript
  name: 'GetAccessToken'
  nameWithType: NSUserAgent.GetAccessToken
  fullName: CRMScript.NetServer.NSUserAgent.GetAccessToken
  type: Method
  summary: "\nGet an access token based on the current user's session.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString appToken;\nBool includeCsSession;\nString res = agent.GetAccessToken(appToken, includeCsSession);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetAllFunctionalRights
  commentId: M:CRMScript.NetServer.NSUserAgent.GetAllFunctionalRights
  id: 'GetAllFunctionalRights'
  so.intellisense: NSUserAgent.GetAllFunctionalRights
  langs:
  - crmscript
  name: 'GetAllFunctionalRights'
  nameWithType: NSUserAgent.GetAllFunctionalRights
  fullName: CRMScript.NetServer.NSUserAgent.GetAllFunctionalRights
  type: Method
  summary: "\nGet a list of all functional rights for the given type of role. MDO List name = 'FunctionRights', extra='roleType=0'\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger roleType;\nNSSelectableMDOListItem[] res = agent.GetAllFunctionalRights(roleType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetAllRoles
  commentId: M:CRMScript.NetServer.NSUserAgent.GetAllRoles
  id: 'GetAllRoles'
  so.intellisense: NSUserAgent.GetAllRoles
  langs:
  - crmscript
  name: 'GetAllRoles'
  nameWithType: NSUserAgent.GetAllRoles
  fullName: CRMScript.NetServer.NSUserAgent.GetAllRoles
  type: Method
  summary: "\nGet a list of all roles for the given type of role. MDO List name = 'Roles', extra='0' (roleType)\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger roleType;\nNSSelectableMDOListItem[] res = agent.GetAllRoles(roleType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetAllUserGroups
  commentId: M:CRMScript.NetServer.NSUserAgent.GetAllUserGroups
  id: 'GetAllUserGroups'
  so.intellisense: NSUserAgent.GetAllUserGroups
  langs:
  - crmscript
  name: 'GetAllUserGroups'
  nameWithType: NSUserAgent.GetAllUserGroups
  fullName: CRMScript.NetServer.NSUserAgent.GetAllUserGroups
  type: Method
  summary: "\nGet all user groups\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nBool includeDeleted;\nNSUserGroup[] res = agent.GetAllUserGroups(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetCredentialsGroups
  commentId: M:CRMScript.NetServer.NSUserAgent.GetCredentialsGroups
  id: 'GetCredentialsGroups'
  so.intellisense: NSUserAgent.GetCredentialsGroups
  langs:
  - crmscript
  name: 'GetCredentialsGroups'
  nameWithType: NSUserAgent.GetCredentialsGroups
  fullName: CRMScript.NetServer.NSUserAgent.GetCredentialsGroups
  type: Method
  summary: "\nGet user groups holding users.  This method is only relevant if the CredentialType control is of type link.  There will allways be at least one groups even if the underlying provider does not support groups.<p></p>\n<ul><li><strong>type:</strong>Type of credentials, corresponding to name of plugin and type in the credentials table.</li></ul>\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetCredentialTypes
  commentId: M:CRMScript.NetServer.NSUserAgent.GetCredentialTypes
  id: 'GetCredentialTypes'
  so.intellisense: NSUserAgent.GetCredentialTypes
  langs:
  - crmscript
  name: 'GetCredentialTypes'
  nameWithType: NSUserAgent.GetCredentialTypes
  fullName: CRMScript.NetServer.NSUserAgent.GetCredentialTypes
  type: Method
  summary: "\nGet available credential types that can be used for authentication<p></p>\n<strong>Returns:</strong>NSCredentialType[]<p></p>\n<pre><code>NSUserAgent agent;\nNSCredentialType[] res = agent.GetCredentialTypes();</code></pre>\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSCredentialType[] res = agent.GetCredentialTypes();</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetCredentialTypesForUserType
  commentId: M:CRMScript.NetServer.NSUserAgent.GetCredentialTypesForUserType
  id: 'GetCredentialTypesForUserType'
  so.intellisense: NSUserAgent.GetCredentialTypesForUserType
  langs:
  - crmscript
  name: 'GetCredentialTypesForUserType'
  nameWithType: NSUserAgent.GetCredentialTypesForUserType
  fullName: CRMScript.NetServer.NSUserAgent.GetCredentialTypesForUserType
  type: Method
  summary: "\nGet available credential types that can be used for the specified user type.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger userType;\nNSCredentialType[] res = agent.GetCredentialTypesForUserType(userType);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetCredentialUsers
  commentId: M:CRMScript.NetServer.NSUserAgent.GetCredentialUsers
  id: 'GetCredentialUsers'
  so.intellisense: NSUserAgent.GetCredentialUsers
  langs:
  - crmscript
  name: 'GetCredentialUsers'
  nameWithType: NSUserAgent.GetCredentialUsers
  fullName: CRMScript.NetServer.NSUserAgent.GetCredentialUsers
  type: Method
  summary: "\nGet credential users within a user group<p></p>\n<ul><li><strong>type:</strong>Type of credentials, corresponding to name of plugin and type in the credentials table.</li><li><strong>groupName:</strong>Name of user group needed to discover the users.</li></ul>\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetCredentialUsersInGroup
  commentId: M:CRMScript.NetServer.NSUserAgent.GetCredentialUsersInGroup
  id: 'GetCredentialUsersInGroup'
  so.intellisense: NSUserAgent.GetCredentialUsersInGroup
  langs:
  - crmscript
  name: 'GetCredentialUsersInGroup'
  nameWithType: NSUserAgent.GetCredentialUsersInGroup
  fullName: CRMScript.NetServer.NSUserAgent.GetCredentialUsersInGroup
  type: Method
  summary: "\nGet credential users within a user group\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetDataRight
  commentId: M:CRMScript.NetServer.NSUserAgent.GetDataRight
  id: 'GetDataRight'
  so.intellisense: NSUserAgent.GetDataRight
  langs:
  - crmscript
  name: 'GetDataRight'
  nameWithType: NSUserAgent.GetDataRight
  fullName: CRMScript.NetServer.NSUserAgent.GetDataRight
  type: Method
  summary: "\nRead one specific data right at the given position. An exception will be thrown if non existing position is specified.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger roleId;\nString tableName;\nInteger relationToOwner;\nString res = agent.GetDataRight(roleId, tableName, relationToOwner);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetDataRights
  commentId: M:CRMScript.NetServer.NSUserAgent.GetDataRights
  id: 'GetDataRights'
  so.intellisense: NSUserAgent.GetDataRights
  langs:
  - crmscript
  name: 'GetDataRights'
  nameWithType: NSUserAgent.GetDataRights
  fullName: CRMScript.NetServer.NSUserAgent.GetDataRights
  type: Method
  summary: "\nRead specific a set of data rights at the given row in the rights matrix. An exception will be thrown if non existing position is specified.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger roleId;\nString tableName;\nStringDictionary res = agent.GetDataRights(roleId, tableName);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetDefaultAssociateUserName
  commentId: M:CRMScript.NetServer.NSUserAgent.GetDefaultAssociateUserName
  id: 'GetDefaultAssociateUserName'
  so.intellisense: NSUserAgent.GetDefaultAssociateUserName
  langs:
  - crmscript
  name: 'GetDefaultAssociateUserName'
  nameWithType: NSUserAgent.GetDefaultAssociateUserName
  fullName: CRMScript.NetServer.NSUserAgent.GetDefaultAssociateUserName
  type: Method
  summary: "\nGet the default username for a person\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetExternalTokens
  commentId: M:CRMScript.NetServer.NSUserAgent.GetExternalTokens
  id: 'GetExternalTokens'
  so.intellisense: NSUserAgent.GetExternalTokens
  langs:
  - crmscript
  name: 'GetExternalTokens'
  nameWithType: NSUserAgent.GetExternalTokens
  fullName: CRMScript.NetServer.NSUserAgent.GetExternalTokens
  type: Method
  summary: "\nRetrieve the tokens from the DB based on the given key\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString key;\nNSTokenManagementInfo res = agent.GetExternalTokens(key);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetFunctionalRights
  commentId: M:CRMScript.NetServer.NSUserAgent.GetFunctionalRights
  id: 'GetFunctionalRights'
  so.intellisense: NSUserAgent.GetFunctionalRights
  langs:
  - crmscript
  name: 'GetFunctionalRights'
  nameWithType: NSUserAgent.GetFunctionalRights
  fullName: CRMScript.NetServer.NSUserAgent.GetFunctionalRights
  type: Method
  summary: "\nGet all functional rights for the given role. Functional rights not set on the role are not included. MDO List name = 'FunctionRights', extra='role=123'\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger roleId;\nNSSelectableMDOListItem[] res = agent.GetFunctionalRights(roleId);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetRole
  commentId: M:CRMScript.NetServer.NSUserAgent.GetRole
  id: 'GetRole'
  so.intellisense: NSUserAgent.GetRole
  langs:
  - crmscript
  name: 'GetRole'
  nameWithType: NSUserAgent.GetRole
  fullName: CRMScript.NetServer.NSUserAgent.GetRole
  type: Method
  summary: "\nGets a NSRole object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSRole thing = agent.GetRole(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetRoleEntity
  commentId: M:CRMScript.NetServer.NSUserAgent.GetRoleEntity
  id: 'GetRoleEntity'
  so.intellisense: NSUserAgent.GetRoleEntity
  langs:
  - crmscript
  name: 'GetRoleEntity'
  nameWithType: NSUserAgent.GetRoleEntity
  fullName: CRMScript.NetServer.NSUserAgent.GetRoleEntity
  type: Method
  summary: "\nGets a NSRoleEntity object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSRoleEntity thing = agent.GetRoleEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetServiceAuth
  commentId: M:CRMScript.NetServer.NSUserAgent.GetServiceAuth
  id: 'GetServiceAuth'
  so.intellisense: NSUserAgent.GetServiceAuth
  langs:
  - crmscript
  name: 'GetServiceAuth'
  nameWithType: NSUserAgent.GetServiceAuth
  fullName: CRMScript.NetServer.NSUserAgent.GetServiceAuth
  type: Method
  summary: "\nGets a NSServiceAuth object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSServiceAuth thing = agent.GetServiceAuth(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUntrustedCredentials
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUntrustedCredentials
  id: 'GetUntrustedCredentials'
  so.intellisense: NSUserAgent.GetUntrustedCredentials
  langs:
  - crmscript
  name: 'GetUntrustedCredentials'
  nameWithType: NSUserAgent.GetUntrustedCredentials
  fullName: CRMScript.NetServer.NSUserAgent.GetUntrustedCredentials
  type: Method
  summary: "\nGet a set of credentials of a specified type for authenticated user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString type;\nNSUntrustedCredentials[] res = agent.GetUntrustedCredentials(type);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUntrustedCredentialsForAssociate
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUntrustedCredentialsForAssociate
  id: 'GetUntrustedCredentialsForAssociate'
  so.intellisense: NSUserAgent.GetUntrustedCredentialsForAssociate
  langs:
  - crmscript
  name: 'GetUntrustedCredentialsForAssociate'
  nameWithType: NSUserAgent.GetUntrustedCredentialsForAssociate
  fullName: CRMScript.NetServer.NSUserAgent.GetUntrustedCredentialsForAssociate
  type: Method
  summary: "\nGet a set of credentials of a specified type for a specified user. SecretValue is only populated for authenticated user, and system users.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger associateId;\nString type;\nNSUntrustedCredentials[] res = agent.GetUntrustedCredentialsForAssociate(associateId, type);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUser
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUser
  id: 'GetUser'
  so.intellisense: NSUserAgent.GetUser
  langs:
  - crmscript
  name: 'GetUser'
  nameWithType: NSUserAgent.GetUser
  fullName: CRMScript.NetServer.NSUserAgent.GetUser
  type: Method
  summary: "\nGets a NSUser object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUser thing = agent.GetUser(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUserFromEjUserId
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserFromEjUserId
  id: 'GetUserFromEjUserId'
  so.intellisense: NSUserAgent.GetUserFromEjUserId
  langs:
  - crmscript
  name: 'GetUserFromEjUserId'
  nameWithType: NSUserAgent.GetUserFromEjUserId
  fullName: CRMScript.NetServer.NSUserAgent.GetUserFromEjUserId
  type: Method
  summary: "\nGet user from ejUserId* used for eJournal Legacy Support.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetUserFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserFromName
  id: 'GetUserFromName'
  so.intellisense: NSUserAgent.GetUserFromName
  langs:
  - crmscript
  name: 'GetUserFromName'
  nameWithType: NSUserAgent.GetUserFromName
  fullName: CRMScript.NetServer.NSUserAgent.GetUserFromName
  type: Method
  summary: "\nGet a user, with lookup based on user name.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString userName;\nNSUser res = agent.GetUserFromName(userName);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUserFromPersonId
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserFromPersonId
  id: 'GetUserFromPersonId'
  so.intellisense: NSUserAgent.GetUserFromPersonId
  langs:
  - crmscript
  name: 'GetUserFromPersonId'
  nameWithType: NSUserAgent.GetUserFromPersonId
  fullName: CRMScript.NetServer.NSUserAgent.GetUserFromPersonId
  type: Method
  summary: "\nReturns the user associated with the supplied person id\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetUserGroup
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserGroup
  id: 'GetUserGroup'
  so.intellisense: NSUserAgent.GetUserGroup
  langs:
  - crmscript
  name: 'GetUserGroup'
  nameWithType: NSUserAgent.GetUserGroup
  fullName: CRMScript.NetServer.NSUserAgent.GetUserGroup
  type: Method
  summary: "\nGets a NSUserGroup object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUserGroup thing = agent.GetUserGroup(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUserGroupList
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserGroupList
  id: 'GetUserGroupList'
  so.intellisense: NSUserAgent.GetUserGroupList
  langs:
  - crmscript
  name: 'GetUserGroupList'
  nameWithType: NSUserAgent.GetUserGroupList
  fullName: CRMScript.NetServer.NSUserAgent.GetUserGroupList
  type: Method
  summary: "\nGets a vector of UserGroup objects.\n"
  example: 
  - "\n<pre><code>Integer[] ids;\nNSUserAgent agent;\nagent.GetUserGroupList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUserInfo
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserInfo
  id: 'GetUserInfo'
  so.intellisense: NSUserAgent.GetUserInfo
  langs:
  - crmscript
  name: 'GetUserInfo'
  nameWithType: NSUserAgent.GetUserInfo
  fullName: CRMScript.NetServer.NSUserAgent.GetUserInfo
  type: Method
  summary: "\nGets a NSUserInfo object.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUserInfo thing = agent.GetUserInfo(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetUserInfoList
  commentId: M:CRMScript.NetServer.NSUserAgent.GetUserInfoList
  id: 'GetUserInfoList'
  so.intellisense: NSUserAgent.GetUserInfoList
  langs:
  - crmscript
  name: 'GetUserInfoList'
  nameWithType: NSUserAgent.GetUserInfoList
  fullName: CRMScript.NetServer.NSUserAgent.GetUserInfoList
  type: Method
  summary: "\nGets a vector of NSUserInfo objects.\n"
  example: 
  - "\n<pre><code>Integer[] ids;\nNSUserAgent agent;\nagent.GetUserInfoList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.GetValidUserName
  commentId: M:CRMScript.NetServer.NSUserAgent.GetValidUserName
  id: 'GetValidUserName'
  so.intellisense: NSUserAgent.GetValidUserName
  langs:
  - crmscript
  name: 'GetValidUserName'
  nameWithType: NSUserAgent.GetValidUserName
  fullName: CRMScript.NetServer.NSUserAgent.GetValidUserName
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.GetValidUserNameForNewUser
  commentId: M:CRMScript.NetServer.NSUserAgent.GetValidUserNameForNewUser
  id: 'GetValidUserNameForNewUser'
  so.intellisense: NSUserAgent.GetValidUserNameForNewUser
  langs:
  - crmscript
  name: 'GetValidUserNameForNewUser'
  nameWithType: NSUserAgent.GetValidUserNameForNewUser
  fullName: CRMScript.NetServer.NSUserAgent.GetValidUserNameForNewUser
  type: Method
  summary: "\nGenerates a valid username for an unsaved user\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.IsNickNameUnique
  commentId: M:CRMScript.NetServer.NSUserAgent.IsNickNameUnique
  id: 'IsNickNameUnique'
  so.intellisense: NSUserAgent.IsNickNameUnique
  langs:
  - crmscript
  name: 'IsNickNameUnique'
  nameWithType: NSUserAgent.IsNickNameUnique
  fullName: CRMScript.NetServer.NSUserAgent.IsNickNameUnique
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.IsPasswordValid
  commentId: M:CRMScript.NetServer.NSUserAgent.IsPasswordValid
  id: 'IsPasswordValid'
  so.intellisense: NSUserAgent.IsPasswordValid
  langs:
  - crmscript
  name: 'IsPasswordValid'
  nameWithType: NSUserAgent.IsPasswordValid
  fullName: CRMScript.NetServer.NSUserAgent.IsPasswordValid
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.IsPasswordValidWithReason
  commentId: M:CRMScript.NetServer.NSUserAgent.IsPasswordValidWithReason
  id: 'IsPasswordValidWithReason'
  so.intellisense: NSUserAgent.IsPasswordValidWithReason
  langs:
  - crmscript
  name: 'IsPasswordValidWithReason'
  nameWithType: NSUserAgent.IsPasswordValidWithReason
  fullName: CRMScript.NetServer.NSUserAgent.IsPasswordValidWithReason
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.IsUserNameValid
  commentId: M:CRMScript.NetServer.NSUserAgent.IsUserNameValid
  id: 'IsUserNameValid'
  so.intellisense: NSUserAgent.IsUserNameValid
  langs:
  - crmscript
  name: 'IsUserNameValid'
  nameWithType: NSUserAgent.IsUserNameValid
  fullName: CRMScript.NetServer.NSUserAgent.IsUserNameValid
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.IsUserNameValidWithReason
  commentId: M:CRMScript.NetServer.NSUserAgent.IsUserNameValidWithReason
  id: 'IsUserNameValidWithReason'
  so.intellisense: NSUserAgent.IsUserNameValidWithReason
  langs:
  - crmscript
  name: 'IsUserNameValidWithReason'
  nameWithType: NSUserAgent.IsUserNameValidWithReason
  fullName: CRMScript.NetServer.NSUserAgent.IsUserNameValidWithReason
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.MakeRetired
  commentId: M:CRMScript.NetServer.NSUserAgent.MakeRetired
  id: 'MakeRetired'
  so.intellisense: NSUserAgent.MakeRetired
  langs:
  - crmscript
  name: 'MakeRetired'
  nameWithType: NSUserAgent.MakeRetired
  fullName: CRMScript.NetServer.NSUserAgent.MakeRetired
  type: Method
  summary: "\nRetiring a user means to remove all licenses, setting person.retired=1 and associate.deleted=1. Unretiering a user means setting  person.retired=0 and associate.deleted=0\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.#ctor
  commentId: M:CRMScript.NetServer.NSUserAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSUserAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSUserAgent.#ctor
  fullName: CRMScript.NetServer.NSUserAgent.#ctor
  type: Method
  summary: "\nUser administration.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.RegisterWithAccessGateway
  commentId: M:CRMScript.NetServer.NSUserAgent.RegisterWithAccessGateway
  id: 'RegisterWithAccessGateway'
  so.intellisense: NSUserAgent.RegisterWithAccessGateway
  langs:
  - crmscript
  name: 'RegisterWithAccessGateway'
  nameWithType: NSUserAgent.RegisterWithAccessGateway
  fullName: CRMScript.NetServer.NSUserAgent.RegisterWithAccessGateway
  type: Method
  summary: "\nRegisters with access gateway if not already done, otherwise will attempt to update\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.RemoveLicenses
  commentId: M:CRMScript.NetServer.NSUserAgent.RemoveLicenses
  id: 'RemoveLicenses'
  so.intellisense: NSUserAgent.RemoveLicenses
  langs:
  - crmscript
  name: 'RemoveLicenses'
  nameWithType: NSUserAgent.RemoveLicenses
  fullName: CRMScript.NetServer.NSUserAgent.RemoveLicenses
  type: Method
  summary: "\nRemove all user licenses.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.RemoveOwnerContact
  commentId: M:CRMScript.NetServer.NSUserAgent.RemoveOwnerContact
  id: 'RemoveOwnerContact'
  so.intellisense: NSUserAgent.RemoveOwnerContact
  langs:
  - crmscript
  name: 'RemoveOwnerContact'
  nameWithType: NSUserAgent.RemoveOwnerContact
  fullName: CRMScript.NetServer.NSUserAgent.RemoveOwnerContact
  type: Method
  summary: "\nRemove a contact from the ownercontactlink table\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentials
  commentId: M:CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentials
  id: 'RemoveUntrustedCredentials'
  so.intellisense: NSUserAgent.RemoveUntrustedCredentials
  langs:
  - crmscript
  name: 'RemoveUntrustedCredentials'
  nameWithType: NSUserAgent.RemoveUntrustedCredentials
  fullName: CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentials
  type: Method
  summary: "\nRemove a credentials entry for authenticated user.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentialsForAssociate
  commentId: M:CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentialsForAssociate
  id: 'RemoveUntrustedCredentialsForAssociate'
  so.intellisense: NSUserAgent.RemoveUntrustedCredentialsForAssociate
  langs:
  - crmscript
  name: 'RemoveUntrustedCredentialsForAssociate'
  nameWithType: NSUserAgent.RemoveUntrustedCredentialsForAssociate
  fullName: CRMScript.NetServer.NSUserAgent.RemoveUntrustedCredentialsForAssociate
  type: Method
  summary: "\nRemove a credentials entry for a specified user.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.ResolveUserFromInfo
  commentId: M:CRMScript.NetServer.NSUserAgent.ResolveUserFromInfo
  id: 'ResolveUserFromInfo'
  so.intellisense: NSUserAgent.ResolveUserFromInfo
  langs:
  - crmscript
  name: 'ResolveUserFromInfo'
  nameWithType: NSUserAgent.ResolveUserFromInfo
  fullName: CRMScript.NetServer.NSUserAgent.ResolveUserFromInfo
  type: Method
  summary: "\nGet a user from the provided information. If the user or associated person does not exist, it will be created on demand.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger contactId;\nString personName;\nString[] phoneNumbers;\nString[] emails;\nInteger userType;\nNSCredential credential;\nNSResolvedUser res = agent.ResolveUserFromInfo(contactId, personName, phoneNumbers, emails, userType, credential);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveCredential
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveCredential
  id: 'SaveCredential'
  so.intellisense: NSUserAgent.SaveCredential
  langs:
  - crmscript
  name: 'SaveCredential'
  nameWithType: NSUserAgent.SaveCredential
  fullName: CRMScript.NetServer.NSUserAgent.SaveCredential
  type: Method
  summary: "\nSave (adds/replaces) current credential of the same type for the user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger userId;\nNSCredential credential;\nBool res = agent.SaveCredential(userId, credential);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveExternalTokens
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveExternalTokens
  id: 'SaveExternalTokens'
  so.intellisense: NSUserAgent.SaveExternalTokens
  langs:
  - crmscript
  name: 'SaveExternalTokens'
  nameWithType: NSUserAgent.SaveExternalTokens
  fullName: CRMScript.NetServer.NSUserAgent.SaveExternalTokens
  type: Method
  summary: "\nSaves the external tokens to the DB and returns a key that can be used to retrieve them\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSTokenManagementInfo tokenManagementInfo;\nString res = agent.SaveExternalTokens(tokenManagementInfo);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveRoleEntity
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveRoleEntity
  id: 'SaveRoleEntity'
  so.intellisense: NSUserAgent.SaveRoleEntity
  langs:
  - crmscript
  name: 'SaveRoleEntity'
  nameWithType: NSUserAgent.SaveRoleEntity
  fullName: CRMScript.NetServer.NSUserAgent.SaveRoleEntity
  type: Method
  summary: "\nUpdates the existing NSRoleEntity or creates a new NSRoleEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>roleEntity</strong>The NSRoleEntity to save.</li></ul><strong>Returns:</strong>NSRoleEntity<p></p>\n<pre><code>NSUser  agent;\nNSRoleEntity thing = agent.CreateDefaultRoleEntity();\nthing = agent.SaveRoleEntity(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUser  agent;\nNSRoleEntity thing = agent.CreateDefaultRoleEntity();\nthing = agent.SaveRoleEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveServiceAuth
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveServiceAuth
  id: 'SaveServiceAuth'
  so.intellisense: NSUserAgent.SaveServiceAuth
  langs:
  - crmscript
  name: 'SaveServiceAuth'
  nameWithType: NSUserAgent.SaveServiceAuth
  fullName: CRMScript.NetServer.NSUserAgent.SaveServiceAuth
  type: Method
  summary: "\nUpdates the existing NSServiceAuth or creates a new NSServiceAuth if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>serviceAuth</strong>The NSServiceAuth to save.</li></ul><strong>Returns:</strong>NSServiceAuth<p></p>\n<pre><code>NSUser  agent;\nNSServiceAuth thing = agent.CreateDefaultServiceAuth();\nthing = agent.SaveServiceAuth(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUser  agent;\nNSServiceAuth thing = agent.CreateDefaultServiceAuth();\nthing = agent.SaveServiceAuth(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentials
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentials
  id: 'SaveUntrustedCredentials'
  so.intellisense: NSUserAgent.SaveUntrustedCredentials
  langs:
  - crmscript
  name: 'SaveUntrustedCredentials'
  nameWithType: NSUserAgent.SaveUntrustedCredentials
  fullName: CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentials
  type: Method
  summary: "\nSave credentials for authenticated user.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentialsForAssociate
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentialsForAssociate
  id: 'SaveUntrustedCredentialsForAssociate'
  so.intellisense: NSUserAgent.SaveUntrustedCredentialsForAssociate
  langs:
  - crmscript
  name: 'SaveUntrustedCredentialsForAssociate'
  nameWithType: NSUserAgent.SaveUntrustedCredentialsForAssociate
  fullName: CRMScript.NetServer.NSUserAgent.SaveUntrustedCredentialsForAssociate
  type: Method
  summary: "\nSave credentials for a specified user.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SaveUser
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveUser
  id: 'SaveUser'
  so.intellisense: NSUserAgent.SaveUser
  langs:
  - crmscript
  name: 'SaveUser'
  nameWithType: NSUserAgent.SaveUser
  fullName: CRMScript.NetServer.NSUserAgent.SaveUser
  type: Method
  summary: "\nUpdates the existing NSUser or creates a new NSUser if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>user</strong>The NSUser to save.</li></ul><strong>Returns:</strong>NSUser<p></p>\n<pre><code>NSUser  agent;\nNSUser thing = agent.CreateDefaultUser();\nthing = agent.SaveUser(thing);</code></pre>\n"
  example: 
  - "\n<pre><code>NSUser  agent;\nNSUser thing = agent.CreateDefaultUser();\nthing = agent.SaveUser(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveUserFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveUserFromName
  id: 'SaveUserFromName'
  so.intellisense: NSUserAgent.SaveUserFromName
  langs:
  - crmscript
  name: 'SaveUserFromName'
  nameWithType: NSUserAgent.SaveUserFromName
  fullName: CRMScript.NetServer.NSUserAgent.SaveUserFromName
  type: Method
  summary: "\nSave a user, with lookup based on the user name.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString userName;\nNSUser user;\nNSUser res = agent.SaveUserFromName(userName, user);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SaveUserGroup
  commentId: M:CRMScript.NetServer.NSUserAgent.SaveUserGroup
  id: 'SaveUserGroup'
  so.intellisense: NSUserAgent.SaveUserGroup
  langs:
  - crmscript
  name: 'SaveUserGroup'
  nameWithType: NSUserAgent.SaveUserGroup
  fullName: CRMScript.NetServer.NSUserAgent.SaveUserGroup
  type: Method
  summary: "\nSave a user group.  Set UserGroup.Deleted to mark a user group as deleted and invisible in the user interface.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUserGroup userGroup;\nNSUserGroup res = agent.SaveUserGroup(userGroup);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SetDataRight
  commentId: M:CRMScript.NetServer.NSUserAgent.SetDataRight
  id: 'SetDataRight'
  so.intellisense: NSUserAgent.SetDataRight
  langs:
  - crmscript
  name: 'SetDataRight'
  nameWithType: NSUserAgent.SetDataRight
  fullName: CRMScript.NetServer.NSUserAgent.SetDataRight
  type: Method
  summary: "\nSet one specific data right at the given position. An exception will be thrown if non existing position is specified.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SetExternalUserInfo
  commentId: M:CRMScript.NetServer.NSUserAgent.SetExternalUserInfo
  id: 'SetExternalUserInfo'
  so.intellisense: NSUserAgent.SetExternalUserInfo
  langs:
  - crmscript
  name: 'SetExternalUserInfo'
  nameWithType: NSUserAgent.SetExternalUserInfo
  fullName: CRMScript.NetServer.NSUserAgent.SetExternalUserInfo
  type: Method
  summary: "\nModifies an external user. Changes external users information according to the flags set in  externalUserInfoModification.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SetFunctionalRights
  commentId: M:CRMScript.NetServer.NSUserAgent.SetFunctionalRights
  id: 'SetFunctionalRights'
  so.intellisense: NSUserAgent.SetFunctionalRights
  langs:
  - crmscript
  name: 'SetFunctionalRights'
  nameWithType: NSUserAgent.SetFunctionalRights
  fullName: CRMScript.NetServer.NSUserAgent.SetFunctionalRights
  type: Method
  summary: "\nSet all functional rights for the given role. Functional rights not specified here will be removed from the role.\n"
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SetGeneratedPassword
  commentId: M:CRMScript.NetServer.NSUserAgent.SetGeneratedPassword
  id: 'SetGeneratedPassword'
  so.intellisense: NSUserAgent.SetGeneratedPassword
  langs:
  - crmscript
  name: 'SetGeneratedPassword'
  nameWithType: NSUserAgent.SetGeneratedPassword
  fullName: CRMScript.NetServer.NSUserAgent.SetGeneratedPassword
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SetGeneratedPasswordFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.SetGeneratedPasswordFromName
  id: 'SetGeneratedPasswordFromName'
  so.intellisense: NSUserAgent.SetGeneratedPasswordFromName
  langs:
  - crmscript
  name: 'SetGeneratedPasswordFromName'
  nameWithType: NSUserAgent.SetGeneratedPasswordFromName
  fullName: CRMScript.NetServer.NSUserAgent.SetGeneratedPasswordFromName
  type: Method
  summary: 
  example: 
- uid: CRMScript.NetServer.NSUserAgent.SetPassword
  commentId: M:CRMScript.NetServer.NSUserAgent.SetPassword
  id: 'SetPassword'
  so.intellisense: NSUserAgent.SetPassword
  langs:
  - crmscript
  name: 'SetPassword'
  nameWithType: NSUserAgent.SetPassword
  fullName: CRMScript.NetServer.NSUserAgent.SetPassword
  type: Method
  summary: "\nChange password for a user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nInteger associateId;\nString password;\nBool res = agent.SetPassword(associateId, password);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.SetPasswordFromName
  commentId: M:CRMScript.NetServer.NSUserAgent.SetPasswordFromName
  id: 'SetPasswordFromName'
  so.intellisense: NSUserAgent.SetPasswordFromName
  langs:
  - crmscript
  name: 'SetPasswordFromName'
  nameWithType: NSUserAgent.SetPasswordFromName
  fullName: CRMScript.NetServer.NSUserAgent.SetPasswordFromName
  type: Method
  summary: "\nChange password for a user.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nString associateName;\nString password;\nBool res = agent.SetPasswordFromName(associateName, password);</code></pre>\n"
- uid: CRMScript.NetServer.NSUserAgent.ValidateUser
  commentId: M:CRMScript.NetServer.NSUserAgent.ValidateUser
  id: 'ValidateUser'
  so.intellisense: NSUserAgent.ValidateUser
  langs:
  - crmscript
  name: 'ValidateUser'
  nameWithType: NSUserAgent.ValidateUser
  fullName: CRMScript.NetServer.NSUserAgent.ValidateUser
  type: Method
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n"
  example: 
  - "\n<pre><code>NSUserAgent agent;\nNSUser user;\nStringDictionary res = agent.ValidateUser(user);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSUserAgent
  commentId: T:CRMScript.NetServer.NSUserAgent
  isExternal: true
  name: NSUserAgent
  nameWithType: NSUserAgent
  fullName: CRMScript.NetServer.NSUserAgent