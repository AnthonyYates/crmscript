### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSWebhookAgent
  commentId: T:CRMScript.NetServer.NSWebhookAgent
  id: NSWebhookAgent
  so.intellisense: Void.NSWebhookAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook
  - CRMScript.NetServer.NSWebhookAgent.DeleteWebhook
  - CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks
  - CRMScript.NetServer.NSWebhookAgent.GetLastError
  - CRMScript.NetServer.NSWebhookAgent.GetWebhook
  - CRMScript.NetServer.NSWebhookAgent.#ctor
  - CRMScript.NetServer.NSWebhookAgent.SaveWebhook
  - CRMScript.NetServer.NSWebhookAgent.SignalEvent
  - CRMScript.NetServer.NSWebhookAgent.TestWebhook
  name: NSWebhookAgent
  nameWithType: NSWebhookAgent
  fullName: CRMScript.NetServer.NSWebhookAgent
  type: Class
  summary: "\nWebhook definitions* webhooks signal other systems about events inside NetServer.\n"
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook
  commentId: M:CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook
  id: 'CreateDefaultWebhook'
  so.intellisense: NSWebhookAgent.CreateDefaultWebhook
  langs:
  - crmscript
  name: 'CreateDefaultWebhook'
  nameWithType: NSWebhookAgent.CreateDefaultWebhook
  fullName: CRMScript.NetServer.NSWebhookAgent.CreateDefaultWebhook
  type: Method
  summary: "\nSet default values into a new NSWebhook.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>A new NSWebhook with default values.<p></p>\n<pre><code>NSWebhookAgent agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebhook CreateDefaultWebhook()
    parameters:
    return:
      type: CRMScript.NetServer.NSWebhook
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.DeleteWebhook
  commentId: M:CRMScript.NetServer.NSWebhookAgent.DeleteWebhook
  id: 'DeleteWebhook'
  so.intellisense: NSWebhookAgent.DeleteWebhook
  langs:
  - crmscript
  name: 'DeleteWebhook'
  nameWithType: NSWebhookAgent.DeleteWebhook
  fullName: CRMScript.NetServer.NSWebhookAgent.DeleteWebhook
  type: Method
  summary: "\nDeletes the NSWebhook\n"
  remarks: 
  syntax: 
    content: DeleteWebhook(Integer webhook);
    parameters:
    - id: webhook;
      type: CRMScript.Global.Integer
      description: 
    - id: webhookId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.DeleteWebhook(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks
  id: 'GetAllWebhooks'
  so.intellisense: NSWebhookAgent.GetAllWebhooks
  langs:
  - crmscript
  name: 'GetAllWebhooks'
  nameWithType: NSWebhookAgent.GetAllWebhooks
  fullName: CRMScript.NetServer.NSWebhookAgent.GetAllWebhooks
  type: Method
  summary: "\nReturns all webhooks, according to filter criteria\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = Active</li><li>Enum: 2 = Stopped</li><li>Enum: 3 = TooManyErrors</li></ul>\n"
  syntax: 
    content: NSWebhook[] GetAllWebhooks(String nameFilter, String eventFilter, Integer statusFilter)
    parameters:
    - id: nameFilter
      type: CRMScript.Global.String
      description: 
    - id: eventFilter
      type: CRMScript.Global.String
      description: 
    - id: statusFilter
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSWebhook[]
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nString nameFilter;\nString eventFilter;\nInteger statusFilter;\nNSWebhook[] res = agent.GetAllWebhooks(nameFilter, eventFilter, statusFilter);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetLastError
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetLastError
  id: 'GetLastError'
  so.intellisense: NSWebhookAgent.GetLastError
  langs:
  - crmscript
  name: 'GetLastError'
  nameWithType: NSWebhookAgent.GetLastError
  fullName: CRMScript.NetServer.NSWebhookAgent.GetLastError
  type: Method
  summary: "\nReturn the most recent error message received when calling this webhook.\n"
  remarks: 
  syntax: 
    content: String GetLastError(Integer webhookId)
    parameters:
    - id: webhookId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nInteger webhookId;\nString res = agent.GetLastError(webhookId);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.GetWebhook
  commentId: M:CRMScript.NetServer.NSWebhookAgent.GetWebhook
  id: 'GetWebhook'
  so.intellisense: NSWebhookAgent.GetWebhook
  langs:
  - crmscript
  name: 'GetWebhook'
  nameWithType: NSWebhookAgent.GetWebhook
  fullName: CRMScript.NetServer.NSWebhookAgent.GetWebhook
  type: Method
  summary: "\nGets an NSWebhook object.\n"
  remarks: 
  syntax: 
    content: NSWebhook GetWebhook(Integer webhookId);
    parameters:
    - id: webhookId;
      type: CRMScript.Global.Integer
      description: 
    - id: webhookId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSWebhook
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook thing = agent.GetWebhook(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.#ctor
  commentId: M:CRMScript.NetServer.NSWebhookAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSWebhookAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSWebhookAgent.#ctor
  fullName: CRMScript.NetServer.NSWebhookAgent.#ctor
  type: Constructor
  summary: "\nWebhook definitions* webhooks signal other systems about events inside NetServer.\n"
  remarks: 
  syntax: 
    content: NSWebhookAgent
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.SaveWebhook
  commentId: M:CRMScript.NetServer.NSWebhookAgent.SaveWebhook
  id: 'SaveWebhook'
  so.intellisense: NSWebhookAgent.SaveWebhook
  langs:
  - crmscript
  name: 'SaveWebhook'
  nameWithType: NSWebhookAgent.SaveWebhook
  fullName: CRMScript.NetServer.NSWebhookAgent.SaveWebhook
  type: Method
  summary: "\nUpdates the existing NSWebhook or creates a new NSWebhook if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>webhook</strong>The NSWebhook to save.</li></ul><strong>Returns:</strong>New or updated NSWebhook<p></p>\n<pre><code>NSWebhook  agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebhook SaveWebhook(NSWebhook webhook);
    parameters:
    - id: webhook;
      type: CRMScript.NetServer.NSWebhook
      description: 
    return:
      type: CRMScript.NetServer.NSWebhook
  example: 
  - "\n<pre><code>NSWebhook  agent;\nNSWebhook thing = agent.CreateDefaultWebhook();\nthing = agent.SaveWebhook(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.SignalEvent
  commentId: M:CRMScript.NetServer.NSWebhookAgent.SignalEvent
  id: 'SignalEvent'
  so.intellisense: NSWebhookAgent.SignalEvent
  langs:
  - crmscript
  name: 'SignalEvent'
  nameWithType: NSWebhookAgent.SignalEvent
  fullName: CRMScript.NetServer.NSWebhookAgent.SignalEvent
  type: Method
  summary: "\nSignal webhooks that an event has occurred. All webhooks listening for the event will be notified.\n"
  remarks: 
  syntax: 
    content: Void SignalEvent(String eventName, Integer primaryKey, StringObjectDictionary data)
    parameters:
    - id: eventName
      type: CRMScript.Global.String
      description: 
    - id: primaryKey
      type: CRMScript.Global.Integer
      description: 
    - id: data
      type: CRMScript.Global.StringObjectDictionary
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nString eventName;\nInteger primaryKey;\nStringObjectDictionary data;\nagent.SignalEvent(eventName, primaryKey, data);</code></pre>\n"
- uid: CRMScript.NetServer.NSWebhookAgent.TestWebhook
  commentId: M:CRMScript.NetServer.NSWebhookAgent.TestWebhook
  id: 'TestWebhook'
  so.intellisense: NSWebhookAgent.TestWebhook
  langs:
  - crmscript
  name: 'TestWebhook'
  nameWithType: NSWebhookAgent.TestWebhook
  fullName: CRMScript.NetServer.NSWebhookAgent.TestWebhook
  type: Method
  summary: "\nPings a webhook with a 'test' event, returns SUCCESS(true) or FAILURE(false) + the response from the webhook target.\n"
  remarks: 
  syntax: 
    content: NSWebhookResult TestWebhook(NSWebhook webhook)
    parameters:
    - id: webhook
      type: CRMScript.NetServer.NSWebhook
      description: 
    return:
      type: CRMScript.NetServer.NSWebhookResult
  example: 
  - "\n<pre><code>NSWebhookAgent agent;\nNSWebhook webhook;\nNSWebhookResult res = agent.TestWebhook(webhook);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSWebhookAgent
  commentId: T:CRMScript.NetServer.NSWebhookAgent
  isExternal: true
  name: NSWebhookAgent
  nameWithType: NSWebhookAgent
  fullName: CRMScript.NetServer.NSWebhookAgent
- uid: CRMScript.NetServer.NSWebhook
  commentId: T:CRMScript.NetServer.NSWebhook
  isExternal: true
  name: NSWebhook
  nameWithType: NSWebhook
  fullName: CRMScript.NetServer.NSWebhook
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSWebhook[]
  isExternal: true
  name: NSWebhook[]
  nameWithType: NSWebhook[]
  fullName: CRMScript.NetServer.NSWebhook[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSWebhook
    isExternal: true
    name: NSWebhook
    nameWithType: NSWebhook
    fullName: CRMScript.NetServer.NSWebhook
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSWebhook
  commentId: T:CRMScript.NetServer.NSWebhook
  isExternal: true
  name: NSWebhook
  nameWithType: NSWebhook
  fullName: CRMScript.NetServer.NSWebhook
- uid: CRMScript.Global.StringObjectDictionary
  commentId: T:CRMScript.Global.StringObjectDictionary
  isExternal: true
  name: StringObjectDictionary
  nameWithType: StringObjectDictionary
  fullName: CRMScript.Global.StringObjectDictionary
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.NetServer.NSWebhookResult
  commentId: T:CRMScript.NetServer.NSWebhookResult
  isExternal: true
  name: NSWebhookResult
  nameWithType: NSWebhookResult
  fullName: CRMScript.NetServer.NSWebhookResult