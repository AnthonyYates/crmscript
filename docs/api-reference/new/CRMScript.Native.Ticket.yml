### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.Ticket
  commentId: T:CRMScript.Native.Ticket
  id: Ticket
  so.intellisense: Void.Ticket
  langs:
  - crmscript
  children:
  - CRMScript.Native.Ticket.addSecondaryCustomers(Vector)
  - CRMScript.Native.Ticket.buildEmailSubject()
  - CRMScript.Native.Ticket.checkEscalating(Integer)
  - CRMScript.Native.Ticket.delegate()
  - CRMScript.Native.Ticket.getInvolvedOnly()
  - CRMScript.Native.Ticket.getMailFrom()
  - CRMScript.Native.Ticket.getOwnerEmail()
  - CRMScript.Native.Ticket.getOwnerSms()
  - CRMScript.Native.Ticket.getValue(String)
  - CRMScript.Native.Ticket.load(Integer)
  - CRMScript.Native.Ticket.log(String)
  - CRMScript.Native.Ticket.notifyEmail(Integer)
  - CRMScript.Native.Ticket.save(String,Bool)
  - CRMScript.Native.Ticket.sendMessages(String,Bool,String,Integer,String)
  - CRMScript.Native.Ticket.setValue(String,String)
  - CRMScript.Native.Ticket.#ctor()
  - CRMScript.Native.Ticket.toParser()
  - CRMScript.Native.Ticket.toParserRaw()
  name: Ticket
  nameWithType: Ticket
  fullName: CRMScript.Native.Ticket
  type: Class
  summary: "\nClass for representing an eJournal Ticket.\n"
  example: 
  - "\n<pre><code>Ticket t;\n\nt.load(2); // Loads the ticket with id = 2\nprint(t.getValue(&quot;ticketStatus&quot;));\nt.setValue(&quot;title&quot;, &quot;Test&quot;);\nt.setValue(&quot;status&quot;, &quot;1&quot;);\nDateTime d; // Default value for DateTime is now\nt.setValue(&quot;dbiLastModified&quot;, d.toString());\nprint(t.getOwnerEmail()); // Prints name and email of owner</code></pre>\n"
- uid: CRMScript.Native.Ticket.addSecondaryCustomers(Vector)
  commentId: M:CRMScript.Native.Ticket.addSecondaryCustomers(Vector)
  id: 'addSecondaryCustomers(Vector)'
  so.intellisense: Ticket.addSecondaryCustomers
  langs:
  - crmscript
  name: 'addSecondaryCustomers(Vector)'
  nameWithType: Ticket.addSecondaryCustomers(Vector)
  fullName: CRMScript.Native.Ticket.addSecondaryCustomers(Vector)
  type: Method
  summary: "\nAdd seconday customers to the ticket.\n"
  remarks: 
  syntax: 
    content: addSecondaryCustomers(Vector ids)
    parameters:
    - id: ids
      type: CRMScript.Global.Vector
      description: 
  example: 
- uid: CRMScript.Native.Ticket.buildEmailSubject()
  commentId: M:CRMScript.Native.Ticket.buildEmailSubject()
  id: 'buildEmailSubject()'
  so.intellisense: Ticket.buildEmailSubject
  langs:
  - crmscript
  name: 'buildEmailSubject()'
  nameWithType: Ticket.buildEmailSubject()
  fullName: CRMScript.Native.Ticket.buildEmailSubject()
  type: Method
  summary: "\nreturns a String composed by the eJournal tag, the ticketId and the title of the ticket<p></p>\n<ul><li><strong>Returns:</strong>a String composed by the eJournal tag, the ticketId and the title of the ticket</li></ul>\n"
  remarks: 
  syntax: 
    content: buildEmailSubject()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.checkEscalating(Integer)
  commentId: M:CRMScript.Native.Ticket.checkEscalating(Integer)
  id: 'checkEscalating(Integer)'
  so.intellisense: Ticket.checkEscalating
  langs:
  - crmscript
  name: 'checkEscalating(Integer)'
  nameWithType: Ticket.checkEscalating(Integer)
  fullName: CRMScript.Native.Ticket.checkEscalating(Integer)
  type: Method
  summary: "\nThis function does a check according to the ticket's pritority and the input action. The effect of calling this function might be that the escalation stops, restarts or continues.\n"
  remarks: 
  syntax: 
    content: checkEscalating(Integer action)
    parameters:
    - id: action
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.Ticket.delegate()
  commentId: M:CRMScript.Native.Ticket.delegate()
  id: 'delegate()'
  so.intellisense: Ticket.delegate
  langs:
  - crmscript
  name: 'delegate()'
  nameWithType: Ticket.delegate()
  fullName: CRMScript.Native.Ticket.delegate()
  type: Method
  summary: "\nCRMScript method in the Ticket class that delegates a ticket to a user according to the rules on the categoryDelegates the ticket to a user according to the rules on the category of the ticket. You can optionally specify a user ID<strong>not</strong>to delegate to.<p></p>\nFor this function to take effect, you have to call<code>Ticket.save()</code>.\n"
  remarks: 
  syntax: 
    content: delegate()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.getInvolvedOnly()
  commentId: M:CRMScript.Native.Ticket.getInvolvedOnly()
  id: 'getInvolvedOnly()'
  so.intellisense: Ticket.getInvolvedOnly
  langs:
  - crmscript
  name: 'getInvolvedOnly()'
  nameWithType: Ticket.getInvolvedOnly()
  fullName: CRMScript.Native.Ticket.getInvolvedOnly()
  type: Method
  summary: "\nreturns a comma-separated list of the email-addresses of all customers that is not a connected customer to this ticket, but who has recieved a message on this ticket.<p></p>\n<ul><li><strong>Returns:</strong>a comma-separated list of email-addresses</li></ul>\n"
  remarks: 
  syntax: 
    content: getInvolvedOnly()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.getMailFrom()
  commentId: M:CRMScript.Native.Ticket.getMailFrom()
  id: 'getMailFrom()'
  so.intellisense: Ticket.getMailFrom
  langs:
  - crmscript
  name: 'getMailFrom()'
  nameWithType: Ticket.getMailFrom()
  fullName: CRMScript.Native.Ticket.getMailFrom()
  type: Method
  summary: "\nThis function determines and returns the most appropriate from-address, when sending a mail-message on a ticket.<p></p>\n<ul><li><strong>Returns:</strong>The most appropriate from-address specified on with address, the ticket has arrived on, the category, etc</li></ul>\n"
  remarks: 
  syntax: 
    content: getMailFrom()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.getOwnerEmail()
  commentId: M:CRMScript.Native.Ticket.getOwnerEmail()
  id: 'getOwnerEmail()'
  so.intellisense: Ticket.getOwnerEmail
  langs:
  - crmscript
  name: 'getOwnerEmail()'
  nameWithType: Ticket.getOwnerEmail()
  fullName: CRMScript.Native.Ticket.getOwnerEmail()
  type: Method
  summary: "\nThis function returns the owner of the ticket printed as &quot;Name&quot; &lt;email-addr&gt;.<p></p>\n<ul><li><strong>Returns:</strong>the owners name and email-address</li></ul>\n"
  remarks: 
  syntax: 
    content: getOwnerEmail()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.getOwnerSms()
  commentId: M:CRMScript.Native.Ticket.getOwnerSms()
  id: 'getOwnerSms()'
  so.intellisense: Ticket.getOwnerSms
  langs:
  - crmscript
  name: 'getOwnerSms()'
  nameWithType: Ticket.getOwnerSms()
  fullName: CRMScript.Native.Ticket.getOwnerSms()
  type: Method
  summary: "\nThis function returns the cellphone number of the owner of the ticket<p></p>\n<ul><li><strong>Returns:</strong>The cellphone number of the owner of the ticket as a String.</li></ul>\n"
  remarks: 
  syntax: 
    content: getOwnerSms()
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.getValue(String)
  commentId: M:CRMScript.Native.Ticket.getValue(String)
  id: 'getValue(String)'
  so.intellisense: Ticket.getValue
  langs:
  - crmscript
  name: 'getValue(String)'
  nameWithType: Ticket.getValue(String)
  fullName: CRMScript.Native.Ticket.getValue(String)
  type: Method
  summary: "\nGet the value of given column name as a String\n"
  remarks: 
  syntax: 
    content: getValue(String colName)
    parameters:
    - id: colName
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.Ticket.load(Integer)
  commentId: M:CRMScript.Native.Ticket.load(Integer)
  id: 'load(Integer)'
  so.intellisense: Ticket.load
  langs:
  - crmscript
  name: 'load(Integer)'
  nameWithType: Ticket.load(Integer)
  fullName: CRMScript.Native.Ticket.load(Integer)
  type: Method
  summary: "\nLoad ticket with given id into this object, return true if successful, false otherwise.\n"
  remarks: 
  syntax: 
    content: load(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.Ticket.log(String)
  commentId: M:CRMScript.Native.Ticket.log(String)
  id: 'log(String)'
  so.intellisense: Ticket.log
  langs:
  - crmscript
  name: 'log(String)'
  nameWithType: Ticket.log(String)
  fullName: CRMScript.Native.Ticket.log(String)
  type: Method
  summary: "\nCRMScript method in the Ticket class that writes a message to the ticket logWrites the given message to the ticket log. Used for logging changes and events on a ticket<p></p>\nYou can optionally specify who updated the log.\n"
  remarks: 
  syntax: 
    content: log()
    parameters:
    - id: who
      type: CRMScript.Global.String
      description: Optional. The name of the user that made the change to log
  example: 
- uid: CRMScript.Native.Ticket.notifyEmail(Integer)
  commentId: M:CRMScript.Native.Ticket.notifyEmail(Integer)
  id: 'notifyEmail(Integer)'
  so.intellisense: Ticket.notifyEmail
  langs:
  - crmscript
  name: 'notifyEmail(Integer)'
  nameWithType: Ticket.notifyEmail(Integer)
  fullName: CRMScript.Native.Ticket.notifyEmail(Integer)
  type: Method
  summary: "\nThis function sends a notify-email (a replyTemplate) to the owner of the ticket.
To use for events like new ticket, new message on ticket etc.<p></p>\n<ul><li><strong>ReplyTemplateId:</strong>The id of the replyTemplate you want to send.</li><li><strong>Returns:</strong>true if the email was sent successfully, else false.</li></ul>\n"
  remarks: 
  syntax: 
    content: notifyEmail(Integer replyTemplateId)
    parameters:
    - id: replyTemplateId
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.Ticket.save(String,Bool)
  commentId: M:CRMScript.Native.Ticket.save(String,Bool)
  id: 'save(String,Bool)'
  so.intellisense: Ticket.save
  langs:
  - crmscript
  name: 'save(String,Bool)'
  nameWithType: Ticket.save(String,Bool)
  fullName: CRMScript.Native.Ticket.save(String,Bool)
  type: Method
  summary: "\nCRMScript method in the Ticket class that saves the objectSaves the ticket and returns the database ID of the stored ticket.<p></p>\nYou can optionally specify how to handle read status and escalation.<p></p>\nIn addition, you can also write a message to the ticket log in both cases.\n"
  remarks: 
  syntax: 
    content: save()
    parameters:
    - id: log
      type: CRMScript.Global.String
      description: Optional. The message that will be saved on the ticket's log
    - id: setReadStatus
      type: CRMScript.Global.Bool
      description: Optional. Whether to calculate and set the read status on save. True = yes. Used in combination with doNotCheckEscalating.
  example: 
- uid: CRMScript.Native.Ticket.sendMessages(String,Bool,String,Integer,String)
  commentId: M:CRMScript.Native.Ticket.sendMessages(String,Bool,String,Integer,String)
  id: 'sendMessages(String,Bool,String,Integer,String)'
  so.intellisense: Ticket.sendMessages
  langs:
  - crmscript
  name: 'sendMessages(String,Bool,String,Integer,String)'
  nameWithType: Ticket.sendMessages(String,Bool,String,Integer,String)
  fullName: CRMScript.Native.Ticket.sendMessages(String,Bool,String,Integer,String)
  type: Method
  summary: "\nWill send the given messages just like the forward ticket functionality in the GUI. The forwarded messages are separated by a line, and the comment is placed on top of the mail.\n"
  remarks: 
  syntax: 
    content: sendMessages(String subject, StringMatrix recipients, Bool fromCust, String messages, Integer msgId, String comment)
    parameters:
    - id: subject
      type: CRMScript.Global.String
      description: 
    - id: fromCust
      type: CRMScript.Global.Bool
      description: 
    - id: messages
      type: CRMScript.Global.String
      description: 
    - id: msgId
      type: CRMScript.Global.Integer
      description: 
    - id: comment
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.Ticket.setValue(String,String)
  commentId: M:CRMScript.Native.Ticket.setValue(String,String)
  id: 'setValue(String,String)'
  so.intellisense: Ticket.setValue
  langs:
  - crmscript
  name: 'setValue(String,String)'
  nameWithType: Ticket.setValue(String,String)
  fullName: CRMScript.Native.Ticket.setValue(String,String)
  type: Method
  summary: "\nSets column colName to the given value.
Obs: For this to actually affect the ticket, you will have to use the function<code>save()</code>after you have set all the values you want.\n"
  remarks: "\n<h3>Values</h3><p>Possible values are the extrafields on the ticket and the following:</p><ul><li>title</li><li>category: the category id</li><li>ownedBy: (owned_by), the id of the user who owns the ticket</li><li>slevel: the security level of the ticket, 1 is internal, 2 is external</li><li>priority: the id</li><li>status: 1 = active, 2 = closed, 3 = postponed, 4 = deleted, 5 = composed</li><li>ticketStatus: (ticket_status), the id of the custom status field</li><li>custId: the id of the primary customer</li><li>customers: comma separated list of customer ids</li><li>createdBy: the id of the user who posted the ticket, 1 if the ticket is posted into the system</li><li>author: a string containing the name of the ticket author</li><li>activate: the datetime when the ticket was activated</li><li>createdAt: (created_at), the datetime when the ticket was created</li><li>repliedAt: (replied_at), the datetime when the ticket first was replied at</li><li>stopEscalation</li><li>readStatus (read_status)</li><li>deadline</li><li>filterAddress</li><li>timeToClose</li><li>realTimeToClose</li><li>dbiAgentId</li><li>dbiKey</li><li>dbiLastModified</li></ul>\n"
  syntax: 
    content: setValue(String colName, String value)
    parameters:
    - id: colName
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.Ticket.#ctor()
  commentId: M:CRMScript.Native.Ticket.#ctor()
  id: '#ctor()'
  so.intellisense: Void.Ticket
  langs:
  - crmscript
  name: '#ctor()'
  nameWithType: Ticket.#ctor()
  fullName: CRMScript.Native.Ticket.#ctor()
  type: Constructor
  summary: "\nClass for representing an eJournal Ticket.\n"
  remarks: 
  syntax: 
    content: Ticket
  example: 
  - "\n<pre><code>Ticket t;\n\nt.load(2); // Loads the ticket with id = 2\nprint(t.getValue(&quot;ticketStatus&quot;));\nt.setValue(&quot;title&quot;, &quot;Test&quot;);\nt.setValue(&quot;status&quot;, &quot;1&quot;);\nDateTime d; // Default value for DateTime is now\nt.setValue(&quot;dbiLastModified&quot;, d.toString());\nprint(t.getOwnerEmail()); // Prints name and email of owner</code></pre>\n"
- uid: CRMScript.Native.Ticket.toParser()
  commentId: M:CRMScript.Native.Ticket.toParser()
  id: 'toParser()'
  so.intellisense: Ticket.toParser
  langs:
  - crmscript
  name: 'toParser()'
  nameWithType: Ticket.toParser()
  fullName: CRMScript.Native.Ticket.toParser()
  type: Method
  summary: "\nThis function will fill the variable space of theParser with all values of the ticket.
As opposed to the function<code>toParserRaw()</code>, the String variables title and author are in html.\n"
  remarks: 
  syntax: 
    content: toParser(Parser theParser)
    parameters:
  example: 
- uid: CRMScript.Native.Ticket.toParserRaw()
  commentId: M:CRMScript.Native.Ticket.toParserRaw()
  id: 'toParserRaw()'
  so.intellisense: Ticket.toParserRaw
  langs:
  - crmscript
  name: 'toParserRaw()'
  nameWithType: Ticket.toParserRaw()
  fullName: CRMScript.Native.Ticket.toParserRaw()
  type: Method
  summary: "\nThis function fills theParser with the values of the ticket.
As opposed to the function<code>toParser()</code>who set several of the String-values as html, all these variables will be in plain text.\n"
  remarks: 
  syntax: 
    content: toParserRaw(Parser theParser)
    parameters:
  example: 
references:
- uid: CRMScript.Native.Ticket
  commentId: T:CRMScript.Native.Ticket
  isExternal: true
  name: Ticket
  nameWithType: Ticket
  fullName: CRMScript.Native.Ticket
- uid: CRMScript.Global.Vector
  commentId: T:CRMScript.Global.Vector
  isExternal: true
  name: Vector
  nameWithType: Vector
  fullName: CRMScript.Global.Vector
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool