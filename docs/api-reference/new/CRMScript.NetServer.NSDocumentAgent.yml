### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSDocumentAgent
  commentId: T:CRMScript.NetServer.NSDocumentAgent
  id: NSDocumentAgent
  so.intellisense: Void.NSDocumentAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSDocumentAgent.CheckinDocument
  - CRMScript.NetServer.NSDocumentAgent.CheckoutDocument
  - CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  - CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentPreview
  - CRMScript.NetServer.NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  - CRMScript.NetServer.NSDocumentAgent.CreateDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  - CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  - CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  - CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  - CRMScript.NetServer.NSDocumentAgent.CreateTempFile
  - CRMScript.NetServer.NSDocumentAgent.DeleteDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.DeletePhysicalDocument
  - CRMScript.NetServer.NSDocumentAgent.DeleteTempFile
  - CRMScript.NetServer.NSDocumentAgent.ExecuteDocumentCommand
  - CRMScript.NetServer.NSDocumentAgent.GetAppointmentDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetCheckoutState
  - CRMScript.NetServer.NSDocumentAgent.GetContactDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateHeading
  - CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateType
  - CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateTypes
  - CRMScript.NetServer.NSDocumentAgent.GetDocument
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentCommands
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentList
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentProperties
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentsByTemplateHeading
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentStreamFromEntity
  - CRMScript.NetServer.NSDocumentAgent.GetDocumentUrl
  - CRMScript.NetServer.NSDocumentAgent.GetMyPublishedDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetPersonDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByDate
  - CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  - CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateType
  - CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  - CRMScript.NetServer.NSDocumentAgent.GetPluginCapabilities
  - CRMScript.NetServer.NSDocumentAgent.GetPluginList
  - CRMScript.NetServer.NSDocumentAgent.GetPreviewDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.GetProjectDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  - CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateType
  - CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  - CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  - CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  - CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  - CRMScript.NetServer.NSDocumentAgent.GetPublishedDocument
  - CRMScript.NetServer.NSDocumentAgent.GetPublishedDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetPublishedDocumentsByDate
  - CRMScript.NetServer.NSDocumentAgent.GetPublishedPersonDocumentsByDate
  - CRMScript.NetServer.NSDocumentAgent.GetPublishedProjectDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetSaleDocuments
  - CRMScript.NetServer.NSDocumentAgent.GetSanitizedDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStream
  - CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStreamFromId
  - CRMScript.NetServer.NSDocumentAgent.GetSuggestedDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.GetTempFile
  - CRMScript.NetServer.NSDocumentAgent.GetTemplateStream
  - CRMScript.NetServer.NSDocumentAgent.GetTemplateStreamFromId
  - CRMScript.NetServer.NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.GetVersionList
  - CRMScript.NetServer.NSDocumentAgent.#ctor
  - CRMScript.NetServer.NSDocumentAgent.RenameDocument
  - CRMScript.NetServer.NSDocumentAgent.SaveDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.SaveDocumentTemplateStream
  - CRMScript.NetServer.NSDocumentAgent.SavePrivacyReport
  - CRMScript.NetServer.NSDocumentAgent.SaveSuggestedDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.SetDocumentStream
  - CRMScript.NetServer.NSDocumentAgent.SetDocumentStreamFromId
  - CRMScript.NetServer.NSDocumentAgent.SetTemplateStream
  - CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  - CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  - CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  - CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  - CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariables
  - CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesEx
  - CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  - CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  - CRMScript.NetServer.NSDocumentAgent.UndoCheckoutDocument
  - CRMScript.NetServer.NSDocumentAgent.ValidateDocumentEntity
  - CRMScript.NetServer.NSDocumentAgent.VerifyGetDocumentStream
  name: NSDocumentAgent
  nameWithType: NSDocumentAgent
  fullName: CRMScript.NetServer.NSDocumentAgent
  type: Class
  summary: "\nCollection of all services that work with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.\n"
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CheckinDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CheckinDocument
  id: 'CheckinDocument'
  so.intellisense: NSDocumentAgent.CheckinDocument
  langs:
  - crmscript
  name: 'CheckinDocument'
  nameWithType: NSDocumentAgent.CheckinDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.CheckinDocument
  type: Method
  summary: "\nCheck in a currently checked-out document\n"
  remarks: 
  syntax: 
    content: NSReturnInfo CheckinDocument(Integer documentId, String[] allowedReturnTypes, String versionDescription, String[] versionExtraFields)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: allowedReturnTypes
      type: CRMScript.Global.String[]
      description: 
    - id: versionDescription
      type: CRMScript.Global.String
      description: 
    - id: versionExtraFields
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSReturnInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] allowedReturnTypes;\nString versionDescription;\nString[] versionExtraFields;\nNSReturnInfo res = agent.CheckinDocument(documentId, allowedReturnTypes, versionDescription, versionExtraFields);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CheckoutDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CheckoutDocument
  id: 'CheckoutDocument'
  so.intellisense: NSDocumentAgent.CheckoutDocument
  langs:
  - crmscript
  name: 'CheckoutDocument'
  nameWithType: NSDocumentAgent.CheckoutDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.CheckoutDocument
  type: Method
  summary: "\nCheck out a document for editing by the current user.\n"
  remarks: 
  syntax: 
    content: NSReturnInfo CheckoutDocument(Integer documentId, String[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: allowedReturnTypes
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSReturnInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] allowedReturnTypes;\nNSReturnInfo res = agent.CheckoutDocument(documentId, allowedReturnTypes);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntity
  id: 'CreateDefaultDocumentEntity'
  so.intellisense: NSDocumentAgent.CreateDefaultDocumentEntity
  langs:
  - crmscript
  name: 'CreateDefaultDocumentEntity'
  nameWithType: NSDocumentAgent.CreateDefaultDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntity
  type: Method
  summary: "\nSet default values into a new NSDocumentEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSDocumentEntity<p></p>\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity thing = agent.CreateDefaultDocumentEntity();\nthing = agent.SaveDocumentEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateDefaultDocumentEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity thing = agent.CreateDefaultDocumentEntity();\nthing = agent.SaveDocumentEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  id: 'CreateDefaultDocumentEntityFromSuggestion'
  so.intellisense: NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  langs:
  - crmscript
  name: 'CreateDefaultDocumentEntityFromSuggestion'
  nameWithType: NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentEntityFromSuggestion
  type: Method
  summary: "\n<strong>Returns:</strong>NSDocumentEntity\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateDefaultDocumentEntityFromSuggestion(Integer suggestedDocumentId)
    parameters:
    - id: suggestedDocumentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentPreview
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentPreview
  id: 'CreateDefaultDocumentPreview'
  so.intellisense: NSDocumentAgent.CreateDefaultDocumentPreview
  langs:
  - crmscript
  name: 'CreateDefaultDocumentPreview'
  nameWithType: NSDocumentAgent.CreateDefaultDocumentPreview
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDefaultDocumentPreview
  type: Method
  summary: "\nSet default values into a new NSDocumentPreview.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSDocumentPreview<p></p>\n<pre><code>NSDocumentAgent agent;\nNSDocumentPreview thing = agent.CreateDefaultDocumentPreview();\nthing = agent.SaveDocumentPreview(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentPreview CreateDefaultDocumentPreview()
    parameters:
    return:
      type: CRMScript.NetServer.NSDocumentPreview
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentPreview thing = agent.CreateDefaultDocumentPreview();\nthing = agent.SaveDocumentPreview(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  id: 'CreateDefaultSuggestedDocumentEntity'
  so.intellisense: NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  langs:
  - crmscript
  name: 'CreateDefaultSuggestedDocumentEntity'
  nameWithType: NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDefaultSuggestedDocumentEntity
  type: Method
  summary: "\nSet default values into a new NSSuggestedDocumentEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSSuggestedDocumentEntity<p></p>\n<pre><code>NSDocumentAgent agent;\nNSSuggestedDocumentEntity thing = agent.CreateDefaultSuggestedDocumentEntity();\nthing = agent.SaveSuggestedDocumentEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSuggestedDocumentEntity CreateDefaultSuggestedDocumentEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSSuggestedDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSSuggestedDocumentEntity thing = agent.CreateDefaultSuggestedDocumentEntity();\nthing = agent.SaveSuggestedDocumentEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  id: 'CreateDefaultTemplateVariablesParameters'
  so.intellisense: NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  langs:
  - crmscript
  name: 'CreateDefaultTemplateVariablesParameters'
  nameWithType: NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDefaultTemplateVariablesParameters
  type: Method
  summary: "\nSet default values into a new NSTemplateVariablesParameters.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSTemplateVariablesParameters<p></p>\n<pre><code>NSDocumentAgent agent;\nNSTemplateVariablesParameters thing = agent.CreateDefaultTemplateVariablesParameters();\nthing = agent.SaveTemplateVariablesParameters(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTemplateVariablesParameters CreateDefaultTemplateVariablesParameters()
    parameters:
    return:
      type: CRMScript.NetServer.NSTemplateVariablesParameters
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSTemplateVariablesParameters thing = agent.CreateDefaultTemplateVariablesParameters();\nthing = agent.SaveTemplateVariablesParameters(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateDocumentStream
  id: 'CreateDocumentStream'
  so.intellisense: NSDocumentAgent.CreateDocumentStream
  langs:
  - crmscript
  name: 'CreateDocumentStream'
  nameWithType: NSDocumentAgent.CreateDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateDocumentStream
  type: Method
  summary: "\nCreates a new NSStream that can be used to store the document in the file archive.\n"
  remarks: 
  syntax: 
    content: NSStream CreateDocumentStream(NSDocumentEntity documentEntity, Bool overwriteExistingData)
    parameters:
    - id: documentEntity
      type: CRMScript.NetServer.NSDocumentEntity
      description: 
    - id: overwriteExistingData
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity documentEntity;\nBool overwriteExistingData;\nNSStream res = agent.CreateDocumentStream(documentEntity, overwriteExistingData);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  id: 'CreateNewPhysicalDocumentFromTemplate'
  so.intellisense: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  langs:
  - crmscript
  name: 'CreateNewPhysicalDocumentFromTemplate'
  nameWithType: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplate
  type: Method
  summary: "\nCreate a new document content based on a document template and store it in the document archive.  Tags are substituted according to the provided id's.  Use GetDocumentStream to obtain the created document. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateNewPhysicalDocumentFromTemplate(Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, String uiCulture)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nString uiCulture;\nNSDocumentEntity res = agent.CreateNewPhysicalDocumentFromTemplate(contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  id: 'CreateNewPhysicalDocumentFromTemplateWithCustomTags'
  so.intellisense: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  langs:
  - crmscript
  name: 'CreateNewPhysicalDocumentFromTemplateWithCustomTags'
  nameWithType: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags
  type: Method
  summary: "\nCreate a new physical document based on a document template and store it in the document archive.  Tags are substituted according to the provided id's.  Use GetDocumentStream to obtain the created document content. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateNewPhysicalDocumentFromTemplateWithCustomTags(Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, String[] customTags, String[] customValues, String uiCulture)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.String[]
      description: 
    - id: customValues
      type: CRMScript.Global.String[]
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nString[] customTags;\nString[] customValues;\nString uiCulture;\nNSDocumentEntity res = agent.CreateNewPhysicalDocumentFromTemplateWithCustomTags(contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, customTags, customValues, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  id: 'CreateNewPhysicalDocumentFromTemplateWithCustomTags2'
  so.intellisense: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  langs:
  - crmscript
  name: 'CreateNewPhysicalDocumentFromTemplateWithCustomTags2'
  nameWithType: NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2
  type: Method
  summary: "\nCreate a new physical document based on a document template and store it in the document archive.  Tags are substituted according to the provided id's.  Use GetDocumentStream to obtain the created document content. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateNewPhysicalDocumentFromTemplateWithCustomTags2(Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, StringDictionary customTags, String uiCulture)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.StringDictionary
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nStringDictionary customTags;\nString uiCulture;\nNSDocumentEntity res = agent.CreateNewPhysicalDocumentFromTemplateWithCustomTags2(contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, customTags, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  id: 'CreateNewPhysicalMailMergeDocumentFromTemplate'
  so.intellisense: NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  langs:
  - crmscript
  name: 'CreateNewPhysicalMailMergeDocumentFromTemplate'
  nameWithType: NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateNewPhysicalMailMergeDocumentFromTemplate
  type: Method
  summary: "\nCreate a new physical document based on the documents template. Do not replace template tags, as the document is going to be used as a mail merge source. Use GetDocumentStream to obtain the created documents. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity CreateNewPhysicalMailMergeDocumentFromTemplate(Integer documentId, String uiCulture)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString uiCulture;\nNSDocumentEntity res = agent.CreateNewPhysicalMailMergeDocumentFromTemplate(documentId, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.CreateTempFile
  commentId: M:CRMScript.NetServer.NSDocumentAgent.CreateTempFile
  id: 'CreateTempFile'
  so.intellisense: NSDocumentAgent.CreateTempFile
  langs:
  - crmscript
  name: 'CreateTempFile'
  nameWithType: NSDocumentAgent.CreateTempFile
  fullName: CRMScript.NetServer.NSDocumentAgent.CreateTempFile
  type: Method
  summary: "\nCreate a new temporary file based on the provided stream.  Specified filename may be overridden, and actual name is returned.\n"
  remarks: 
  syntax: 
    content: String CreateTempFile(String filename, NSStream dataStream)
    parameters:
    - id: filename
      type: CRMScript.Global.String
      description: 
    - id: dataStream
      type: CRMScript.NetServer.NSStream
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString filename;\nNSStream dataStream;\nString res = agent.CreateTempFile(filename, dataStream);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.DeleteDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.DeleteDocumentEntity
  id: 'DeleteDocumentEntity'
  so.intellisense: NSDocumentAgent.DeleteDocumentEntity
  langs:
  - crmscript
  name: 'DeleteDocumentEntity'
  nameWithType: NSDocumentAgent.DeleteDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.DeleteDocumentEntity
  type: Method
  summary: "\nDeletes the NSDocumentEntity\n"
  remarks: 
  syntax: 
    content: DeleteDocumentEntity(Integer documentEntity);
    parameters:
    - id: documentEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: documentEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nagent.DeleteDocumentEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.DeletePhysicalDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.DeletePhysicalDocument
  id: 'DeletePhysicalDocument'
  so.intellisense: NSDocumentAgent.DeletePhysicalDocument
  langs:
  - crmscript
  name: 'DeletePhysicalDocument'
  nameWithType: NSDocumentAgent.DeletePhysicalDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.DeletePhysicalDocument
  type: Method
  summary: "\nDelete the document contents\n"
  remarks: 
  syntax: 
    content: NSReturnInfo DeletePhysicalDocument(Integer documentId, String[] allowedReturnType)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: allowedReturnType
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSReturnInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] allowedReturnType;\nNSReturnInfo res = agent.DeletePhysicalDocument(documentId, allowedReturnType);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.DeleteTempFile
  commentId: M:CRMScript.NetServer.NSDocumentAgent.DeleteTempFile
  id: 'DeleteTempFile'
  so.intellisense: NSDocumentAgent.DeleteTempFile
  langs:
  - crmscript
  name: 'DeleteTempFile'
  nameWithType: NSDocumentAgent.DeleteTempFile
  fullName: CRMScript.NetServer.NSDocumentAgent.DeleteTempFile
  type: Method
  summary: "\nDelete a temporary file created with CreateTempFile.\n"
  remarks: 
  syntax: 
    content: Void DeleteTempFile(String filename)
    parameters:
    - id: filename
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSDocumentAgent.ExecuteDocumentCommand
  commentId: M:CRMScript.NetServer.NSDocumentAgent.ExecuteDocumentCommand
  id: 'ExecuteDocumentCommand'
  so.intellisense: NSDocumentAgent.ExecuteDocumentCommand
  langs:
  - crmscript
  name: 'ExecuteDocumentCommand'
  nameWithType: NSDocumentAgent.ExecuteDocumentCommand
  fullName: CRMScript.NetServer.NSDocumentAgent.ExecuteDocumentCommand
  type: Method
  summary: "\nExecute a custom command on a particular document, optionally a particular version\n"
  remarks: 
  syntax: 
    content: NSReturnInfo ExecuteDocumentCommand(Integer documentId, String versionId, String[] allowedReturnTypes, String command, String[] additionalData)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: versionId
      type: CRMScript.Global.String
      description: 
    - id: allowedReturnTypes
      type: CRMScript.Global.String[]
      description: 
    - id: command
      type: CRMScript.Global.String
      description: 
    - id: additionalData
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSReturnInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString versionId;\nString[] allowedReturnTypes;\nString command;\nString[] additionalData;\nNSReturnInfo res = agent.ExecuteDocumentCommand(documentId, versionId, allowedReturnTypes, command, additionalData);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetAppointmentDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetAppointmentDocuments
  id: 'GetAppointmentDocuments'
  so.intellisense: NSDocumentAgent.GetAppointmentDocuments
  langs:
  - crmscript
  name: 'GetAppointmentDocuments'
  nameWithType: NSDocumentAgent.GetAppointmentDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetAppointmentDocuments
  type: Method
  summary: "\nGet all documents that are linked to the appointment. I.e. the documents that are listed in the appointment dialog.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetAppointmentDocuments(Integer appointmentId)
    parameters:
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger appointmentId;\nNSDocument[] res = agent.GetAppointmentDocuments(appointmentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetCheckoutState
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetCheckoutState
  id: 'GetCheckoutState'
  so.intellisense: NSDocumentAgent.GetCheckoutState
  langs:
  - crmscript
  name: 'GetCheckoutState'
  nameWithType: NSDocumentAgent.GetCheckoutState
  fullName: CRMScript.NetServer.NSDocumentAgent.GetCheckoutState
  type: Method
  summary: "\nGet the current checkout state for a document, relative to the user perforing the call.\n"
  remarks: 
  syntax: 
    content: NSCheckoutInfo GetCheckoutState(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSCheckoutInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSCheckoutInfo res = agent.GetCheckoutState(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetContactDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetContactDocuments
  id: 'GetContactDocuments'
  so.intellisense: NSDocumentAgent.GetContactDocuments
  langs:
  - crmscript
  name: 'GetContactDocuments'
  nameWithType: NSDocumentAgent.GetContactDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetContactDocuments
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the contact specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetContactDocuments(Integer contactId, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetContactDocuments(contactId, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateHeading
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateHeading
  id: 'GetContactDocumentsByTemplateHeading'
  so.intellisense: NSDocumentAgent.GetContactDocumentsByTemplateHeading
  langs:
  - crmscript
  name: 'GetContactDocumentsByTemplateHeading'
  nameWithType: NSDocumentAgent.GetContactDocumentsByTemplateHeading
  fullName: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateHeading
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by the document template heading. The document appointments belong to the contact specified. The heading represents a grouping or filtering of document templates.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetContactDocumentsByTemplateHeading(Integer contactId, DateTime startTime, DateTime endTime, Integer count, Integer templateHeadingId)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: templateHeadingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger templateHeadingId;\nNSDocument[] res = agent.GetContactDocumentsByTemplateHeading(contactId, startTime, endTime, count, templateHeadingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateType
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateType
  id: 'GetContactDocumentsByTemplateType'
  so.intellisense: NSDocumentAgent.GetContactDocumentsByTemplateType
  langs:
  - crmscript
  name: 'GetContactDocumentsByTemplateType'
  nameWithType: NSDocumentAgent.GetContactDocumentsByTemplateType
  fullName: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateType
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the contact specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetContactDocumentsByTemplateType(Integer contactId, DateTime startTime, DateTime endTime, Integer count, Integer documentTemplateId)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger documentTemplateId;\nNSDocument[] res = agent.GetContactDocumentsByTemplateType(contactId, startTime, endTime, count, documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateTypes
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateTypes
  id: 'GetContactDocumentsByTemplateTypes'
  so.intellisense: NSDocumentAgent.GetContactDocumentsByTemplateTypes
  langs:
  - crmscript
  name: 'GetContactDocumentsByTemplateTypes'
  nameWithType: NSDocumentAgent.GetContactDocumentsByTemplateTypes
  fullName: CRMScript.NetServer.NSDocumentAgent.GetContactDocumentsByTemplateTypes
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the contact specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetContactDocumentsByTemplateTypes(Integer contactId, DateTime startTime, DateTime endTime, Integer count, Integer[] documentTemplateIds)
    parameters:
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger contactId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger[] documentTemplateIds;\nNSDocument[] res = agent.GetContactDocumentsByTemplateTypes(contactId, startTime, endTime, count, documentTemplateIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocument
  id: 'GetDocument'
  so.intellisense: NSDocumentAgent.GetDocument
  langs:
  - crmscript
  name: 'GetDocument'
  nameWithType: NSDocumentAgent.GetDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocument
  type: Method
  summary: "\nGets an NSDocument object.\n"
  remarks: 
  syntax: 
    content: NSDocument GetDocument(Integer documentId);
    parameters:
    - id: documentId;
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocument
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocument thing = agent.GetDocument(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentCommands
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentCommands
  id: 'GetDocumentCommands'
  so.intellisense: NSDocumentAgent.GetDocumentCommands
  langs:
  - crmscript
  name: 'GetDocumentCommands'
  nameWithType: NSDocumentAgent.GetDocumentCommands
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentCommands
  type: Method
  summary: "\nGet a list of custom commands valid for the specific document at this time. This information should not be cached by clients, as it may change between documents and over time.\n"
  remarks: 
  syntax: 
    content: NSCommandInfo[] GetDocumentCommands(Integer documentId, String[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: allowedReturnTypes
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSCommandInfo[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] allowedReturnTypes;\nNSCommandInfo[] res = agent.GetDocumentCommands(documentId, allowedReturnTypes);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentEntity
  id: 'GetDocumentEntity'
  so.intellisense: NSDocumentAgent.GetDocumentEntity
  langs:
  - crmscript
  name: 'GetDocumentEntity'
  nameWithType: NSDocumentAgent.GetDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentEntity
  type: Method
  summary: "\nGets an NSDocumentEntity object.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity GetDocumentEntity(Integer documentEntityId);
    parameters:
    - id: documentEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: documentEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity thing = agent.GetDocumentEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentList
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentList
  id: 'GetDocumentList'
  so.intellisense: NSDocumentAgent.GetDocumentList
  langs:
  - crmscript
  name: 'GetDocumentList'
  nameWithType: NSDocumentAgent.GetDocumentList
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentList
  type: Method
  summary: "\nGets a vector of NSDocument objects.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetDocumentList(Integer[]  documentIds);
    parameters:
    - id: documentIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: documentIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSDocumentAgent agent;\nNSDocument[] docs = agent.GetDocumentList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentProperties
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentProperties
  id: 'GetDocumentProperties'
  so.intellisense: NSDocumentAgent.GetDocumentProperties
  langs:
  - crmscript
  name: 'GetDocumentProperties'
  nameWithType: NSDocumentAgent.GetDocumentProperties
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentProperties
  type: Method
  summary: "\nGet plugin-dependent properties for the document. A number of standard properties that should be supported by all plugins are defined in SuperOffice.CRM.Documents.Constants.Properties.\n"
  remarks: 
  syntax: 
    content: StringDictionary GetDocumentProperties(Integer documentId, String[] requestedProperties)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: requestedProperties
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] requestedProperties;\nStringDictionary res = agent.GetDocumentProperties(documentId, requestedProperties);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentsByTemplateHeading
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentsByTemplateHeading
  id: 'GetDocumentsByTemplateHeading'
  so.intellisense: NSDocumentAgent.GetDocumentsByTemplateHeading
  langs:
  - crmscript
  name: 'GetDocumentsByTemplateHeading'
  nameWithType: NSDocumentAgent.GetDocumentsByTemplateHeading
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentsByTemplateHeading
  type: Method
  summary: "\nMethod that returns document appointments, filtered by the document template heading. The heading represents a grouping or filtering of document templates.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetDocumentsByTemplateHeading(Integer templateHeadingId)
    parameters:
    - id: templateHeadingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger templateHeadingId;\nNSDocument[] res = agent.GetDocumentsByTemplateHeading(templateHeadingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentStream
  id: 'GetDocumentStream'
  so.intellisense: NSDocumentAgent.GetDocumentStream
  langs:
  - crmscript
  name: 'GetDocumentStream'
  nameWithType: NSDocumentAgent.GetDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentStream
  type: Method
  summary: "\nGet the document content as a stream\n"
  remarks: 
  syntax: 
    content: NSStream GetDocumentStream(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSStream res = agent.GetDocumentStream(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentStreamFromEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentStreamFromEntity
  id: 'GetDocumentStreamFromEntity'
  so.intellisense: NSDocumentAgent.GetDocumentStreamFromEntity
  langs:
  - crmscript
  name: 'GetDocumentStreamFromEntity'
  nameWithType: NSDocumentAgent.GetDocumentStreamFromEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentStreamFromEntity
  type: Method
  summary: "\nGet the document as a stream\n"
  remarks: 
  syntax: 
    content: NSStream GetDocumentStreamFromEntity(NSDocumentEntity documentEntity)
    parameters:
    - id: documentEntity
      type: CRMScript.NetServer.NSDocumentEntity
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity documentEntity;\nNSStream res = agent.GetDocumentStreamFromEntity(documentEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetDocumentUrl
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetDocumentUrl
  id: 'GetDocumentUrl'
  so.intellisense: NSDocumentAgent.GetDocumentUrl
  langs:
  - crmscript
  name: 'GetDocumentUrl'
  nameWithType: NSDocumentAgent.GetDocumentUrl
  fullName: CRMScript.NetServer.NSDocumentAgent.GetDocumentUrl
  type: Method
  summary: "\nGet a URL referring to the given document content.<para/>This URL may be passed to the ultimate client (text editor of some kind?), which is then responsible for all further operations.<para/>The returned string is a fully qualified URL.<para/>Not all documents and document plugins support this feature.\n"
  remarks: 
  syntax: 
    content: String GetDocumentUrl(Integer documentId, String versionId, Bool writeableUrl)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: versionId
      type: CRMScript.Global.String
      description: 
    - id: writeableUrl
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString versionId;\nBool writeableUrl;\nString res = agent.GetDocumentUrl(documentId, versionId, writeableUrl);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetMyPublishedDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetMyPublishedDocuments
  id: 'GetMyPublishedDocuments'
  so.intellisense: NSDocumentAgent.GetMyPublishedDocuments
  langs:
  - crmscript
  name: 'GetMyPublishedDocuments'
  nameWithType: NSDocumentAgent.GetMyPublishedDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetMyPublishedDocuments
  type: Method
  summary: "\n<strong>Returns:</strong>NSDocument[]<p></p>\n<pre><code>NSDocumentAgent agent;\nNSDocument[] res = agent.GetMyPublishedDocuments();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetMyPublishedDocuments()
    parameters:
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocument[] res = agent.GetMyPublishedDocuments();</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPersonDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPersonDocuments
  id: 'GetPersonDocuments'
  so.intellisense: NSDocumentAgent.GetPersonDocuments
  langs:
  - crmscript
  name: 'GetPersonDocuments'
  nameWithType: NSDocumentAgent.GetPersonDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPersonDocuments
  type: Method
  summary: "\nGet all documents that are linked to the person. I.e. the documents that are listed in the person dialog.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPersonDocuments(Integer personId)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nNSDocument[] res = agent.GetPersonDocuments(personId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByDate
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByDate
  id: 'GetPersonDocumentsByDate'
  so.intellisense: NSDocumentAgent.GetPersonDocumentsByDate
  langs:
  - crmscript
  name: 'GetPersonDocumentsByDate'
  nameWithType: NSDocumentAgent.GetPersonDocumentsByDate
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByDate
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the person specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPersonDocumentsByDate(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetPersonDocumentsByDate(personId, includeProjectDocuments, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  id: 'GetPersonDocumentsByTemplateHeading'
  so.intellisense: NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  langs:
  - crmscript
  name: 'GetPersonDocumentsByTemplateHeading'
  nameWithType: NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateHeading
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the person specified. The heading represents a grouping or filtering of document templates.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPersonDocumentsByTemplateHeading(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count, Integer templateHeadingId)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: templateHeadingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger templateHeadingId;\nNSDocument[] res = agent.GetPersonDocumentsByTemplateHeading(personId, includeProjectDocuments, startTime, endTime, count, templateHeadingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateType
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateType
  id: 'GetPersonDocumentsByTemplateType'
  so.intellisense: NSDocumentAgent.GetPersonDocumentsByTemplateType
  langs:
  - crmscript
  name: 'GetPersonDocumentsByTemplateType'
  nameWithType: NSDocumentAgent.GetPersonDocumentsByTemplateType
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateType
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the person specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPersonDocumentsByTemplateType(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count, Integer documentTemplateId)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger documentTemplateId;\nNSDocument[] res = agent.GetPersonDocumentsByTemplateType(personId, includeProjectDocuments, startTime, endTime, count, documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  id: 'GetPersonDocumentsByTemplateTypes'
  so.intellisense: NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  langs:
  - crmscript
  name: 'GetPersonDocumentsByTemplateTypes'
  nameWithType: NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPersonDocumentsByTemplateTypes
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the person specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPersonDocumentsByTemplateTypes(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count, Integer[] documentTemplateIds)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger[] documentTemplateIds;\nNSDocument[] res = agent.GetPersonDocumentsByTemplateTypes(personId, includeProjectDocuments, startTime, endTime, count, documentTemplateIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPluginCapabilities
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPluginCapabilities
  id: 'GetPluginCapabilities'
  so.intellisense: NSDocumentAgent.GetPluginCapabilities
  langs:
  - crmscript
  name: 'GetPluginCapabilities'
  nameWithType: NSDocumentAgent.GetPluginCapabilities
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPluginCapabilities
  type: Method
  summary: "\nGet a list of plugin-dependent capabilities for a given document archive plugin.<br/>A standard set of properties is defined in SuperOffice.CRM.Documents.Constants.Capabilities.\n"
  remarks: 
  syntax: 
    content: StringDictionary GetPluginCapabilities(Integer pluginId)
    parameters:
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger pluginId;\nStringDictionary res = agent.GetPluginCapabilities(pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPluginList
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPluginList
  id: 'GetPluginList'
  so.intellisense: NSDocumentAgent.GetPluginList
  langs:
  - crmscript
  name: 'GetPluginList'
  nameWithType: NSDocumentAgent.GetPluginList
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPluginList
  type: Method
  summary: "\nGet a list of installed document plugins<p></p>\n<strong>Returns:</strong>StringDictionary<p></p>\n<pre><code>NSDocumentAgent agent;\nStringDictionary res = agent.GetPluginList();</code></pre>\n"
  remarks: 
  syntax: 
    content: StringDictionary GetPluginList()
    parameters:
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nStringDictionary res = agent.GetPluginList();</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPreviewDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPreviewDocumentStream
  id: 'GetPreviewDocumentStream'
  so.intellisense: NSDocumentAgent.GetPreviewDocumentStream
  langs:
  - crmscript
  name: 'GetPreviewDocumentStream'
  nameWithType: NSDocumentAgent.GetPreviewDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPreviewDocumentStream
  type: Method
  summary: "\nGet the preview version of the document content as a stream. Retrieves a sanitized version if possible\n"
  remarks: 
  syntax: 
    content: NSDocumentPreview GetPreviewDocumentStream(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentPreview
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSDocumentPreview res = agent.GetPreviewDocumentStream(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectDocuments
  id: 'GetProjectDocuments'
  so.intellisense: NSDocumentAgent.GetProjectDocuments
  langs:
  - crmscript
  name: 'GetProjectDocuments'
  nameWithType: NSDocumentAgent.GetProjectDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectDocuments
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the project specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectDocuments(Integer projectId, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger projectId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetProjectDocuments(projectId, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  id: 'GetProjectDocumentsByTemplateHeading'
  so.intellisense: NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  langs:
  - crmscript
  name: 'GetProjectDocumentsByTemplateHeading'
  nameWithType: NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateHeading
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the project specified. The heading represents a grouping or filtering of document templates.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectDocumentsByTemplateHeading(Integer projectId, DateTime startTime, DateTime endTime, Integer count, Integer templateHeadingId)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: templateHeadingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger projectId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger templateHeadingId;\nNSDocument[] res = agent.GetProjectDocumentsByTemplateHeading(projectId, startTime, endTime, count, templateHeadingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateType
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateType
  id: 'GetProjectDocumentsByTemplateType'
  so.intellisense: NSDocumentAgent.GetProjectDocumentsByTemplateType
  langs:
  - crmscript
  name: 'GetProjectDocumentsByTemplateType'
  nameWithType: NSDocumentAgent.GetProjectDocumentsByTemplateType
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateType
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the project specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectDocumentsByTemplateType(Integer projectId, DateTime startTime, DateTime endTime, Integer count, Integer documentTemplateId)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger projectId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger documentTemplateId;\nNSDocument[] res = agent.GetProjectDocumentsByTemplateType(projectId, startTime, endTime, count, documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  id: 'GetProjectDocumentsByTemplateTypes'
  so.intellisense: NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  langs:
  - crmscript
  name: 'GetProjectDocumentsByTemplateTypes'
  nameWithType: NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectDocumentsByTemplateTypes
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the project specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectDocumentsByTemplateTypes(Integer projectId, DateTime startTime, DateTime endTime, Integer count, Integer[] documentTemplateIds)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger projectId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger[] documentTemplateIds;\nNSDocument[] res = agent.GetProjectDocumentsByTemplateTypes(projectId, startTime, endTime, count, documentTemplateIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocuments
  id: 'GetProjectMemberDocuments'
  so.intellisense: NSDocumentAgent.GetProjectMemberDocuments
  langs:
  - crmscript
  name: 'GetProjectMemberDocuments'
  nameWithType: NSDocumentAgent.GetProjectMemberDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocuments
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range. The document appointments belong to the project member specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectMemberDocuments(Integer personId, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetProjectMemberDocuments(personId, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  id: 'GetProjectMemberDocumentsByTemplateHeading'
  so.intellisense: NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  langs:
  - crmscript
  name: 'GetProjectMemberDocumentsByTemplateHeading'
  nameWithType: NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateHeading
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template heading. The document appointments belong to the project member specified. The heading represents a grouping or filtering of document templates.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectMemberDocumentsByTemplateHeading(Integer personId, DateTime startTime, DateTime endTime, Integer count, Integer templateHeadingId)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: templateHeadingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger templateHeadingId;\nNSDocument[] res = agent.GetProjectMemberDocumentsByTemplateHeading(personId, startTime, endTime, count, templateHeadingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  id: 'GetProjectMemberDocumentsByTemplateType'
  so.intellisense: NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  langs:
  - crmscript
  name: 'GetProjectMemberDocumentsByTemplateType'
  nameWithType: NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateType
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template type. The document appointments belong to the project member specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectMemberDocumentsByTemplateType(Integer personId, DateTime startTime, DateTime endTime, Integer count, Integer documentTemplateId)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger documentTemplateId;\nNSDocument[] res = agent.GetProjectMemberDocumentsByTemplateType(personId, startTime, endTime, count, documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  id: 'GetProjectMemberDocumentsByTemplateTypes'
  so.intellisense: NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  langs:
  - crmscript
  name: 'GetProjectMemberDocumentsByTemplateTypes'
  nameWithType: NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  fullName: CRMScript.NetServer.NSDocumentAgent.GetProjectMemberDocumentsByTemplateTypes
  type: Method
  summary: "\nMethod that returns a specified number of document appointments within a time range, filtered by document template types. The document appointments belong to the project member specified.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetProjectMemberDocumentsByTemplateTypes(Integer personId, DateTime startTime, DateTime endTime, Integer count, Integer[] documentTemplateIds)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nInteger[] documentTemplateIds;\nNSDocument[] res = agent.GetProjectMemberDocumentsByTemplateTypes(personId, startTime, endTime, count, documentTemplateIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPublishedDocument
  id: 'GetPublishedDocument'
  so.intellisense: NSDocumentAgent.GetPublishedDocument
  langs:
  - crmscript
  name: 'GetPublishedDocument'
  nameWithType: NSDocumentAgent.GetPublishedDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocument
  type: Method
  summary: "\nGet the document if it's published\n"
  remarks: 
  syntax: 
    content: NSDocument GetPublishedDocument(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSDocument res = agent.GetPublishedDocument(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPublishedDocuments
  id: 'GetPublishedDocuments'
  so.intellisense: NSDocumentAgent.GetPublishedDocuments
  langs:
  - crmscript
  name: 'GetPublishedDocuments'
  nameWithType: NSDocumentAgent.GetPublishedDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocuments
  type: Method
  summary: "\nGet the published documents from an array of doucment ids.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPublishedDocuments(Integer[] documentIds)
    parameters:
    - id: documentIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger[] documentIds;\nNSDocument[] res = agent.GetPublishedDocuments(documentIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocumentsByDate
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPublishedDocumentsByDate
  id: 'GetPublishedDocumentsByDate'
  so.intellisense: NSDocumentAgent.GetPublishedDocumentsByDate
  langs:
  - crmscript
  name: 'GetPublishedDocumentsByDate'
  nameWithType: NSDocumentAgent.GetPublishedDocumentsByDate
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPublishedDocumentsByDate
  type: Method
  summary: "\nMethod that returns a specified number of published document appointments within a time range. The document appointments is visible to the person specified or the document is in a project the person belongs to.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPublishedDocumentsByDate(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetPublishedDocumentsByDate(personId, includeProjectDocuments, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPublishedPersonDocumentsByDate
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPublishedPersonDocumentsByDate
  id: 'GetPublishedPersonDocumentsByDate'
  so.intellisense: NSDocumentAgent.GetPublishedPersonDocumentsByDate
  langs:
  - crmscript
  name: 'GetPublishedPersonDocumentsByDate'
  nameWithType: NSDocumentAgent.GetPublishedPersonDocumentsByDate
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPublishedPersonDocumentsByDate
  type: Method
  summary: "\nMethod that returns a specified number of published document appointments within a time range. The document appointments belong to the person specified or the document is in a project the person belongs to.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPublishedPersonDocumentsByDate(Integer personId, Bool includeProjectDocuments, DateTime startTime, DateTime endTime, Integer count)
    parameters:
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: includeProjectDocuments
      type: CRMScript.Global.Bool
      description: 
    - id: startTime
      type: CRMScript.Global.DateTime
      description: 
    - id: endTime
      type: CRMScript.Global.DateTime
      description: 
    - id: count
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger personId;\nBool includeProjectDocuments;\nDateTime startTime;\nDateTime endTime;\nInteger count;\nNSDocument[] res = agent.GetPublishedPersonDocumentsByDate(personId, includeProjectDocuments, startTime, endTime, count);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetPublishedProjectDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetPublishedProjectDocuments
  id: 'GetPublishedProjectDocuments'
  so.intellisense: NSDocumentAgent.GetPublishedProjectDocuments
  langs:
  - crmscript
  name: 'GetPublishedProjectDocuments'
  nameWithType: NSDocumentAgent.GetPublishedProjectDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetPublishedProjectDocuments
  type: Method
  summary: "\nGet published appointment documents by project id.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetPublishedProjectDocuments(Integer projectId)
    parameters:
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger projectId;\nNSDocument[] res = agent.GetPublishedProjectDocuments(projectId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetSaleDocuments
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetSaleDocuments
  id: 'GetSaleDocuments'
  so.intellisense: NSDocumentAgent.GetSaleDocuments
  langs:
  - crmscript
  name: 'GetSaleDocuments'
  nameWithType: NSDocumentAgent.GetSaleDocuments
  fullName: CRMScript.NetServer.NSDocumentAgent.GetSaleDocuments
  type: Method
  summary: "\nGet all documents that are linked to the sale. I.e. the documents that are listed in the sale dialog.\n"
  remarks: 
  syntax: 
    content: NSDocument[] GetSaleDocuments(Integer saleId)
    parameters:
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocument[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger saleId;\nNSDocument[] res = agent.GetSaleDocuments(saleId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetSanitizedDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetSanitizedDocumentStream
  id: 'GetSanitizedDocumentStream'
  so.intellisense: NSDocumentAgent.GetSanitizedDocumentStream
  langs:
  - crmscript
  name: 'GetSanitizedDocumentStream'
  nameWithType: NSDocumentAgent.GetSanitizedDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetSanitizedDocumentStream
  type: Method
  summary: "\nGet the document content as a stream. Retrieves a sanitized version if possible\n"
  remarks: 
  syntax: 
    content: NSStream GetSanitizedDocumentStream(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSStream res = agent.GetSanitizedDocumentStream(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStream
  id: 'GetSanitizedTemplateStream'
  so.intellisense: NSDocumentAgent.GetSanitizedTemplateStream
  langs:
  - crmscript
  name: 'GetSanitizedTemplateStream'
  nameWithType: NSDocumentAgent.GetSanitizedTemplateStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStream
  type: Method
  summary: "\nRetrieve a stream to a mail template based on its name. Sanitizes the contents if possible.\n"
  remarks: 
  syntax: 
    content: NSStream GetSanitizedTemplateStream(String templateName, Bool allowPersonal, String uiCulture)
    parameters:
    - id: templateName
      type: CRMScript.Global.String
      description: 
    - id: allowPersonal
      type: CRMScript.Global.Bool
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString templateName;\nBool allowPersonal;\nString uiCulture;\nNSStream res = agent.GetSanitizedTemplateStream(templateName, allowPersonal, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStreamFromId
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStreamFromId
  id: 'GetSanitizedTemplateStreamFromId'
  so.intellisense: NSDocumentAgent.GetSanitizedTemplateStreamFromId
  langs:
  - crmscript
  name: 'GetSanitizedTemplateStreamFromId'
  nameWithType: NSDocumentAgent.GetSanitizedTemplateStreamFromId
  fullName: CRMScript.NetServer.NSDocumentAgent.GetSanitizedTemplateStreamFromId
  type: Method
  summary: "\nRetrieve a stream to a document template based on its id. Sanitizes the contents if possible.\n"
  remarks: 
  syntax: 
    content: NSStream GetSanitizedTemplateStreamFromId(Integer templateId, String uiCulture)
    parameters:
    - id: templateId
      type: CRMScript.Global.Integer
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger templateId;\nString uiCulture;\nNSStream res = agent.GetSanitizedTemplateStreamFromId(templateId, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetSuggestedDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetSuggestedDocumentEntity
  id: 'GetSuggestedDocumentEntity'
  so.intellisense: NSDocumentAgent.GetSuggestedDocumentEntity
  langs:
  - crmscript
  name: 'GetSuggestedDocumentEntity'
  nameWithType: NSDocumentAgent.GetSuggestedDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.GetSuggestedDocumentEntity
  type: Method
  summary: "\nGets an NSSuggestedDocumentEntity object.\n"
  remarks: 
  syntax: 
    content: NSSuggestedDocumentEntity GetSuggestedDocumentEntity(Integer suggestedDocumentEntityId);
    parameters:
    - id: suggestedDocumentEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: suggestedDocumentEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSuggestedDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSSuggestedDocumentEntity thing = agent.GetSuggestedDocumentEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetTempFile
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetTempFile
  id: 'GetTempFile'
  so.intellisense: NSDocumentAgent.GetTempFile
  langs:
  - crmscript
  name: 'GetTempFile'
  nameWithType: NSDocumentAgent.GetTempFile
  fullName: CRMScript.NetServer.NSDocumentAgent.GetTempFile
  type: Method
  summary: "\nGet data stream for temporary file created with CreateTempFile.\n"
  remarks: 
  syntax: 
    content: NSStream GetTempFile(String filename)
    parameters:
    - id: filename
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString filename;\nNSStream res = agent.GetTempFile(filename);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetTemplateStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetTemplateStream
  id: 'GetTemplateStream'
  so.intellisense: NSDocumentAgent.GetTemplateStream
  langs:
  - crmscript
  name: 'GetTemplateStream'
  nameWithType: NSDocumentAgent.GetTemplateStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetTemplateStream
  type: Method
  summary: "\nRetrieve a stream to a mail template based on its name\n"
  remarks: 
  syntax: 
    content: NSStream GetTemplateStream(String templateName, Bool allowPersonal, String uiCulture)
    parameters:
    - id: templateName
      type: CRMScript.Global.String
      description: 
    - id: allowPersonal
      type: CRMScript.Global.Bool
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString templateName;\nBool allowPersonal;\nString uiCulture;\nNSStream res = agent.GetTemplateStream(templateName, allowPersonal, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetTemplateStreamFromId
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetTemplateStreamFromId
  id: 'GetTemplateStreamFromId'
  so.intellisense: NSDocumentAgent.GetTemplateStreamFromId
  langs:
  - crmscript
  name: 'GetTemplateStreamFromId'
  nameWithType: NSDocumentAgent.GetTemplateStreamFromId
  fullName: CRMScript.NetServer.NSDocumentAgent.GetTemplateStreamFromId
  type: Method
  summary: "\nRetrieve a stream to a document template based on its id\n"
  remarks: 
  syntax: 
    content: NSStream GetTemplateStreamFromId(Integer templateId, String uiCulture)
    parameters:
    - id: templateId
      type: CRMScript.Global.Integer
      description: 
    - id: uiCulture
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger templateId;\nString uiCulture;\nNSStream res = agent.GetTemplateStreamFromId(templateId, uiCulture);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  id: 'GetUnsanitizedPreviewDocumentStream'
  so.intellisense: NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  langs:
  - crmscript
  name: 'GetUnsanitizedPreviewDocumentStream'
  nameWithType: NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.GetUnsanitizedPreviewDocumentStream
  type: Method
  summary: "\nGet the preview version of the document content as a stream. Retrieves an unsanitized version. This has less CPU impact but the caller must sanitize the content before presenting it to the user.\n"
  remarks: 
  syntax: 
    content: NSDocumentPreview GetUnsanitizedPreviewDocumentStream(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentPreview
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSDocumentPreview res = agent.GetUnsanitizedPreviewDocumentStream(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.GetVersionList
  commentId: M:CRMScript.NetServer.NSDocumentAgent.GetVersionList
  id: 'GetVersionList'
  so.intellisense: NSDocumentAgent.GetVersionList
  langs:
  - crmscript
  name: 'GetVersionList'
  nameWithType: NSDocumentAgent.GetVersionList
  fullName: CRMScript.NetServer.NSDocumentAgent.GetVersionList
  type: Method
  summary: "\nGet a list of existing, committed  versions for a given document\n"
  remarks: 
  syntax: 
    content: NSVersionInfo[] GetVersionList(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSVersionInfo[]
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSVersionInfo[] res = agent.GetVersionList(documentId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.#ctor
  commentId: M:CRMScript.NetServer.NSDocumentAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSDocumentAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSDocumentAgent.#ctor
  fullName: CRMScript.NetServer.NSDocumentAgent.#ctor
  type: Constructor
  summary: "\nCollection of all services that work with Document data. This is services for the document information, not the physical document themselves. These are handled by the BLOB service methods.\n"
  remarks: 
  syntax: 
    content: NSDocumentAgent
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.RenameDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.RenameDocument
  id: 'RenameDocument'
  so.intellisense: NSDocumentAgent.RenameDocument
  langs:
  - crmscript
  name: 'RenameDocument'
  nameWithType: NSDocumentAgent.RenameDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.RenameDocument
  type: Method
  summary: "\nRename the physical document, i.e., change the file name or equivalent concept in the document archive.\n"
  remarks: 
  syntax: 
    content: String RenameDocument(Integer documentId, String newFilename)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: newFilename
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString newFilename;\nString res = agent.RenameDocument(documentId, newFilename);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SaveDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SaveDocumentEntity
  id: 'SaveDocumentEntity'
  so.intellisense: NSDocumentAgent.SaveDocumentEntity
  langs:
  - crmscript
  name: 'SaveDocumentEntity'
  nameWithType: NSDocumentAgent.SaveDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.SaveDocumentEntity
  type: Method
  summary: "\nUpdates the existing NSDocumentEntity or creates a new NSDocumentEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>documentEntity</strong>The NSDocumentEntity to save.</li></ul><strong>Returns:</strong>NSDocumentEntity<p></p>\n<pre><code>NSDocument  agent;\nNSDocumentEntity thing = agent.CreateDefaultDocumentEntity();\nthing = agent.SaveDocumentEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity SaveDocumentEntity(NSDocumentEntity documentEntity);
    parameters:
    - id: documentEntity;
      type: CRMScript.NetServer.NSDocumentEntity
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocument  agent;\nNSDocumentEntity thing = agent.CreateDefaultDocumentEntity();\nthing = agent.SaveDocumentEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SaveDocumentTemplateStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SaveDocumentTemplateStream
  id: 'SaveDocumentTemplateStream'
  so.intellisense: NSDocumentAgent.SaveDocumentTemplateStream
  langs:
  - crmscript
  name: 'SaveDocumentTemplateStream'
  nameWithType: NSDocumentAgent.SaveDocumentTemplateStream
  fullName: CRMScript.NetServer.NSDocumentAgent.SaveDocumentTemplateStream
  type: Method
  summary: "\nSaves content in stream to document template file\n"
  remarks: 
  syntax: 
    content: NSTemplateInfo SaveDocumentTemplateStream(Integer documentTemplateId, NSStream content, String languageCode, Integer pluginId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: content
      type: CRMScript.NetServer.NSStream
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSTemplateInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentTemplateId;\nNSStream content;\nString languageCode;\nInteger pluginId;\nNSTemplateInfo res = agent.SaveDocumentTemplateStream(documentTemplateId, content, languageCode, pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SavePrivacyReport
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SavePrivacyReport
  id: 'SavePrivacyReport'
  so.intellisense: NSDocumentAgent.SavePrivacyReport
  langs:
  - crmscript
  name: 'SavePrivacyReport'
  nameWithType: NSDocumentAgent.SavePrivacyReport
  fullName: CRMScript.NetServer.NSDocumentAgent.SavePrivacyReport
  type: Method
  summary: "\nGenerates a Pdf from HTML and makes a document\n"
  remarks: 
  syntax: 
    content: Integer SavePrivacyReport(String htmlReport, String title, Integer personId)
    parameters:
    - id: htmlReport
      type: CRMScript.Global.String
      description: 
    - id: title
      type: CRMScript.Global.String
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Integer
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString htmlReport;\nString title;\nInteger personId;\nInteger res = agent.SavePrivacyReport(htmlReport, title, personId);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SaveSuggestedDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SaveSuggestedDocumentEntity
  id: 'SaveSuggestedDocumentEntity'
  so.intellisense: NSDocumentAgent.SaveSuggestedDocumentEntity
  langs:
  - crmscript
  name: 'SaveSuggestedDocumentEntity'
  nameWithType: NSDocumentAgent.SaveSuggestedDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.SaveSuggestedDocumentEntity
  type: Method
  summary: "\nUpdates the existing NSSuggestedDocumentEntity or creates a new NSSuggestedDocumentEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>suggestedDocumentEntity</strong>The NSSuggestedDocumentEntity to save.</li></ul><strong>Returns:</strong>NSSuggestedDocumentEntity<p></p>\n<pre><code>NSDocument  agent;\nNSSuggestedDocumentEntity thing = agent.CreateDefaultSuggestedDocumentEntity();\nthing = agent.SaveSuggestedDocumentEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSuggestedDocumentEntity SaveSuggestedDocumentEntity(NSSuggestedDocumentEntity suggestedDocumentEntity);
    parameters:
    - id: suggestedDocumentEntity;
      type: CRMScript.NetServer.NSSuggestedDocumentEntity
      description: 
    return:
      type: CRMScript.NetServer.NSSuggestedDocumentEntity
  example: 
  - "\n<pre><code>NSDocument  agent;\nNSSuggestedDocumentEntity thing = agent.CreateDefaultSuggestedDocumentEntity();\nthing = agent.SaveSuggestedDocumentEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SetDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SetDocumentStream
  id: 'SetDocumentStream'
  so.intellisense: NSDocumentAgent.SetDocumentStream
  langs:
  - crmscript
  name: 'SetDocumentStream'
  nameWithType: NSDocumentAgent.SetDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.SetDocumentStream
  type: Method
  summary: "\nStore a document's contents from its stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity SetDocumentStream(NSDocumentEntity documentEntity, NSStream stream, Bool overwriteExistingData)
    parameters:
    - id: documentEntity
      type: CRMScript.NetServer.NSDocumentEntity
      description: 
    - id: stream
      type: CRMScript.NetServer.NSStream
      description: 
    - id: overwriteExistingData
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity documentEntity;\nNSStream stream;\nBool overwriteExistingData;\nNSDocumentEntity res = agent.SetDocumentStream(documentEntity, stream, overwriteExistingData);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SetDocumentStreamFromId
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SetDocumentStreamFromId
  id: 'SetDocumentStreamFromId'
  so.intellisense: NSDocumentAgent.SetDocumentStreamFromId
  langs:
  - crmscript
  name: 'SetDocumentStreamFromId'
  nameWithType: NSDocumentAgent.SetDocumentStreamFromId
  fullName: CRMScript.NetServer.NSDocumentAgent.SetDocumentStreamFromId
  type: Method
  summary: "\nStore document content from stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentEntity SetDocumentStreamFromId(Integer documentId, NSStream stream)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: stream
      type: CRMScript.NetServer.NSStream
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentEntity
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nNSStream stream;\nNSDocumentEntity res = agent.SetDocumentStreamFromId(documentId, stream);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SetTemplateStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SetTemplateStream
  id: 'SetTemplateStream'
  so.intellisense: NSDocumentAgent.SetTemplateStream
  langs:
  - crmscript
  name: 'SetTemplateStream'
  nameWithType: NSDocumentAgent.SetTemplateStream
  fullName: CRMScript.NetServer.NSDocumentAgent.SetTemplateStream
  type: Method
  summary: "\nSave a mail signature template to the document archive\n"
  remarks: 
  syntax: 
    content: Void SetTemplateStream(String filename, Bool personal, NSStream stream)
    parameters:
    - id: filename
      type: CRMScript.Global.String
      description: 
    - id: personal
      type: CRMScript.Global.Bool
      description: 
    - id: stream
      type: CRMScript.NetServer.NSStream
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString filename;\nBool personal;\nNSStream stream;\nagent.SetTemplateStream(filename, personal, stream);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  id: 'SubstituteMergeDocumentTemplateVariables'
  so.intellisense: NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  langs:
  - crmscript
  name: 'SubstituteMergeDocumentTemplateVariables'
  nameWithType: NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables
  type: Method
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the associate Id.<p/>The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: 
  syntax: 
    content: NSStream SubstituteMergeDocumentTemplateVariables(Integer documentId, Integer associateId, String[] customTags, String[] customValues)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: associateId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.String[]
      description: 
    - id: customValues
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nInteger associateId;\nString[] customTags;\nString[] customValues;\nNSStream res = agent.SubstituteMergeDocumentTemplateVariables(documentId, associateId, customTags, customValues);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  id: 'SubstituteMergeDocumentTemplateVariables2'
  so.intellisense: NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  langs:
  - crmscript
  name: 'SubstituteMergeDocumentTemplateVariables2'
  nameWithType: NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariables2
  type: Method
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the associate Id.<p/>The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: 
  syntax: 
    content: NSStream SubstituteMergeDocumentTemplateVariables2(Integer documentId, Integer associateId, StringDictionary customTags)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: associateId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.StringDictionary
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nInteger associateId;\nStringDictionary customTags;\nNSStream res = agent.SubstituteMergeDocumentTemplateVariables2(documentId, associateId, customTags);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  id: 'SubstituteMergeDocumentTemplateVariablesEx'
  so.intellisense: NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  langs:
  - crmscript
  name: 'SubstituteMergeDocumentTemplateVariablesEx'
  nameWithType: NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx
  type: Method
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the provided identifiers.<p/>The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: 
  syntax: 
    content: NSStream SubstituteMergeDocumentTemplateVariablesEx(Integer mergeDocumentId, Integer contactId, Integer personId, Integer projectId, Integer selectionId, Integer appointmentId, Integer documentId, Integer saleId, String[] customTags, String[] customValues)
    parameters:
    - id: mergeDocumentId
      type: CRMScript.Global.Integer
      description: 
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.String[]
      description: 
    - id: customValues
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger mergeDocumentId;\nInteger contactId;\nInteger personId;\nInteger projectId;\nInteger selectionId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nString[] customTags;\nString[] customValues;\nNSStream res = agent.SubstituteMergeDocumentTemplateVariablesEx(mergeDocumentId, contactId, personId, projectId, selectionId, appointmentId, documentId, saleId, customTags, customValues);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  id: 'SubstituteMergeDocumentTemplateVariablesEx2'
  so.intellisense: NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  langs:
  - crmscript
  name: 'SubstituteMergeDocumentTemplateVariablesEx2'
  nameWithType: NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteMergeDocumentTemplateVariablesEx2
  type: Method
  summary: "\nParse the source document, and replace any template variable tags with their values, based on the provided identifiers.<p/>The source document should be of type MergeDraft. This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: 
  syntax: 
    content: NSStream SubstituteMergeDocumentTemplateVariablesEx2(Integer mergeDocumentId, Integer contactId, Integer personId, Integer projectId, Integer selectionId, Integer appointmentId, Integer documentId, Integer saleId, StringDictionary customTags)
    parameters:
    - id: mergeDocumentId
      type: CRMScript.Global.Integer
      description: 
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.StringDictionary
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger mergeDocumentId;\nInteger contactId;\nInteger personId;\nInteger projectId;\nInteger selectionId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nStringDictionary customTags;\nNSStream res = agent.SubstituteMergeDocumentTemplateVariablesEx2(mergeDocumentId, contactId, personId, projectId, selectionId, appointmentId, documentId, saleId, customTags);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariables
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariables
  id: 'SubstituteTemplateVariables'
  so.intellisense: NSDocumentAgent.SubstituteTemplateVariables
  langs:
  - crmscript
  name: 'SubstituteTemplateVariables'
  nameWithType: NSDocumentAgent.SubstituteTemplateVariables
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariables
  type: Method
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID's given in the other parameters.\n"
  remarks: "\n<h3>Enum: generatorEncoding</h3><ul><li>0 = Text</li><li>1 = Html</li><li>2 = Xml</li><li>3 = MsWord</li><li>4 = MsExcel</li><li>5 = MsPowerpoint</li><li>6 = MsOffice2007</li><li>7 = MsOffice2007Xml</li><li>8 = Url</li><li>9 = UrlUnicode</li><li>10 = Pdf</li><li>11 = Mime</li><li>12 = OpenDocument</li><li>13 = OpenDocumentXml</li></ul>\n"
  syntax: 
    content: String SubstituteTemplateVariables(String source, Integer generatorEncoding, Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, String cultureName)
    parameters:
    - id: source
      type: CRMScript.Global.String
      description: 
    - id: generatorEncoding
      type: CRMScript.Global.Integer
      description: 
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: cultureName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString source;\nInteger generatorEncoding;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nString cultureName;\nString res = agent.SubstituteTemplateVariables(source, generatorEncoding, contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, cultureName);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesEx
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesEx
  id: 'SubstituteTemplateVariablesEx'
  so.intellisense: NSDocumentAgent.SubstituteTemplateVariablesEx
  langs:
  - crmscript
  name: 'SubstituteTemplateVariablesEx'
  nameWithType: NSDocumentAgent.SubstituteTemplateVariablesEx
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesEx
  type: Method
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the identities, custom values and entities specified in the other parameters.\n"
  remarks: 
  syntax: 
    content: String SubstituteTemplateVariablesEx(NSTemplateVariablesParameters parameters)
    parameters:
    - id: parameters
      type: CRMScript.NetServer.NSTemplateVariablesParameters
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSTemplateVariablesParameters parameters;\nString res = agent.SubstituteTemplateVariablesEx(parameters);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  id: 'SubstituteTemplateVariablesWithCustomTags'
  so.intellisense: NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  langs:
  - crmscript
  name: 'SubstituteTemplateVariablesWithCustomTags'
  nameWithType: NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags
  type: Method
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID's given in the other parameters.<p/>This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: "\n<h3>Enum: generatorEncoding</h3><ul><li>0 = Text</li><li>1 = Html</li><li>2 = Xml</li><li>3 = MsWord</li><li>4 = MsExcel</li><li>5 = MsPowerpoint</li><li>6 = MsOffice2007</li><li>7 = MsOffice2007Xml</li><li>8 = Url</li><li>9 = UrlUnicode</li><li>10 = Pdf</li><li>11 = Mime</li><li>12 = OpenDocument</li><li>13 = OpenDocumentXml</li></ul>\n"
  syntax: 
    content: String SubstituteTemplateVariablesWithCustomTags(String source, Integer generatorEncoding, String[] customTags, String[] customValues, Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, String cultureName)
    parameters:
    - id: source
      type: CRMScript.Global.String
      description: 
    - id: generatorEncoding
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.String[]
      description: 
    - id: customValues
      type: CRMScript.Global.String[]
      description: 
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: cultureName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString source;\nInteger generatorEncoding;\nString[] customTags;\nString[] customValues;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nString cultureName;\nString res = agent.SubstituteTemplateVariablesWithCustomTags(source, generatorEncoding, customTags, customValues, contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, cultureName);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  commentId: M:CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  id: 'SubstituteTemplateVariablesWithCustomTags2'
  so.intellisense: NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  langs:
  - crmscript
  name: 'SubstituteTemplateVariablesWithCustomTags2'
  nameWithType: NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  fullName: CRMScript.NetServer.NSDocumentAgent.SubstituteTemplateVariablesWithCustomTags2
  type: Method
  summary: "\nParse the source string, and replace any template variable tags with their values, based on the ID's given in the other parameters.<p/>This method also takes a pair of arrays specifying custom tags and their values; these tags will be available during substitution in addition to all the existing tags. Custom values will override values otherwise set.\n"
  remarks: "\n<h3>Enum: generatorEncoding</h3><ul><li>0 = Text</li><li>1 = Html</li><li>2 = Xml</li><li>3 = MsWord</li><li>4 = MsExcel</li><li>5 = MsPowerpoint</li><li>6 = MsOffice2007</li><li>7 = MsOffice2007Xml</li><li>8 = Url</li><li>9 = UrlUnicode</li><li>10 = Pdf</li><li>11 = Mime</li><li>12 = OpenDocument</li><li>13 = OpenDocumentXml</li></ul>\n"
  syntax: 
    content: String SubstituteTemplateVariablesWithCustomTags2(String source, Integer generatorEncoding, StringDictionary customTags, Integer contactId, Integer personId, Integer appointmentId, Integer documentId, Integer saleId, Integer selectionId, Integer projectId, String cultureName)
    parameters:
    - id: source
      type: CRMScript.Global.String
      description: 
    - id: generatorEncoding
      type: CRMScript.Global.Integer
      description: 
    - id: customTags
      type: CRMScript.Global.StringDictionary
      description: 
    - id: contactId
      type: CRMScript.Global.Integer
      description: 
    - id: personId
      type: CRMScript.Global.Integer
      description: 
    - id: appointmentId
      type: CRMScript.Global.Integer
      description: 
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: saleId
      type: CRMScript.Global.Integer
      description: 
    - id: selectionId
      type: CRMScript.Global.Integer
      description: 
    - id: projectId
      type: CRMScript.Global.Integer
      description: 
    - id: cultureName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nString source;\nInteger generatorEncoding;\nStringDictionary customTags;\nInteger contactId;\nInteger personId;\nInteger appointmentId;\nInteger documentId;\nInteger saleId;\nInteger selectionId;\nInteger projectId;\nString cultureName;\nString res = agent.SubstituteTemplateVariablesWithCustomTags2(source, generatorEncoding, customTags, contactId, personId, appointmentId, documentId, saleId, selectionId, projectId, cultureName);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.UndoCheckoutDocument
  commentId: M:CRMScript.NetServer.NSDocumentAgent.UndoCheckoutDocument
  id: 'UndoCheckoutDocument'
  so.intellisense: NSDocumentAgent.UndoCheckoutDocument
  langs:
  - crmscript
  name: 'UndoCheckoutDocument'
  nameWithType: NSDocumentAgent.UndoCheckoutDocument
  fullName: CRMScript.NetServer.NSDocumentAgent.UndoCheckoutDocument
  type: Method
  summary: "\nUndo (abandon) a checkout\n"
  remarks: 
  syntax: 
    content: NSReturnInfo UndoCheckoutDocument(Integer documentId, String[] allowedReturnTypes)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    - id: allowedReturnTypes
      type: CRMScript.Global.String[]
      description: 
    return:
      type: CRMScript.NetServer.NSReturnInfo
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nInteger documentId;\nString[] allowedReturnTypes;\nNSReturnInfo res = agent.UndoCheckoutDocument(documentId, allowedReturnTypes);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.ValidateDocumentEntity
  commentId: M:CRMScript.NetServer.NSDocumentAgent.ValidateDocumentEntity
  id: 'ValidateDocumentEntity'
  so.intellisense: NSDocumentAgent.ValidateDocumentEntity
  langs:
  - crmscript
  name: 'ValidateDocumentEntity'
  nameWithType: NSDocumentAgent.ValidateDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentAgent.ValidateDocumentEntity
  type: Method
  summary: "\nCheck that entity is ready for saving, return error messages by field.\n"
  remarks: 
  syntax: 
    content: StringDictionary ValidateDocumentEntity(NSDocumentEntity documentEntity)
    parameters:
    - id: documentEntity
      type: CRMScript.NetServer.NSDocumentEntity
      description: 
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSDocumentAgent agent;\nNSDocumentEntity documentEntity;\nStringDictionary res = agent.ValidateDocumentEntity(documentEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSDocumentAgent.VerifyGetDocumentStream
  commentId: M:CRMScript.NetServer.NSDocumentAgent.VerifyGetDocumentStream
  id: 'VerifyGetDocumentStream'
  so.intellisense: NSDocumentAgent.VerifyGetDocumentStream
  langs:
  - crmscript
  name: 'VerifyGetDocumentStream'
  nameWithType: NSDocumentAgent.VerifyGetDocumentStream
  fullName: CRMScript.NetServer.NSDocumentAgent.VerifyGetDocumentStream
  type: Method
  summary: "\nVerify that the requested document stream exists, and that we can access it, without actually getting the stream.\n"
  remarks: 
  syntax: 
    content: Void VerifyGetDocumentStream(Integer documentId)
    parameters:
    - id: documentId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
references:
- uid: CRMScript.NetServer.NSDocumentAgent
  commentId: T:CRMScript.NetServer.NSDocumentAgent
  isExternal: true
  name: NSDocumentAgent
  nameWithType: NSDocumentAgent
  fullName: CRMScript.NetServer.NSDocumentAgent
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSReturnInfo
  commentId: T:CRMScript.NetServer.NSReturnInfo
  isExternal: true
  name: NSReturnInfo
  nameWithType: NSReturnInfo
  fullName: CRMScript.NetServer.NSReturnInfo
- uid: CRMScript.NetServer.NSDocumentEntity
  commentId: T:CRMScript.NetServer.NSDocumentEntity
  isExternal: true
  name: NSDocumentEntity
  nameWithType: NSDocumentEntity
  fullName: CRMScript.NetServer.NSDocumentEntity
- uid: CRMScript.NetServer.NSDocumentPreview
  commentId: T:CRMScript.NetServer.NSDocumentPreview
  isExternal: true
  name: NSDocumentPreview
  nameWithType: NSDocumentPreview
  fullName: CRMScript.NetServer.NSDocumentPreview
- uid: CRMScript.NetServer.NSSuggestedDocumentEntity
  commentId: T:CRMScript.NetServer.NSSuggestedDocumentEntity
  isExternal: true
  name: NSSuggestedDocumentEntity
  nameWithType: NSSuggestedDocumentEntity
  fullName: CRMScript.NetServer.NSSuggestedDocumentEntity
- uid: CRMScript.NetServer.NSTemplateVariablesParameters
  commentId: T:CRMScript.NetServer.NSTemplateVariablesParameters
  isExternal: true
  name: NSTemplateVariablesParameters
  nameWithType: NSTemplateVariablesParameters
  fullName: CRMScript.NetServer.NSTemplateVariablesParameters
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.NetServer.NSStream
  commentId: T:CRMScript.NetServer.NSStream
  isExternal: true
  name: NSStream
  nameWithType: NSStream
  fullName: CRMScript.NetServer.NSStream
- uid: CRMScript.Global.StringDictionary
  commentId: T:CRMScript.Global.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: CRMScript.Global.StringDictionary
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.NetServer.NSDocument[]
  isExternal: true
  name: NSDocument[]
  nameWithType: NSDocument[]
  fullName: CRMScript.NetServer.NSDocument[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDocument
    isExternal: true
    name: NSDocument
    nameWithType: NSDocument
    fullName: CRMScript.NetServer.NSDocument
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDocument
  commentId: T:CRMScript.NetServer.NSDocument
  isExternal: true
  name: NSDocument
  nameWithType: NSDocument
  fullName: CRMScript.NetServer.NSDocument
- uid: CRMScript.NetServer.NSCheckoutInfo
  commentId: T:CRMScript.NetServer.NSCheckoutInfo
  isExternal: true
  name: NSCheckoutInfo
  nameWithType: NSCheckoutInfo
  fullName: CRMScript.NetServer.NSCheckoutInfo
- uid: CRMScript.Global.DateTime
  commentId: T:CRMScript.Global.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: CRMScript.Global.DateTime
- uid: CRMScript.Global.Integer[]
  isExternal: true
  name: Integer[]
  nameWithType: Integer[]
  fullName: CRMScript.Global.Integer[]
  spec.crmscript:
  - uid: CRMScript.Global.Integer
    isExternal: true
    name: Integer
    nameWithType: Integer
    fullName: CRMScript.Global.Integer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSDocument
  commentId: T:CRMScript.NetServer.NSDocument
  isExternal: true
  name: NSDocument
  nameWithType: NSDocument
  fullName: CRMScript.NetServer.NSDocument
- uid: CRMScript.NetServer.NSCommandInfo[]
  isExternal: true
  name: NSCommandInfo[]
  nameWithType: NSCommandInfo[]
  fullName: CRMScript.NetServer.NSCommandInfo[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCommandInfo
    isExternal: true
    name: NSCommandInfo
    nameWithType: NSCommandInfo
    fullName: CRMScript.NetServer.NSCommandInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCommandInfo
  commentId: T:CRMScript.NetServer.NSCommandInfo
  isExternal: true
  name: NSCommandInfo
  nameWithType: NSCommandInfo
  fullName: CRMScript.NetServer.NSCommandInfo
- uid: CRMScript.NetServer.NSVersionInfo[]
  isExternal: true
  name: NSVersionInfo[]
  nameWithType: NSVersionInfo[]
  fullName: CRMScript.NetServer.NSVersionInfo[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSVersionInfo
    isExternal: true
    name: NSVersionInfo
    nameWithType: NSVersionInfo
    fullName: CRMScript.NetServer.NSVersionInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSVersionInfo
  commentId: T:CRMScript.NetServer.NSVersionInfo
  isExternal: true
  name: NSVersionInfo
  nameWithType: NSVersionInfo
  fullName: CRMScript.NetServer.NSVersionInfo
- uid: CRMScript.NetServer.NSTemplateInfo
  commentId: T:CRMScript.NetServer.NSTemplateInfo
  isExternal: true
  name: NSTemplateInfo
  nameWithType: NSTemplateInfo
  fullName: CRMScript.NetServer.NSTemplateInfo