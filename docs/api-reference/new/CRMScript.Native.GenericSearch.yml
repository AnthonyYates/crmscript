### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.GenericSearch
  commentId: T:CRMScript.Native.GenericSearch
  id: GenericSearch
  so.intellisense: Void.GenericSearch
  langs:
  - crmscript
  children:
  - CRMScript.Native.GenericSearch.addComparison
  - CRMScript.Native.GenericSearch.addCriteria
  - CRMScript.Native.GenericSearch.addField
  - CRMScript.Native.GenericSearch.addOrder
  - CRMScript.Native.GenericSearch.countRows
  - CRMScript.Native.GenericSearch.eof
  - CRMScript.Native.GenericSearch.execute
  - CRMScript.Native.GenericSearch.first
  - CRMScript.Native.GenericSearch.#ctor
  - CRMScript.Native.GenericSearch.get
  - CRMScript.Native.GenericSearch.next
  - CRMScript.Native.GenericSearch.setLanguage
  - CRMScript.Native.GenericSearch.setLimit
  name: GenericSearch
  nameWithType: GenericSearch
  fullName: CRMScript.Native.GenericSearch
  type: Class
  summary: "\nThis class is obsolete. Use SearchEngine instead.<p></p>\nClass for representing a generic database search. The GenericSearch is originally made for searching and fetching data from the eJournal database. Thereby its name. GenericSearch is a tool for building up SQL queries, by adding fields and criteria.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.addComparison
  commentId: M:CRMScript.Native.GenericSearch.addComparison
  id: 'addComparison'
  so.intellisense: GenericSearch.addComparison
  langs:
  - crmscript
  name: 'addComparison'
  nameWithType: GenericSearch.addComparison
  fullName: CRMScript.Native.GenericSearch.addComparison
  type: Method
  summary: "\nAdds a criteria between two database-fields to the database query<p></p>\n<ul><li><strong>field1:</strong>The field to compare with field2</li><li><strong>compOperator:</strong>Comparison operator. Possible values:
OperatorEquals, OperatorNotEquals, OperatorLt, OperatorLte, OperatorGt,
OperatorGte, OperatorLike, OperatorNotLike, OperatorContains,
OperatorBeginsWith, OperatorEndsWith, OperatorIn, OperatorNotIn,
OperatorIs, OperatorOracleLeftJoin, OperatorIsNot</li><li><strong>field2:</strong>The field to compare with field1</li><li><strong>rowOperator:</strong>Operator for composing this criteria with a following
criteria</li></ul><strong>Possible values</strong><br />OperatorAnd, OperatorOr, OperatorNotAnd, OperatorNotOr<p></p>\n<ul><li><strong>concatLevel:</strong>A number. All criterias with the same number will be placed
inside the same brackets</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.addCriteria
  commentId: M:CRMScript.Native.GenericSearch.addCriteria
  id: 'addCriteria'
  so.intellisense: GenericSearch.addCriteria
  langs:
  - crmscript
  name: 'addCriteria'
  nameWithType: GenericSearch.addCriteria
  fullName: CRMScript.Native.GenericSearch.addCriteria
  type: Method
  summary: "\nAdd search criteria to the search.
The concatLevel which specifies how this criteria will be concatenated with the rest of the query (parenthesis level).
A higher concatLevel gives a &quot;(&quot;, and a lower concatlevel gives a &quot;)&quot;.<p></p>\n<ul><li><strong>field:</strong>The name of the field to select</li><li><strong>operator:</strong>The operator for the criteria, possible values:
&quot;OperatorNone&quot;,
&quot;OperatorAnd&quot;,
&quot;OperatorOr&quot;,
&quot;OperatorNotAnd&quot;,
&quot;OperatorNotOr&quot;,
&quot;OperatorLike&quot;,
&quot;OperatorNotLike&quot;,
&quot;OperatorContains&quot;,
&quot;OperatorBeginsWith&quot;,
&quot;OperatorEndsWith&quot;,
&quot;OperatorEquals&quot;,
&quot;OperatorNotEquals&quot;,
&quot;OperatorGt&quot;,
&quot;OperatorLt&quot;,
&quot;OperatorGte&quot;,
&quot;OperatorLte&quot;,
&quot;OperatorIn&quot;,
&quot;OperatorNotIn&quot;,
&quot;OperatorIs&quot;,
&quot;OperatorOracleLeftJoin&quot;,
&quot;OperatorIsNot&quot;,</li><li><strong>value:</strong>The value to compare with the field</li><li><strong>andOr:</strong>The operator which combine this criteria with the following criteria
Possible values:
OperatorAnd, OperatorOr, OperatorNotAnd, OperatorNotOr</li><li><strong>concatLevel:</strong>A number to use for combining criterias inside brackets. If the criterias has the same concatLevel, the end up inside the same brackets</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.addField
  commentId: M:CRMScript.Native.GenericSearch.addField
  id: 'addField'
  so.intellisense: GenericSearch.addField
  langs:
  - crmscript
  name: 'addField'
  nameWithType: GenericSearch.addField
  fullName: CRMScript.Native.GenericSearch.addField
  type: Method
  summary: "\nCRMScript method in the GenericSearch class that adds a field to the queryAdds a field to be selected to the database query. You can optionally provide a field mask.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.addOrder
  commentId: M:CRMScript.Native.GenericSearch.addOrder
  id: 'addOrder'
  so.intellisense: GenericSearch.addOrder
  langs:
  - crmscript
  name: 'addOrder'
  nameWithType: GenericSearch.addOrder
  fullName: CRMScript.Native.GenericSearch.addOrder
  type: Method
  summary: "\nAdd order on specified field, desc/asc as specified by the Bool.<p></p>\n<ul><li><strong>field:</strong>The field that will be sorted</li><li><strong>asc:</strong>The direction of the sort, true if ascending, false if descending</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.countRows
  commentId: M:CRMScript.Native.GenericSearch.countRows
  id: 'countRows'
  so.intellisense: GenericSearch.countRows
  langs:
  - crmscript
  name: 'countRows'
  nameWithType: GenericSearch.countRows
  fullName: CRMScript.Native.GenericSearch.countRows
  type: Method
  summary: "\nReturns the number of rows in the resultset<p></p>\n<ul><li><strong>Returns:</strong>the number of rows in the resultset</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.eof
  commentId: M:CRMScript.Native.GenericSearch.eof
  id: 'eof'
  so.intellisense: GenericSearch.eof
  langs:
  - crmscript
  name: 'eof'
  nameWithType: GenericSearch.eof
  fullName: CRMScript.Native.GenericSearch.eof
  type: Method
  summary: "\nReturns true if the resultpointer has reached the end of result set, or false otherwise.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.execute
  commentId: M:CRMScript.Native.GenericSearch.execute
  id: 'execute'
  so.intellisense: GenericSearch.execute
  langs:
  - crmscript
  name: 'execute'
  nameWithType: GenericSearch.execute
  fullName: CRMScript.Native.GenericSearch.execute
  type: Method
  summary: "\nExecute the query.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.first
  commentId: M:CRMScript.Native.GenericSearch.first
  id: 'first'
  so.intellisense: GenericSearch.first
  langs:
  - crmscript
  name: 'first'
  nameWithType: GenericSearch.first
  fullName: CRMScript.Native.GenericSearch.first
  type: Method
  summary: "\nSet the resultpointer to point at the first row in the resultset<p></p>\n<ul><li><strong>Returns:</strong>false if the resultset is empty, else true</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.#ctor
  commentId: M:CRMScript.Native.GenericSearch.#ctor
  id: '#ctor'
  so.intellisense: Void.GenericSearch
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: GenericSearch.#ctor
  fullName: CRMScript.Native.GenericSearch.#ctor
  type: Method
  summary: "\nThis class is obsolete. Use SearchEngine instead.<p></p>\nClass for representing a generic database search. The GenericSearch is originally made for searching and fetching data from the eJournal database. Thereby its name. GenericSearch is a tool for building up SQL queries, by adding fields and criteria.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.get
  commentId: M:CRMScript.Native.GenericSearch.get
  id: 'get'
  so.intellisense: GenericSearch.get
  langs:
  - crmscript
  name: 'get'
  nameWithType: GenericSearch.get
  fullName: CRMScript.Native.GenericSearch.get
  type: Method
  summary: "\nCRMScript method in the GenericSearch class that retrieves the value of a field according to a field maskRetrieves the value of a field according to the given field mask. You can provide the field as either a String or an Integer.<p></p>\nReturns the value of the field.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.next
  commentId: M:CRMScript.Native.GenericSearch.next
  id: 'next'
  so.intellisense: GenericSearch.next
  langs:
  - crmscript
  name: 'next'
  nameWithType: GenericSearch.next
  fullName: CRMScript.Native.GenericSearch.next
  type: Method
  summary: "\nSets the resultset pointer to next row, returns true if there was a next row or false otherwise.<p></p>\n<ul><li><strong>Returns:</strong>false if the pointer has reached the last resultset, else true</li></ul>\n"
  example: 
- uid: CRMScript.Native.GenericSearch.setLanguage
  commentId: M:CRMScript.Native.GenericSearch.setLanguage
  id: 'setLanguage'
  so.intellisense: GenericSearch.setLanguage
  langs:
  - crmscript
  name: 'setLanguage'
  nameWithType: GenericSearch.setLanguage
  fullName: CRMScript.Native.GenericSearch.setLanguage
  type: Method
  summary: "\nSet what language to use when showing display fields.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.setLimit
  commentId: M:CRMScript.Native.GenericSearch.setLimit
  id: 'setLimit'
  so.intellisense: GenericSearch.setLimit
  langs:
  - crmscript
  name: 'setLimit'
  nameWithType: GenericSearch.setLimit
  fullName: CRMScript.Native.GenericSearch.setLimit
  type: Method
  summary: "\nSet a limit of the number of rows that will be returned in the resultset<p></p>\n<ul><li><strong>limit:</strong>The maximum number of rows to be returned in the resultset</li></ul>\n"
  example: 
references:
- uid: CRMScript.Native.GenericSearch
  commentId: T:CRMScript.Native.GenericSearch
  isExternal: true
  name: GenericSearch
  nameWithType: GenericSearch
  fullName: CRMScript.Native.GenericSearch