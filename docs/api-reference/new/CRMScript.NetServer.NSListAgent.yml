### YamlMime:ManagedReference
items:
- uid: CRMScript.NetServer.NSListAgent
  commentId: T:CRMScript.NetServer.NSListAgent
  id: NSListAgent
  so.intellisense: Void.NSListAgent
  langs:
  - crmscript
  children:
  - CRMScript.NetServer.NSListAgent.AddFromListDefinition
  - CRMScript.NetServer.NSListAgent.AddFromListName
  - CRMScript.NetServer.NSListAgent.AddHierarchyToPath
  - CRMScript.NetServer.NSListAgent.ChangeCurrency
  - CRMScript.NetServer.NSListAgent.CreateDefaultAmountClassEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultCountry
  - CRMScript.NetServer.NSListAgent.CreateDefaultCurrencyEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateLanguage
  - CRMScript.NetServer.NSListAgent.CreateDefaultExtAppEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultHeadingEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultHeadingFromListDefinition
  - CRMScript.NetServer.NSListAgent.CreateDefaultHierarchyEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultListEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultListItemEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultProjectTypeEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultRelationDefinitionEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultResourceEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultSaleStageEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultSaleTypeEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultTicketCategoryEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultTicketPriorityEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultTicketStatusEntity
  - CRMScript.NetServer.NSListAgent.CreateDefaultWebPanelEntity
  - CRMScript.NetServer.NSListAgent.DeleteAllFromListDefinition
  - CRMScript.NetServer.NSListAgent.DeleteAllFromListName
  - CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromListDefinition
  - CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromName
  - CRMScript.NetServer.NSListAgent.DeleteAppWebPanels
  - CRMScript.NetServer.NSListAgent.DeleteDocumentTemplateLanguage
  - CRMScript.NetServer.NSListAgent.DeleteFromListDefinition
  - CRMScript.NetServer.NSListAgent.DeleteFromListName
  - CRMScript.NetServer.NSListAgent.DeleteHierarchyEntity
  - CRMScript.NetServer.NSListAgent.DeleteHierarchyFromPath
  - CRMScript.NetServer.NSListAgent.DeleteListEntity
  - CRMScript.NetServer.NSListAgent.DeleteListEntityByName
  - CRMScript.NetServer.NSListAgent.DeleteProjectStatus
  - CRMScript.NetServer.NSListAgent.DeleteResourceEntity
  - CRMScript.NetServer.NSListAgent.DeleteTicketCategoryEntity
  - CRMScript.NetServer.NSListAgent.DeleteTicketPriorityEntity
  - CRMScript.NetServer.NSListAgent.DeleteTicketStatusEntity
  - CRMScript.NetServer.NSListAgent.DeleteWebPanel
  - CRMScript.NetServer.NSListAgent.GenerateNavigationUrl
  - CRMScript.NetServer.NSListAgent.GetAllCountries
  - CRMScript.NetServer.NSListAgent.GetAllCurrencies
  - CRMScript.NetServer.NSListAgent.GetAllDocumentTemplates
  - CRMScript.NetServer.NSListAgent.GetAllDomains
  - CRMScript.NetServer.NSListAgent.GetAllFromListDefinition
  - CRMScript.NetServer.NSListAgent.GetAllFromListName
  - CRMScript.NetServer.NSListAgent.GetAllInDomain
  - CRMScript.NetServer.NSListAgent.GetAllSaleStages
  - CRMScript.NetServer.NSListAgent.GetAllSaleType
  - CRMScript.NetServer.NSListAgent.GetAllSaleTypeEntities
  - CRMScript.NetServer.NSListAgent.GetAllTasks
  - CRMScript.NetServer.NSListAgent.GetAllTicketPriorities
  - CRMScript.NetServer.NSListAgent.GetAmountClassEntity
  - CRMScript.NetServer.NSListAgent.GetAppWebPanels
  - CRMScript.NetServer.NSListAgent.GetBaseCurrency
  - CRMScript.NetServer.NSListAgent.GetBusiness
  - CRMScript.NetServer.NSListAgent.GetBusinesses
  - CRMScript.NetServer.NSListAgent.GetBusinessList
  - CRMScript.NetServer.NSListAgent.GetCategories
  - CRMScript.NetServer.NSListAgent.GetCategory
  - CRMScript.NetServer.NSListAgent.GetCategoryList
  - CRMScript.NetServer.NSListAgent.GetCompetitor
  - CRMScript.NetServer.NSListAgent.GetCompetitorList
  - CRMScript.NetServer.NSListAgent.GetCompetitors
  - CRMScript.NetServer.NSListAgent.GetConsentPurpose
  - CRMScript.NetServer.NSListAgent.GetConsentPurposeList
  - CRMScript.NetServer.NSListAgent.GetConsentPurposes
  - CRMScript.NetServer.NSListAgent.GetConsentSource
  - CRMScript.NetServer.NSListAgent.GetConsentSourceList
  - CRMScript.NetServer.NSListAgent.GetConsentSources
  - CRMScript.NetServer.NSListAgent.GetCountries
  - CRMScript.NetServer.NSListAgent.GetCountry
  - CRMScript.NetServer.NSListAgent.GetCountryList
  - CRMScript.NetServer.NSListAgent.GetCredited
  - CRMScript.NetServer.NSListAgent.GetCreditedList
  - CRMScript.NetServer.NSListAgent.GetCrediteds
  - CRMScript.NetServer.NSListAgent.GetCurrencies
  - CRMScript.NetServer.NSListAgent.GetCurrency
  - CRMScript.NetServer.NSListAgent.GetCurrencyEntity
  - CRMScript.NetServer.NSListAgent.GetCurrencyList
  - CRMScript.NetServer.NSListAgent.GetCustomerLanguage
  - CRMScript.NetServer.NSListAgent.GetCustomerLanguageList
  - CRMScript.NetServer.NSListAgent.GetCustomerLanguages
  - CRMScript.NetServer.NSListAgent.GetDeliveryTerm
  - CRMScript.NetServer.NSListAgent.GetDeliveryTerms
  - CRMScript.NetServer.NSListAgent.GetDeliveryType
  - CRMScript.NetServer.NSListAgent.GetDeliveryTypes
  - CRMScript.NetServer.NSListAgent.GetDepartment
  - CRMScript.NetServer.NSListAgent.GetDepartmentList
  - CRMScript.NetServer.NSListAgent.GetDepartments
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplate
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateEntity
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateExtension
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateLanguages
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateList
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateProperties
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplates
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplatesTasks
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateStreamFromId
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateTask
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateUrl
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInProjectStage
  - CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInSalesStage
  - CRMScript.NetServer.NSListAgent.GetDocumentTypesForPlugin
  - CRMScript.NetServer.NSListAgent.GetEmarketingStrictMode
  - CRMScript.NetServer.NSListAgent.GetExtAppEntity
  - CRMScript.NetServer.NSListAgent.GetFromListDefinition
  - CRMScript.NetServer.NSListAgent.GetFromListName
  - CRMScript.NetServer.NSListAgent.GetHeadingEntity
  - CRMScript.NetServer.NSListAgent.GetHeadings
  - CRMScript.NetServer.NSListAgent.GetHeadingsForListItemFromListName
  - CRMScript.NetServer.NSListAgent.GetHeadingsFromListDefinition
  - CRMScript.NetServer.NSListAgent.GetHeadingsFromName
  - CRMScript.NetServer.NSListAgent.GetHierarchyEntity
  - CRMScript.NetServer.NSListAgent.GetHierarchyFromPath
  - CRMScript.NetServer.NSListAgent.GetInstalledLanguages
  - CRMScript.NetServer.NSListAgent.GetLanguageInfo
  - CRMScript.NetServer.NSListAgent.GetLanguageInfoList
  - CRMScript.NetServer.NSListAgent.GetLegalBase
  - CRMScript.NetServer.NSListAgent.GetLegalBaseList
  - CRMScript.NetServer.NSListAgent.GetLegalBases
  - CRMScript.NetServer.NSListAgent.GetLink
  - CRMScript.NetServer.NSListAgent.GetLinkList
  - CRMScript.NetServer.NSListAgent.GetListDefinitions
  - CRMScript.NetServer.NSListAgent.GetListEntity
  - CRMScript.NetServer.NSListAgent.GetListEntityByName
  - CRMScript.NetServer.NSListAgent.GetListItemsForHeading
  - CRMScript.NetServer.NSListAgent.GetListItemsForHeadingFromListName
  - CRMScript.NetServer.NSListAgent.GetListItemsForUserGroup
  - CRMScript.NetServer.NSListAgent.GetListItemsForUserGroupFromListName
  - CRMScript.NetServer.NSListAgent.GetLocalizedText
  - CRMScript.NetServer.NSListAgent.GetLocalizedTextByType
  - CRMScript.NetServer.NSListAgent.GetLocalizedTextList
  - CRMScript.NetServer.NSListAgent.GetLocalizedTexts
  - CRMScript.NetServer.NSListAgent.GetLocalizedTextsByLanguageId
  - CRMScript.NetServer.NSListAgent.GetLocalizedTextsByType
  - CRMScript.NetServer.NSListAgent.GetMrMrs
  - CRMScript.NetServer.NSListAgent.GetMrMrses
  - CRMScript.NetServer.NSListAgent.GetMrMrsList
  - CRMScript.NetServer.NSListAgent.GetOurCurrency
  - CRMScript.NetServer.NSListAgent.GetOwnerCompanysCurrency
  - CRMScript.NetServer.NSListAgent.GetPaymentTerm
  - CRMScript.NetServer.NSListAgent.GetPaymentTerms
  - CRMScript.NetServer.NSListAgent.GetPaymentType
  - CRMScript.NetServer.NSListAgent.GetPaymentTypes
  - CRMScript.NetServer.NSListAgent.GetPluginCapabilities
  - CRMScript.NetServer.NSListAgent.GetPluginList
  - CRMScript.NetServer.NSListAgent.GetPosition
  - CRMScript.NetServer.NSListAgent.GetPositionList
  - CRMScript.NetServer.NSListAgent.GetPositions
  - CRMScript.NetServer.NSListAgent.GetPriorities
  - CRMScript.NetServer.NSListAgent.GetPriority
  - CRMScript.NetServer.NSListAgent.GetPriorityList
  - CRMScript.NetServer.NSListAgent.GetProductCategories
  - CRMScript.NetServer.NSListAgent.GetProductCategory
  - CRMScript.NetServer.NSListAgent.GetProductFamilies
  - CRMScript.NetServer.NSListAgent.GetProductFamily
  - CRMScript.NetServer.NSListAgent.GetProductType
  - CRMScript.NetServer.NSListAgent.GetProductTypes
  - CRMScript.NetServer.NSListAgent.GetProjectStatus
  - CRMScript.NetServer.NSListAgent.GetProjectStatuses
  - CRMScript.NetServer.NSListAgent.GetProjectStatusList
  - CRMScript.NetServer.NSListAgent.GetProjectType
  - CRMScript.NetServer.NSListAgent.GetProjectTypeEntity
  - CRMScript.NetServer.NSListAgent.GetProjectTypeList
  - CRMScript.NetServer.NSListAgent.GetProjectTypes
  - CRMScript.NetServer.NSListAgent.GetQuickReplies
  - CRMScript.NetServer.NSListAgent.GetRating
  - CRMScript.NetServer.NSListAgent.GetRatingList
  - CRMScript.NetServer.NSListAgent.GetRatings
  - CRMScript.NetServer.NSListAgent.GetReason
  - CRMScript.NetServer.NSListAgent.GetReasonList
  - CRMScript.NetServer.NSListAgent.GetReasons
  - CRMScript.NetServer.NSListAgent.GetReasonSold
  - CRMScript.NetServer.NSListAgent.GetReasonSoldList
  - CRMScript.NetServer.NSListAgent.GetReasonStalled
  - CRMScript.NetServer.NSListAgent.GetReasonStalledList
  - CRMScript.NetServer.NSListAgent.GetRelationDefinitionEntity
  - CRMScript.NetServer.NSListAgent.GetResourceEntity
  - CRMScript.NetServer.NSListAgent.GetSaleStageEntity
  - CRMScript.NetServer.NSListAgent.GetSaleType
  - CRMScript.NetServer.NSListAgent.GetSaleTypeEntity
  - CRMScript.NetServer.NSListAgent.GetSaleTypeList
  - CRMScript.NetServer.NSListAgent.GetSelectionCategory
  - CRMScript.NetServer.NSListAgent.GetSelectionCategoryList
  - CRMScript.NetServer.NSListAgent.GetSource
  - CRMScript.NetServer.NSListAgent.GetSourceList
  - CRMScript.NetServer.NSListAgent.GetSources
  - CRMScript.NetServer.NSListAgent.GetTask
  - CRMScript.NetServer.NSListAgent.GetTaskList
  - CRMScript.NetServer.NSListAgent.GetTasks
  - CRMScript.NetServer.NSListAgent.GetTicketCategories
  - CRMScript.NetServer.NSListAgent.GetTicketCategoriesForUserGroups
  - CRMScript.NetServer.NSListAgent.GetTicketCategory
  - CRMScript.NetServer.NSListAgent.GetTicketCategoryEntity
  - CRMScript.NetServer.NSListAgent.GetTicketCategoryList
  - CRMScript.NetServer.NSListAgent.GetTicketPriorities
  - CRMScript.NetServer.NSListAgent.GetTicketPriority
  - CRMScript.NetServer.NSListAgent.GetTicketPriorityEntity
  - CRMScript.NetServer.NSListAgent.GetTicketPriorityList
  - CRMScript.NetServer.NSListAgent.GetTicketStatusEntity
  - CRMScript.NetServer.NSListAgent.GetTicketStatuses
  - CRMScript.NetServer.NSListAgent.GetTicketStatusList
  - CRMScript.NetServer.NSListAgent.GetVisibleForUserGroups
  - CRMScript.NetServer.NSListAgent.GetVisibleForUserGroupsFromListName
  - CRMScript.NetServer.NSListAgent.GetWebPanelByProgId
  - CRMScript.NetServer.NSListAgent.GetWebPanelEntity
  - CRMScript.NetServer.NSListAgent.GetWebPanelList
  - CRMScript.NetServer.NSListAgent.GlobalChangeTicketStatus
  - CRMScript.NetServer.NSListAgent.MoveAllTickets
  - CRMScript.NetServer.NSListAgent.MoveListItem
  - CRMScript.NetServer.NSListAgent.#ctor
  - CRMScript.NetServer.NSListAgent.RebuildFullnames
  - CRMScript.NetServer.NSListAgent.SaveAllFromListDefinition
  - CRMScript.NetServer.NSListAgent.SaveAllFromListName
  - CRMScript.NetServer.NSListAgent.SaveAmountClassEntity
  - CRMScript.NetServer.NSListAgent.SaveConsentPurpose
  - CRMScript.NetServer.NSListAgent.SaveConsentSource
  - CRMScript.NetServer.NSListAgent.SaveCountry
  - CRMScript.NetServer.NSListAgent.SaveCurrencyEntity
  - CRMScript.NetServer.NSListAgent.SaveDocumentTemplateEntity
  - CRMScript.NetServer.NSListAgent.SaveDocumentTemplateStream
  - CRMScript.NetServer.NSListAgent.SaveExtAppEntity
  - CRMScript.NetServer.NSListAgent.SaveFromListDefinition
  - CRMScript.NetServer.NSListAgent.SaveFromListName
  - CRMScript.NetServer.NSListAgent.SaveHeadingEntity
  - CRMScript.NetServer.NSListAgent.SaveHeadingFromListDefinition
  - CRMScript.NetServer.NSListAgent.SaveHeadingFromName
  - CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListDefinition
  - CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListName
  - CRMScript.NetServer.NSListAgent.SaveHeadingsFromListDefinition
  - CRMScript.NetServer.NSListAgent.SaveHeadingsFromName
  - CRMScript.NetServer.NSListAgent.SaveHierarchyEntity
  - CRMScript.NetServer.NSListAgent.SaveLegalBase
  - CRMScript.NetServer.NSListAgent.SaveListEntity
  - CRMScript.NetServer.NSListAgent.SaveListEntityByName
  - CRMScript.NetServer.NSListAgent.SaveListItemEntity
  - CRMScript.NetServer.NSListAgent.SaveProjectTypeEntity
  - CRMScript.NetServer.NSListAgent.SaveQuickReplies
  - CRMScript.NetServer.NSListAgent.SaveRelationDefinitionEntity
  - CRMScript.NetServer.NSListAgent.SaveResourceEntity
  - CRMScript.NetServer.NSListAgent.SaveSaleStageEntity
  - CRMScript.NetServer.NSListAgent.SaveSaleTypeEntity
  - CRMScript.NetServer.NSListAgent.SaveTicketCategoryEntity
  - CRMScript.NetServer.NSListAgent.SaveTicketPriorityEntity
  - CRMScript.NetServer.NSListAgent.SaveTicketStatusEntity
  - CRMScript.NetServer.NSListAgent.SaveWebPanelEntity
  - CRMScript.NetServer.NSListAgent.SetDocumentTemplateFromDocumentTemplate
  - CRMScript.NetServer.NSListAgent.SetDocumentTemplateStream
  - CRMScript.NetServer.NSListAgent.SetEmarketingStrictMode
  - CRMScript.NetServer.NSListAgent.SetHeadingsForListItem
  - CRMScript.NetServer.NSListAgent.SetListItemsForHeading
  - CRMScript.NetServer.NSListAgent.SetListItemsForHeadingFromListName
  - CRMScript.NetServer.NSListAgent.SetListItemsForUserGroup
  - CRMScript.NetServer.NSListAgent.SetListItemsForUserGroupFromListName
  - CRMScript.NetServer.NSListAgent.SetRankOnHeadings
  - CRMScript.NetServer.NSListAgent.SetRankOnProjectActivity
  - CRMScript.NetServer.NSListAgent.SetRankOnProjectDocument
  - CRMScript.NetServer.NSListAgent.SetRankOnSaleActivity
  - CRMScript.NetServer.NSListAgent.SetRankOnSaleDocument
  - CRMScript.NetServer.NSListAgent.SetTicketCategoriesForUserGroup
  - CRMScript.NetServer.NSListAgent.SetVisibleForUserGroup
  - CRMScript.NetServer.NSListAgent.SetVisibleForUserGroups
  - CRMScript.NetServer.NSListAgent.SetVisibleForUserGroupsFromListName
  - CRMScript.NetServer.NSListAgent.SortListItems
  - CRMScript.NetServer.NSListAgent.UpdateHierarchyFromPath
  name: NSListAgent
  nameWithType: NSListAgent
  fullName: CRMScript.NetServer.NSListAgent
  type: Class
  summary: "\nCollection of all services that work with Lists. These are typical lists of data shown in dropdown-list, checkbox lists, etc.\n"
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.AddFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.AddFromListDefinition
  id: 'AddFromListDefinition'
  so.intellisense: NSListAgent.AddFromListDefinition
  langs:
  - crmscript
  name: 'AddFromListDefinition'
  nameWithType: NSListAgent.AddFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.AddFromListDefinition
  type: Method
  summary: "\nSave a new list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity AddFromListDefinition(Integer udListDefinitionId, NSListItemEntity item)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: item
      type: CRMScript.NetServer.NSListItemEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nNSListItemEntity item;\nNSListItemEntity res = agent.AddFromListDefinition(udListDefinitionId, item);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.AddFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.AddFromListName
  id: 'AddFromListName'
  so.intellisense: NSListAgent.AddFromListName
  langs:
  - crmscript
  name: 'AddFromListName'
  nameWithType: NSListAgent.AddFromListName
  fullName: CRMScript.NetServer.NSListAgent.AddFromListName
  type: Method
  summary: "\nSave a new list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity AddFromListName(String udListDefinitionName, NSListItemEntity item)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: item
      type: CRMScript.NetServer.NSListItemEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nNSListItemEntity item;\nNSListItemEntity res = agent.AddFromListName(udListDefinitionName, item);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.AddHierarchyToPath
  commentId: M:CRMScript.NetServer.NSListAgent.AddHierarchyToPath
  id: 'AddHierarchyToPath'
  so.intellisense: NSListAgent.AddHierarchyToPath
  langs:
  - crmscript
  name: 'AddHierarchyToPath'
  nameWithType: NSListAgent.AddHierarchyToPath
  fullName: CRMScript.NetServer.NSListAgent.AddHierarchyToPath
  type: Method
  summary: "\nAdd a hierarchy item to a path\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = ExtraTables</li><li>Enum: 2 = ScreenDefinitions</li><li>Enum: 3 = Scripts</li><li>Enum: 4 = Selections</li><li>Enum: 5 = ExternalDocuments</li><li>Enum: 6 = UserGroups</li><li>Enum: 7 = ExternalDocumentRelatedToSpmMessage</li><li>Enum: 8 = Dashboards</li></ul>\n"
  syntax: 
    content: NSHierarchyEntity AddHierarchyToPath(Integer domain, String path, String name)
    parameters:
    - id: domain
      type: CRMScript.Global.Integer
      description: 
    - id: path
      type: CRMScript.Global.String
      description: 
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger domain;\nString path;\nString name;\nNSHierarchyEntity res = agent.AddHierarchyToPath(domain, path, name);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.ChangeCurrency
  commentId: M:CRMScript.NetServer.NSListAgent.ChangeCurrency
  id: 'ChangeCurrency'
  so.intellisense: NSListAgent.ChangeCurrency
  langs:
  - crmscript
  name: 'ChangeCurrency'
  nameWithType: NSListAgent.ChangeCurrency
  fullName: CRMScript.NetServer.NSListAgent.ChangeCurrency
  type: Method
  summary: "\nRecalculates the amount to the new currency.\n"
  remarks: 
  syntax: 
    content: Float ChangeCurrency(Float amount, String fromCurrency, String toCurrency)
    parameters:
    - id: amount
      type: CRMScript.Global.Float
      description: 
    - id: fromCurrency
      type: CRMScript.Global.String
      description: 
    - id: toCurrency
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Float
  example: 
  - "\n<pre><code>NSListAgent agent;\nFloat amount;\nString fromCurrency;\nString toCurrency;\nFloat res = agent.ChangeCurrency(amount, fromCurrency, toCurrency);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultAmountClassEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultAmountClassEntity
  id: 'CreateDefaultAmountClassEntity'
  so.intellisense: NSListAgent.CreateDefaultAmountClassEntity
  langs:
  - crmscript
  name: 'CreateDefaultAmountClassEntity'
  nameWithType: NSListAgent.CreateDefaultAmountClassEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultAmountClassEntity
  type: Method
  summary: "\nSet default values into a new NSAmountClassEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSAmountClassEntity<p></p>\n<pre><code>NSListAgent agent;\nNSAmountClassEntity thing = agent.CreateDefaultAmountClassEntity();\nthing = agent.SaveAmountClassEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSAmountClassEntity CreateDefaultAmountClassEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSAmountClassEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSAmountClassEntity thing = agent.CreateDefaultAmountClassEntity();\nthing = agent.SaveAmountClassEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultCountry
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultCountry
  id: 'CreateDefaultCountry'
  so.intellisense: NSListAgent.CreateDefaultCountry
  langs:
  - crmscript
  name: 'CreateDefaultCountry'
  nameWithType: NSListAgent.CreateDefaultCountry
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultCountry
  type: Method
  summary: "\nGets a new country<p></p>\n<strong>Returns:</strong>NSCountry<p></p>\n<pre><code>NSListAgent agent;\nNSCountry res = agent.CreateDefaultCountry();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCountry CreateDefaultCountry()
    parameters:
    return:
      type: CRMScript.NetServer.NSCountry
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCountry res = agent.CreateDefaultCountry();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultCurrencyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultCurrencyEntity
  id: 'CreateDefaultCurrencyEntity'
  so.intellisense: NSListAgent.CreateDefaultCurrencyEntity
  langs:
  - crmscript
  name: 'CreateDefaultCurrencyEntity'
  nameWithType: NSListAgent.CreateDefaultCurrencyEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultCurrencyEntity
  type: Method
  summary: "\nSet default values into a new NSCurrencyEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSCurrencyEntity<p></p>\n<pre><code>NSListAgent agent;\nNSCurrencyEntity thing = agent.CreateDefaultCurrencyEntity();\nthing = agent.SaveCurrencyEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrencyEntity CreateDefaultCurrencyEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSCurrencyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrencyEntity thing = agent.CreateDefaultCurrencyEntity();\nthing = agent.SaveCurrencyEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateEntity
  id: 'CreateDefaultDocumentTemplateEntity'
  so.intellisense: NSListAgent.CreateDefaultDocumentTemplateEntity
  langs:
  - crmscript
  name: 'CreateDefaultDocumentTemplateEntity'
  nameWithType: NSListAgent.CreateDefaultDocumentTemplateEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateEntity
  type: Method
  summary: "\nSet default values into a new NSDocumentTemplateEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSDocumentTemplateEntity<p></p>\n<pre><code>NSListAgent agent;\nNSDocumentTemplateEntity thing = agent.CreateDefaultDocumentTemplateEntity();\nthing = agent.SaveDocumentTemplateEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity CreateDefaultDocumentTemplateEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDocumentTemplateEntity thing = agent.CreateDefaultDocumentTemplateEntity();\nthing = agent.SaveDocumentTemplateEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateLanguage
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateLanguage
  id: 'CreateDefaultDocumentTemplateLanguage'
  so.intellisense: NSListAgent.CreateDefaultDocumentTemplateLanguage
  langs:
  - crmscript
  name: 'CreateDefaultDocumentTemplateLanguage'
  nameWithType: NSListAgent.CreateDefaultDocumentTemplateLanguage
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultDocumentTemplateLanguage
  type: Method
  summary: "\nCreate a new document template language based on an existing template\n"
  remarks: 
  syntax: 
    content: Void CreateDefaultDocumentTemplateLanguage(Integer documentTemplateId, String languageCode)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString languageCode;\nagent.CreateDefaultDocumentTemplateLanguage(documentTemplateId, languageCode);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultExtAppEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultExtAppEntity
  id: 'CreateDefaultExtAppEntity'
  so.intellisense: NSListAgent.CreateDefaultExtAppEntity
  langs:
  - crmscript
  name: 'CreateDefaultExtAppEntity'
  nameWithType: NSListAgent.CreateDefaultExtAppEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultExtAppEntity
  type: Method
  summary: "\nSet default values into a new NSExtAppEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSExtAppEntity<p></p>\n<pre><code>NSListAgent agent;\nNSExtAppEntity thing = agent.CreateDefaultExtAppEntity();\nthing = agent.SaveExtAppEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSExtAppEntity CreateDefaultExtAppEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSExtAppEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSExtAppEntity thing = agent.CreateDefaultExtAppEntity();\nthing = agent.SaveExtAppEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultHeadingEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultHeadingEntity
  id: 'CreateDefaultHeadingEntity'
  so.intellisense: NSListAgent.CreateDefaultHeadingEntity
  langs:
  - crmscript
  name: 'CreateDefaultHeadingEntity'
  nameWithType: NSListAgent.CreateDefaultHeadingEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultHeadingEntity
  type: Method
  summary: "\nSet default values into a new NSHeadingEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSHeadingEntity<p></p>\n<pre><code>NSListAgent agent;\nNSHeadingEntity thing = agent.CreateDefaultHeadingEntity();\nthing = agent.SaveHeadingEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity CreateDefaultHeadingEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSHeadingEntity thing = agent.CreateDefaultHeadingEntity();\nthing = agent.SaveHeadingEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultHeadingFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultHeadingFromListDefinition
  id: 'CreateDefaultHeadingFromListDefinition'
  so.intellisense: NSListAgent.CreateDefaultHeadingFromListDefinition
  langs:
  - crmscript
  name: 'CreateDefaultHeadingFromListDefinition'
  nameWithType: NSListAgent.CreateDefaultHeadingFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultHeadingFromListDefinition
  type: Method
  summary: "\nGet a heading for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity CreateDefaultHeadingFromListDefinition(Integer udListDefinitionId)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nNSHeadingEntity res = agent.CreateDefaultHeadingFromListDefinition(udListDefinitionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultHierarchyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultHierarchyEntity
  id: 'CreateDefaultHierarchyEntity'
  so.intellisense: NSListAgent.CreateDefaultHierarchyEntity
  langs:
  - crmscript
  name: 'CreateDefaultHierarchyEntity'
  nameWithType: NSListAgent.CreateDefaultHierarchyEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultHierarchyEntity
  type: Method
  summary: "\nSet default values into a new NSHierarchyEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSHierarchyEntity<p></p>\n<pre><code>NSListAgent agent;\nNSHierarchyEntity thing = agent.CreateDefaultHierarchyEntity();\nthing = agent.SaveHierarchyEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSHierarchyEntity CreateDefaultHierarchyEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSHierarchyEntity thing = agent.CreateDefaultHierarchyEntity();\nthing = agent.SaveHierarchyEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultListEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultListEntity
  id: 'CreateDefaultListEntity'
  so.intellisense: NSListAgent.CreateDefaultListEntity
  langs:
  - crmscript
  name: 'CreateDefaultListEntity'
  nameWithType: NSListAgent.CreateDefaultListEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultListEntity
  type: Method
  summary: "\nSet default values into a new NSListEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSListEntity<p></p>\n<pre><code>NSListAgent agent;\nNSListEntity thing = agent.CreateDefaultListEntity();\nthing = agent.SaveListEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSListEntity CreateDefaultListEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSListEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSListEntity thing = agent.CreateDefaultListEntity();\nthing = agent.SaveListEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultListItemEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultListItemEntity
  id: 'CreateDefaultListItemEntity'
  so.intellisense: NSListAgent.CreateDefaultListItemEntity
  langs:
  - crmscript
  name: 'CreateDefaultListItemEntity'
  nameWithType: NSListAgent.CreateDefaultListItemEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultListItemEntity
  type: Method
  summary: "\nSet default values into a new NSListItemEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSListItemEntity<p></p>\n<pre><code>NSListAgent agent;\nNSListItemEntity thing = agent.CreateDefaultListItemEntity();\nthing = agent.SaveListItemEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSListItemEntity CreateDefaultListItemEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSListItemEntity thing = agent.CreateDefaultListItemEntity();\nthing = agent.SaveListItemEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultProjectTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultProjectTypeEntity
  id: 'CreateDefaultProjectTypeEntity'
  so.intellisense: NSListAgent.CreateDefaultProjectTypeEntity
  langs:
  - crmscript
  name: 'CreateDefaultProjectTypeEntity'
  nameWithType: NSListAgent.CreateDefaultProjectTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultProjectTypeEntity
  type: Method
  summary: "\nSet default values into a new NSProjectTypeEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSProjectTypeEntity<p></p>\n<pre><code>NSListAgent agent;\nNSProjectTypeEntity thing = agent.CreateDefaultProjectTypeEntity();\nthing = agent.SaveProjectTypeEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProjectTypeEntity CreateDefaultProjectTypeEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSProjectTypeEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectTypeEntity thing = agent.CreateDefaultProjectTypeEntity();\nthing = agent.SaveProjectTypeEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultRelationDefinitionEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultRelationDefinitionEntity
  id: 'CreateDefaultRelationDefinitionEntity'
  so.intellisense: NSListAgent.CreateDefaultRelationDefinitionEntity
  langs:
  - crmscript
  name: 'CreateDefaultRelationDefinitionEntity'
  nameWithType: NSListAgent.CreateDefaultRelationDefinitionEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultRelationDefinitionEntity
  type: Method
  summary: "\nSet default values into a new NSRelationDefinitionEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSRelationDefinitionEntity<p></p>\n<pre><code>NSListAgent agent;\nNSRelationDefinitionEntity thing = agent.CreateDefaultRelationDefinitionEntity();\nthing = agent.SaveRelationDefinitionEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSRelationDefinitionEntity CreateDefaultRelationDefinitionEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSRelationDefinitionEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSRelationDefinitionEntity thing = agent.CreateDefaultRelationDefinitionEntity();\nthing = agent.SaveRelationDefinitionEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultResourceEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultResourceEntity
  id: 'CreateDefaultResourceEntity'
  so.intellisense: NSListAgent.CreateDefaultResourceEntity
  langs:
  - crmscript
  name: 'CreateDefaultResourceEntity'
  nameWithType: NSListAgent.CreateDefaultResourceEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultResourceEntity
  type: Method
  summary: "\nSet default values into a new NSResourceEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSResourceEntity<p></p>\n<pre><code>NSListAgent agent;\nNSResourceEntity thing = agent.CreateDefaultResourceEntity();\nthing = agent.SaveResourceEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSResourceEntity CreateDefaultResourceEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSResourceEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSResourceEntity thing = agent.CreateDefaultResourceEntity();\nthing = agent.SaveResourceEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultSaleStageEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultSaleStageEntity
  id: 'CreateDefaultSaleStageEntity'
  so.intellisense: NSListAgent.CreateDefaultSaleStageEntity
  langs:
  - crmscript
  name: 'CreateDefaultSaleStageEntity'
  nameWithType: NSListAgent.CreateDefaultSaleStageEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultSaleStageEntity
  type: Method
  summary: "\nSet default values into a new NSSaleStageEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSSaleStageEntity<p></p>\n<pre><code>NSListAgent agent;\nNSSaleStageEntity thing = agent.CreateDefaultSaleStageEntity();\nthing = agent.SaveSaleStageEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSaleStageEntity CreateDefaultSaleStageEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSSaleStageEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleStageEntity thing = agent.CreateDefaultSaleStageEntity();\nthing = agent.SaveSaleStageEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultSaleTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultSaleTypeEntity
  id: 'CreateDefaultSaleTypeEntity'
  so.intellisense: NSListAgent.CreateDefaultSaleTypeEntity
  langs:
  - crmscript
  name: 'CreateDefaultSaleTypeEntity'
  nameWithType: NSListAgent.CreateDefaultSaleTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultSaleTypeEntity
  type: Method
  summary: "\nSet default values into a new NSSaleTypeEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSSaleTypeEntity<p></p>\n<pre><code>NSListAgent agent;\nNSSaleTypeEntity thing = agent.CreateDefaultSaleTypeEntity();\nthing = agent.SaveSaleTypeEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSaleTypeEntity CreateDefaultSaleTypeEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSSaleTypeEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleTypeEntity thing = agent.CreateDefaultSaleTypeEntity();\nthing = agent.SaveSaleTypeEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultTicketCategoryEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultTicketCategoryEntity
  id: 'CreateDefaultTicketCategoryEntity'
  so.intellisense: NSListAgent.CreateDefaultTicketCategoryEntity
  langs:
  - crmscript
  name: 'CreateDefaultTicketCategoryEntity'
  nameWithType: NSListAgent.CreateDefaultTicketCategoryEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultTicketCategoryEntity
  type: Method
  summary: "\nSet default values into a new NSTicketCategoryEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSTicketCategoryEntity<p></p>\n<pre><code>NSListAgent agent;\nNSTicketCategoryEntity thing = agent.CreateDefaultTicketCategoryEntity();\nthing = agent.SaveTicketCategoryEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketCategoryEntity CreateDefaultTicketCategoryEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketCategoryEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketCategoryEntity thing = agent.CreateDefaultTicketCategoryEntity();\nthing = agent.SaveTicketCategoryEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultTicketPriorityEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultTicketPriorityEntity
  id: 'CreateDefaultTicketPriorityEntity'
  so.intellisense: NSListAgent.CreateDefaultTicketPriorityEntity
  langs:
  - crmscript
  name: 'CreateDefaultTicketPriorityEntity'
  nameWithType: NSListAgent.CreateDefaultTicketPriorityEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultTicketPriorityEntity
  type: Method
  summary: "\nSet default values into a new NSTicketPriorityEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSTicketPriorityEntity<p></p>\n<pre><code>NSListAgent agent;\nNSTicketPriorityEntity thing = agent.CreateDefaultTicketPriorityEntity();\nthing = agent.SaveTicketPriorityEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketPriorityEntity CreateDefaultTicketPriorityEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketPriorityEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketPriorityEntity thing = agent.CreateDefaultTicketPriorityEntity();\nthing = agent.SaveTicketPriorityEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultTicketStatusEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultTicketStatusEntity
  id: 'CreateDefaultTicketStatusEntity'
  so.intellisense: NSListAgent.CreateDefaultTicketStatusEntity
  langs:
  - crmscript
  name: 'CreateDefaultTicketStatusEntity'
  nameWithType: NSListAgent.CreateDefaultTicketStatusEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultTicketStatusEntity
  type: Method
  summary: "\nSet default values into a new NSTicketStatusEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSTicketStatusEntity<p></p>\n<pre><code>NSListAgent agent;\nNSTicketStatusEntity thing = agent.CreateDefaultTicketStatusEntity();\nthing = agent.SaveTicketStatusEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketStatusEntity CreateDefaultTicketStatusEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketStatusEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketStatusEntity thing = agent.CreateDefaultTicketStatusEntity();\nthing = agent.SaveTicketStatusEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.CreateDefaultWebPanelEntity
  commentId: M:CRMScript.NetServer.NSListAgent.CreateDefaultWebPanelEntity
  id: 'CreateDefaultWebPanelEntity'
  so.intellisense: NSListAgent.CreateDefaultWebPanelEntity
  langs:
  - crmscript
  name: 'CreateDefaultWebPanelEntity'
  nameWithType: NSListAgent.CreateDefaultWebPanelEntity
  fullName: CRMScript.NetServer.NSListAgent.CreateDefaultWebPanelEntity
  type: Method
  summary: "\nSet default values into a new NSWebPanelEntity.
NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance<p></p>\n<strong>Returns:</strong>NSWebPanelEntity<p></p>\n<pre><code>NSListAgent agent;\nNSWebPanelEntity thing = agent.CreateDefaultWebPanelEntity();\nthing = agent.SaveWebPanelEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity CreateDefaultWebPanelEntity()
    parameters:
    return:
      type: CRMScript.NetServer.NSWebPanelEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSWebPanelEntity thing = agent.CreateDefaultWebPanelEntity();\nthing = agent.SaveWebPanelEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteAllFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteAllFromListDefinition
  id: 'DeleteAllFromListDefinition'
  so.intellisense: NSListAgent.DeleteAllFromListDefinition
  langs:
  - crmscript
  name: 'DeleteAllFromListDefinition'
  nameWithType: NSListAgent.DeleteAllFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.DeleteAllFromListDefinition
  type: Method
  summary: "\nMarks all items in the list deleted\n"
  remarks: 
  syntax: 
    content: Void DeleteAllFromListDefinition(Integer udListDefinitionId)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nagent.DeleteAllFromListDefinition(udListDefinitionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteAllFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteAllFromListName
  id: 'DeleteAllFromListName'
  so.intellisense: NSListAgent.DeleteAllFromListName
  langs:
  - crmscript
  name: 'DeleteAllFromListName'
  nameWithType: NSListAgent.DeleteAllFromListName
  fullName: CRMScript.NetServer.NSListAgent.DeleteAllFromListName
  type: Method
  summary: "\nMarks all items in the list deleted\n"
  remarks: 
  syntax: 
    content: Void DeleteAllFromListName(String udListDefinitionName)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nagent.DeleteAllFromListName(udListDefinitionName);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromListDefinition
  id: 'DeleteAllHeadingsFromListDefinition'
  so.intellisense: NSListAgent.DeleteAllHeadingsFromListDefinition
  langs:
  - crmscript
  name: 'DeleteAllHeadingsFromListDefinition'
  nameWithType: NSListAgent.DeleteAllHeadingsFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromListDefinition
  type: Method
  summary: "\nDelete all headings for list resolved by the provided id.\n"
  remarks: 
  syntax: 
    content: Void DeleteAllHeadingsFromListDefinition(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nagent.DeleteAllHeadingsFromListDefinition(id);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromName
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromName
  id: 'DeleteAllHeadingsFromName'
  so.intellisense: NSListAgent.DeleteAllHeadingsFromName
  langs:
  - crmscript
  name: 'DeleteAllHeadingsFromName'
  nameWithType: NSListAgent.DeleteAllHeadingsFromName
  fullName: CRMScript.NetServer.NSListAgent.DeleteAllHeadingsFromName
  type: Method
  summary: "\nDelete all headings for list resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: Void DeleteAllHeadingsFromName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nagent.DeleteAllHeadingsFromName(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteAppWebPanels
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteAppWebPanels
  id: 'DeleteAppWebPanels'
  so.intellisense: NSListAgent.DeleteAppWebPanels
  langs:
  - crmscript
  name: 'DeleteAppWebPanels'
  nameWithType: NSListAgent.DeleteAppWebPanels
  fullName: CRMScript.NetServer.NSListAgent.DeleteAppWebPanels
  type: Method
  summary: "\nPermanentely delete all web panels owned by your app; works in Online only, for registered Apps that send a valid ApplicationToken; otherwise nothing happens<p></p>\n<pre><code>NSListAgent agent;\nagent.DeleteAppWebPanels();</code></pre>\n"
  remarks: 
  syntax: 
    content: Void DeleteAppWebPanels()
    parameters:
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteAppWebPanels();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteDocumentTemplateLanguage
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteDocumentTemplateLanguage
  id: 'DeleteDocumentTemplateLanguage'
  so.intellisense: NSListAgent.DeleteDocumentTemplateLanguage
  langs:
  - crmscript
  name: 'DeleteDocumentTemplateLanguage'
  nameWithType: NSListAgent.DeleteDocumentTemplateLanguage
  fullName: CRMScript.NetServer.NSListAgent.DeleteDocumentTemplateLanguage
  type: Method
  summary: "\nDeletes language variant of the document template\n"
  remarks: 
  syntax: 
    content: Void DeleteDocumentTemplateLanguage(Integer documentTemplateId, String languageCode)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString languageCode;\nagent.DeleteDocumentTemplateLanguage(documentTemplateId, languageCode);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteFromListDefinition
  id: 'DeleteFromListDefinition'
  so.intellisense: NSListAgent.DeleteFromListDefinition
  langs:
  - crmscript
  name: 'DeleteFromListDefinition'
  nameWithType: NSListAgent.DeleteFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.DeleteFromListDefinition
  type: Method
  summary: "\nDelete a list item from the specified list defintion\n"
  remarks: 
  syntax: 
    content: Void DeleteFromListDefinition(Integer id, Integer udListDefinitionId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nInteger udListDefinitionId;\nagent.DeleteFromListDefinition(id, udListDefinitionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteFromListName
  id: 'DeleteFromListName'
  so.intellisense: NSListAgent.DeleteFromListName
  langs:
  - crmscript
  name: 'DeleteFromListName'
  nameWithType: NSListAgent.DeleteFromListName
  fullName: CRMScript.NetServer.NSListAgent.DeleteFromListName
  type: Method
  summary: "\nDelete a list item from the specified list defintion\n"
  remarks: 
  syntax: 
    content: Void DeleteFromListName(Integer id, String udListDefinitionName)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nString udListDefinitionName;\nagent.DeleteFromListName(id, udListDefinitionName);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteHierarchyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteHierarchyEntity
  id: 'DeleteHierarchyEntity'
  so.intellisense: NSListAgent.DeleteHierarchyEntity
  langs:
  - crmscript
  name: 'DeleteHierarchyEntity'
  nameWithType: NSListAgent.DeleteHierarchyEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteHierarchyEntity
  type: Method
  summary: "\nDeletes the NSHierarchyEntity\n"
  remarks: 
  syntax: 
    content: DeleteHierarchyEntity(Integer hierarchyEntity);
    parameters:
    - id: hierarchyEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: hierarchyEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteHierarchyEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteHierarchyFromPath
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteHierarchyFromPath
  id: 'DeleteHierarchyFromPath'
  so.intellisense: NSListAgent.DeleteHierarchyFromPath
  langs:
  - crmscript
  name: 'DeleteHierarchyFromPath'
  nameWithType: NSListAgent.DeleteHierarchyFromPath
  fullName: CRMScript.NetServer.NSListAgent.DeleteHierarchyFromPath
  type: Method
  summary: "\nRemove a hierarchy item and its children from a path\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = ExtraTables</li><li>Enum: 2 = ScreenDefinitions</li><li>Enum: 3 = Scripts</li><li>Enum: 4 = Selections</li><li>Enum: 5 = ExternalDocuments</li><li>Enum: 6 = UserGroups</li><li>Enum: 7 = ExternalDocumentRelatedToSpmMessage</li><li>Enum: 8 = Dashboards</li></ul>\n"
  syntax: 
    content: Void DeleteHierarchyFromPath(Integer domain, String path)
    parameters:
    - id: domain
      type: CRMScript.Global.Integer
      description: 
    - id: path
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger domain;\nString path;\nagent.DeleteHierarchyFromPath(domain, path);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteListEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteListEntity
  id: 'DeleteListEntity'
  so.intellisense: NSListAgent.DeleteListEntity
  langs:
  - crmscript
  name: 'DeleteListEntity'
  nameWithType: NSListAgent.DeleteListEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteListEntity
  type: Method
  summary: "\nDeletes the NSListEntity\n"
  remarks: 
  syntax: 
    content: DeleteListEntity(Integer listEntity);
    parameters:
    - id: listEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: listEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteListEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteListEntityByName
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteListEntityByName
  id: 'DeleteListEntityByName'
  so.intellisense: NSListAgent.DeleteListEntityByName
  langs:
  - crmscript
  name: 'DeleteListEntityByName'
  nameWithType: NSListAgent.DeleteListEntityByName
  fullName: CRMScript.NetServer.NSListAgent.DeleteListEntityByName
  type: Method
  summary: "\nDelete an NSListEntity resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: Void DeleteListEntityByName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nagent.DeleteListEntityByName(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteProjectStatus
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteProjectStatus
  id: 'DeleteProjectStatus'
  so.intellisense: NSListAgent.DeleteProjectStatus
  langs:
  - crmscript
  name: 'DeleteProjectStatus'
  nameWithType: NSListAgent.DeleteProjectStatus
  fullName: CRMScript.NetServer.NSListAgent.DeleteProjectStatus
  type: Method
  summary: "\nDeletes a project status\n"
  remarks: 
  syntax: 
    content: Void DeleteProjectStatus(Integer projectStatusId)
    parameters:
    - id: projectStatusId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger projectStatusId;\nagent.DeleteProjectStatus(projectStatusId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteResourceEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteResourceEntity
  id: 'DeleteResourceEntity'
  so.intellisense: NSListAgent.DeleteResourceEntity
  langs:
  - crmscript
  name: 'DeleteResourceEntity'
  nameWithType: NSListAgent.DeleteResourceEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteResourceEntity
  type: Method
  summary: "\nDeletes the NSResourceEntity<p></p>\n<ul><li><strong>ResourceEntityId</strong>The identity of the ResourceEntity to delete.</li></ul><pre><code>NSListAgent agent;\nagent.DeleteResourceEntity(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: DeleteResourceEntity(Integer resourceEntity);
    parameters:
    - id: resourceEntity;
      type: CRMScript.Global.Integer
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteResourceEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteTicketCategoryEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteTicketCategoryEntity
  id: 'DeleteTicketCategoryEntity'
  so.intellisense: NSListAgent.DeleteTicketCategoryEntity
  langs:
  - crmscript
  name: 'DeleteTicketCategoryEntity'
  nameWithType: NSListAgent.DeleteTicketCategoryEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteTicketCategoryEntity
  type: Method
  summary: "\nDeletes the NSTicketCategoryEntity\n"
  remarks: 
  syntax: 
    content: DeleteTicketCategoryEntity(Integer ticketCategoryEntity);
    parameters:
    - id: ticketCategoryEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketCategoryEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteTicketCategoryEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteTicketPriorityEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteTicketPriorityEntity
  id: 'DeleteTicketPriorityEntity'
  so.intellisense: NSListAgent.DeleteTicketPriorityEntity
  langs:
  - crmscript
  name: 'DeleteTicketPriorityEntity'
  nameWithType: NSListAgent.DeleteTicketPriorityEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteTicketPriorityEntity
  type: Method
  summary: "\nDeletes the NSTicketPriorityEntity\n"
  remarks: 
  syntax: 
    content: DeleteTicketPriorityEntity(Integer ticketPriorityEntity);
    parameters:
    - id: ticketPriorityEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketPriorityEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteTicketPriorityEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteTicketStatusEntity
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteTicketStatusEntity
  id: 'DeleteTicketStatusEntity'
  so.intellisense: NSListAgent.DeleteTicketStatusEntity
  langs:
  - crmscript
  name: 'DeleteTicketStatusEntity'
  nameWithType: NSListAgent.DeleteTicketStatusEntity
  fullName: CRMScript.NetServer.NSListAgent.DeleteTicketStatusEntity
  type: Method
  summary: "\nDeletes the NSTicketStatusEntity\n"
  remarks: 
  syntax: 
    content: DeleteTicketStatusEntity(Integer ticketStatusEntity);
    parameters:
    - id: ticketStatusEntity;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketStatusEntityId
      type: 
      description: 
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.DeleteTicketStatusEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.DeleteWebPanel
  commentId: M:CRMScript.NetServer.NSListAgent.DeleteWebPanel
  id: 'DeleteWebPanel'
  so.intellisense: NSListAgent.DeleteWebPanel
  langs:
  - crmscript
  name: 'DeleteWebPanel'
  nameWithType: NSListAgent.DeleteWebPanel
  fullName: CRMScript.NetServer.NSListAgent.DeleteWebPanel
  type: Method
  summary: "\nHard-delete (real, permanent DELETE in the database) the given web panel. Use with care!\n"
  remarks: 
  syntax: 
    content: Void DeleteWebPanel(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nagent.DeleteWebPanel(id);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GenerateNavigationUrl
  commentId: M:CRMScript.NetServer.NSListAgent.GenerateNavigationUrl
  id: 'GenerateNavigationUrl'
  so.intellisense: NSListAgent.GenerateNavigationUrl
  langs:
  - crmscript
  name: 'GenerateNavigationUrl'
  nameWithType: NSListAgent.GenerateNavigationUrl
  fullName: CRMScript.NetServer.NSListAgent.GenerateNavigationUrl
  type: Method
  summary: "\nThis methods generates the navigation URL to be used to navigate to the panel\n"
  remarks: "\n<h3>Enum: visibleIn</h3><ul><li>0 = Invisible</li><li>1 = ToolboxMenu</li><li>2 = NavigatorButton</li><li>3 = ViewMenu</li><li>4 = SelectionTaskCard</li><li>5 = ContactCard</li><li>6 = ContactArchive</li><li>7 = ProjectCard</li><li>8 = ProjectArchive</li><li>9 = SaleCard</li><li>10 = PersonCard</li><li>11 = ActivityDialog</li><li>12 = DocumentDialog</li><li>13 = BrowserPanel</li><li>14 = ContSelectionTask</li><li>15 = AppntSelectionTask</li><li>16 = SaleSelectionTask</li><li>17 = DocSelectionTask</li><li>18 = ProjSelectionTask</li><li>19 = CompanyMinicard</li><li>20 = ProjectMinicard</li><li>21 = DiaryMinicard</li><li>22 = SelectionMinicard</li><li>23 = ButtonPanelTask</li><li>24 = AppointmentDialogTask</li><li>25 = SaleDialogTask</li><li>26 = DocumentDialogTask</li><li>27 = PersonDialogTask</li><li>28 = SaleMinicard</li><li>29 = SaleArchive</li><li>30 = AppntSelectionShadowTask</li><li>31 = SaleSelectionShadowTask</li><li>32 = DocSelectionShadowTask</li><li>33 = ProjSelectionShadowTask</li><li>34 = DiaryArchive</li><li>35 = SelectionContactArchive</li><li>36 = SelectionProjectArchive</li><li>37 = SelectionSaleArchive</li><li>38 = SelectionAppointmentArchive</li><li>39 = SelectionDocumentArchive</li><li>40 = ContSelectionCustomTask</li><li>41 = AppntSelectionCustomTask</li><li>42 = SaleSelectionCustomTask</li><li>43 = DocSelectionCustomTask</li><li>44 = ProjSelectionCustomTask</li><li>45 = CustomArchiveMiniCard</li><li>46 = SelectionCard</li><li>47 = ReportMinicard</li><li>48 = QuoteDialog</li><li>49 = QuoteDialogTask</li><li>50 = QuoteDialogArchive</li><li>51 = QuoteLineDialogTask</li><li>52 = QuoteLineDialog</li><li>53 = QuoteLineSelectionMainTask</li><li>54 = QuoteLineSelectionShadowTask</li><li>55 = SelectionQuoteLineArchive</li><li>56 = QuoteLineSelectionCustomTask</li><li>57 = FindSystem</li><li>58 = MailingSelectionTask</li><li>59 = ContactSelectionMailingsTask</li><li>60 = AppointmentSelectionMailingsTask</li><li>61 = SaleSelectionMailingsTask</li><li>62 = DocumentSelectionMailingsTask</li><li>63 = ProjectSelectionMailingsTask</li><li>64 = QuoteLineSelectionMailingsTask</li><li>65 = TopPanelNewMenu</li><li>66 = Dashboard</li><li>67 = PersonArchive</li><li>68 = PersonMinicard</li><li>69 = CompanyCardTask</li><li>70 = ProjectCardTask</li></ul>\n"
  syntax: 
    content: String GenerateNavigationUrl(Integer visibleIn, String windowName)
    parameters:
    - id: visibleIn
      type: CRMScript.Global.Integer
      description: 
    - id: windowName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger visibleIn;\nString windowName;\nString res = agent.GenerateNavigationUrl(visibleIn, windowName);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllCountries
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllCountries
  id: 'GetAllCountries'
  so.intellisense: NSListAgent.GetAllCountries
  langs:
  - crmscript
  name: 'GetAllCountries'
  nameWithType: NSListAgent.GetAllCountries
  fullName: CRMScript.NetServer.NSListAgent.GetAllCountries
  type: Method
  summary: "\nReturns all available countries a contact or person could belong to.\n"
  remarks: 
  syntax: 
    content: NSCountry[] GetAllCountries(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSCountry[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSCountry[] res = agent.GetAllCountries(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllCurrencies
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllCurrencies
  id: 'GetAllCurrencies'
  so.intellisense: NSListAgent.GetAllCurrencies
  langs:
  - crmscript
  name: 'GetAllCurrencies'
  nameWithType: NSListAgent.GetAllCurrencies
  fullName: CRMScript.NetServer.NSListAgent.GetAllCurrencies
  type: Method
  summary: "\nReturns all currencies\n"
  remarks: 
  syntax: 
    content: NSCurrencyEntity[] GetAllCurrencies(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSCurrencyEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSCurrencyEntity[] res = agent.GetAllCurrencies(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllDocumentTemplates
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllDocumentTemplates
  id: 'GetAllDocumentTemplates'
  so.intellisense: NSListAgent.GetAllDocumentTemplates
  langs:
  - crmscript
  name: 'GetAllDocumentTemplates'
  nameWithType: NSListAgent.GetAllDocumentTemplates
  fullName: CRMScript.NetServer.NSListAgent.GetAllDocumentTemplates
  type: Method
  summary: "\nReturns all templates\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity[] GetAllDocumentTemplates(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSDocumentTemplateEntity[] res = agent.GetAllDocumentTemplates(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllDomains
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllDomains
  id: 'GetAllDomains'
  so.intellisense: NSListAgent.GetAllDomains
  langs:
  - crmscript
  name: 'GetAllDomains'
  nameWithType: NSListAgent.GetAllDomains
  fullName: CRMScript.NetServer.NSListAgent.GetAllDomains
  type: Method
  summary: "\nGet list of all domains<p></p>\n<strong>Returns:</strong>Domain types (scripts, extra tables, etc)<p></p>\n<pre><code>NSListAgent agent;\nInteger[] res = agent.GetAllDomains();</code></pre>\n"
  remarks: 
  syntax: 
    content: Integer[] GetAllDomains()
    parameters:
    return:
      type: CRMScript.Global.Integer[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger[] res = agent.GetAllDomains();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllFromListDefinition
  id: 'GetAllFromListDefinition'
  so.intellisense: NSListAgent.GetAllFromListDefinition
  langs:
  - crmscript
  name: 'GetAllFromListDefinition'
  nameWithType: NSListAgent.GetAllFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.GetAllFromListDefinition
  type: Method
  summary: "\nGet all list items for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity[] GetAllFromListDefinition(Integer udListDefinitionId, Bool includeDeleted)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nBool includeDeleted;\nNSListItemEntity[] res = agent.GetAllFromListDefinition(udListDefinitionId, includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllFromListName
  id: 'GetAllFromListName'
  so.intellisense: NSListAgent.GetAllFromListName
  langs:
  - crmscript
  name: 'GetAllFromListName'
  nameWithType: NSListAgent.GetAllFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetAllFromListName
  type: Method
  summary: "\nGet all list items for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity[] GetAllFromListName(String udListDefinitionName, Bool includeDeleted)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nBool includeDeleted;\nNSListItemEntity[] res = agent.GetAllFromListName(udListDefinitionName, includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllInDomain
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllInDomain
  id: 'GetAllInDomain'
  so.intellisense: NSListAgent.GetAllInDomain
  langs:
  - crmscript
  name: 'GetAllInDomain'
  nameWithType: NSListAgent.GetAllInDomain
  fullName: CRMScript.NetServer.NSListAgent.GetAllInDomain
  type: Method
  summary: "\nGet all items in a domain\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = ExtraTables</li><li>Enum: 2 = ScreenDefinitions</li><li>Enum: 3 = Scripts</li><li>Enum: 4 = Selections</li><li>Enum: 5 = ExternalDocuments</li><li>Enum: 6 = UserGroups</li><li>Enum: 7 = ExternalDocumentRelatedToSpmMessage</li><li>Enum: 8 = Dashboards</li></ul>\n"
  syntax: 
    content: NSHierarchyEntity[] GetAllInDomain(Integer domain, Bool children)
    parameters:
    - id: domain
      type: CRMScript.Global.Integer
      description: 
    - id: children
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger domain;\nBool children;\nNSHierarchyEntity[] res = agent.GetAllInDomain(domain, children);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllSaleStages
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllSaleStages
  id: 'GetAllSaleStages'
  so.intellisense: NSListAgent.GetAllSaleStages
  langs:
  - crmscript
  name: 'GetAllSaleStages'
  nameWithType: NSListAgent.GetAllSaleStages
  fullName: CRMScript.NetServer.NSListAgent.GetAllSaleStages
  type: Method
  summary: "\nReturns all ratings\n"
  remarks: 
  syntax: 
    content: NSSaleStageEntity[] GetAllSaleStages(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSSaleStageEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSSaleStageEntity[] res = agent.GetAllSaleStages(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllSaleType
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllSaleType
  id: 'GetAllSaleType'
  so.intellisense: NSListAgent.GetAllSaleType
  langs:
  - crmscript
  name: 'GetAllSaleType'
  nameWithType: NSListAgent.GetAllSaleType
  fullName: CRMScript.NetServer.NSListAgent.GetAllSaleType
  type: Method
  summary: "\nReturns all sale types as simple list items<p></p>\n<strong>Returns:</strong>NSSaleType[]<p></p>\n<pre><code>NSListAgent agent;\nNSSaleType[] res = agent.GetAllSaleType();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSaleType[] GetAllSaleType()
    parameters:
    return:
      type: CRMScript.NetServer.NSSaleType[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleType[] res = agent.GetAllSaleType();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllSaleTypeEntities
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllSaleTypeEntities
  id: 'GetAllSaleTypeEntities'
  so.intellisense: NSListAgent.GetAllSaleTypeEntities
  langs:
  - crmscript
  name: 'GetAllSaleTypeEntities'
  nameWithType: NSListAgent.GetAllSaleTypeEntities
  fullName: CRMScript.NetServer.NSListAgent.GetAllSaleTypeEntities
  type: Method
  summary: "\nReturns all sale types as entities with stakeholders, guide and quote properties\n"
  remarks: 
  syntax: 
    content: NSSaleTypeEntity[] GetAllSaleTypeEntities(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSSaleTypeEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSSaleTypeEntity[] res = agent.GetAllSaleTypeEntities(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllTasks
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllTasks
  id: 'GetAllTasks'
  so.intellisense: NSListAgent.GetAllTasks
  langs:
  - crmscript
  name: 'GetAllTasks'
  nameWithType: NSListAgent.GetAllTasks
  fullName: CRMScript.NetServer.NSListAgent.GetAllTasks
  type: Method
  summary: "\nReturns all appointment tasks\n"
  remarks: 
  syntax: 
    content: NSTaskListItem[] GetAllTasks(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSTaskListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSTaskListItem[] res = agent.GetAllTasks(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAllTicketPriorities
  commentId: M:CRMScript.NetServer.NSListAgent.GetAllTicketPriorities
  id: 'GetAllTicketPriorities'
  so.intellisense: NSListAgent.GetAllTicketPriorities
  langs:
  - crmscript
  name: 'GetAllTicketPriorities'
  nameWithType: NSListAgent.GetAllTicketPriorities
  fullName: CRMScript.NetServer.NSListAgent.GetAllTicketPriorities
  type: Method
  summary: "\nReturns all available ticket priorities.\n"
  remarks: 
  syntax: 
    content: NSTicketPriorityEntity[] GetAllTicketPriorities(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSTicketPriorityEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSTicketPriorityEntity[] res = agent.GetAllTicketPriorities(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAmountClassEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetAmountClassEntity
  id: 'GetAmountClassEntity'
  so.intellisense: NSListAgent.GetAmountClassEntity
  langs:
  - crmscript
  name: 'GetAmountClassEntity'
  nameWithType: NSListAgent.GetAmountClassEntity
  fullName: CRMScript.NetServer.NSListAgent.GetAmountClassEntity
  type: Method
  summary: "\nGets an NSAmountClassEntity object.\n"
  remarks: 
  syntax: 
    content: NSAmountClassEntity GetAmountClassEntity(Integer amountClassEntityId);
    parameters:
    - id: amountClassEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: amountClassEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSAmountClassEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSAmountClassEntity thing = agent.GetAmountClassEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetAppWebPanels
  commentId: M:CRMScript.NetServer.NSListAgent.GetAppWebPanels
  id: 'GetAppWebPanels'
  so.intellisense: NSListAgent.GetAppWebPanels
  langs:
  - crmscript
  name: 'GetAppWebPanels'
  nameWithType: NSListAgent.GetAppWebPanels
  fullName: CRMScript.NetServer.NSListAgent.GetAppWebPanels
  type: Method
  summary: "\nGet all web panels owned by your app; works in Online only, for registered Apps that send a valid ApplicationToken<p></p>\n<strong>Returns:</strong>NSWebPanelEntity[]<p></p>\n<pre><code>NSListAgent agent;\nNSWebPanelEntity[] res = agent.GetAppWebPanels();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity[] GetAppWebPanels()
    parameters:
    return:
      type: CRMScript.NetServer.NSWebPanelEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSWebPanelEntity[] res = agent.GetAppWebPanels();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetBaseCurrency
  commentId: M:CRMScript.NetServer.NSListAgent.GetBaseCurrency
  id: 'GetBaseCurrency'
  so.intellisense: NSListAgent.GetBaseCurrency
  langs:
  - crmscript
  name: 'GetBaseCurrency'
  nameWithType: NSListAgent.GetBaseCurrency
  fullName: CRMScript.NetServer.NSListAgent.GetBaseCurrency
  type: Method
  summary: "\nGet the base currency, used for calculating exchange rates<p></p>\n<strong>Returns:</strong>NSCurrencyEntity<p></p>\n<pre><code>NSListAgent agent;\nNSCurrencyEntity res = agent.GetBaseCurrency();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrencyEntity GetBaseCurrency()
    parameters:
    return:
      type: CRMScript.NetServer.NSCurrencyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrencyEntity res = agent.GetBaseCurrency();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetBusiness
  commentId: M:CRMScript.NetServer.NSListAgent.GetBusiness
  id: 'GetBusiness'
  so.intellisense: NSListAgent.GetBusiness
  langs:
  - crmscript
  name: 'GetBusiness'
  nameWithType: NSListAgent.GetBusiness
  fullName: CRMScript.NetServer.NSListAgent.GetBusiness
  type: Method
  summary: "\nGets an NSBusiness object.\n"
  remarks: 
  syntax: 
    content: NSBusiness GetBusiness(Integer businessId);
    parameters:
    - id: businessId;
      type: CRMScript.Global.Integer
      description: 
    - id: businessId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSBusiness
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSBusiness thing = agent.GetBusiness(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetBusinesses
  commentId: M:CRMScript.NetServer.NSListAgent.GetBusinesses
  id: 'GetBusinesses'
  so.intellisense: NSListAgent.GetBusinesses
  langs:
  - crmscript
  name: 'GetBusinesses'
  nameWithType: NSListAgent.GetBusinesses
  fullName: CRMScript.NetServer.NSListAgent.GetBusinesses
  type: Method
  summary: "\nReturns all available businesses that a contact could have.<p></p>\n<strong>Returns:</strong>NSBusiness[]<p></p>\n<pre><code>NSListAgent agent;\nNSBusiness[] res = agent.GetBusinesses();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSBusiness[] GetBusinesses()
    parameters:
    return:
      type: CRMScript.NetServer.NSBusiness[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSBusiness[] res = agent.GetBusinesses();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetBusinessList
  commentId: M:CRMScript.NetServer.NSListAgent.GetBusinessList
  id: 'GetBusinessList'
  so.intellisense: NSListAgent.GetBusinessList
  langs:
  - crmscript
  name: 'GetBusinessList'
  nameWithType: NSListAgent.GetBusinessList
  fullName: CRMScript.NetServer.NSListAgent.GetBusinessList
  type: Method
  summary: "\nGets a vector of NSBusiness objects.\n"
  remarks: 
  syntax: 
    content: NSBusiness[] GetBusinessList(Integer[]  businessIds);
    parameters:
    - id: businessIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: businessIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSBusiness[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSBusiness[] list = agent.GetBusinessList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCategories
  commentId: M:CRMScript.NetServer.NSListAgent.GetCategories
  id: 'GetCategories'
  so.intellisense: NSListAgent.GetCategories
  langs:
  - crmscript
  name: 'GetCategories'
  nameWithType: NSListAgent.GetCategories
  fullName: CRMScript.NetServer.NSListAgent.GetCategories
  type: Method
  summary: "\nReturns all categories a contact could belong to<p></p>\n<strong>Returns:</strong>NSCategory[]<p></p>\n<pre><code>NSListAgent agent;\nNSCategory[] res = agent.GetCategories();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCategory[] GetCategories()
    parameters:
    return:
      type: CRMScript.NetServer.NSCategory[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCategory[] res = agent.GetCategories();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCategory
  commentId: M:CRMScript.NetServer.NSListAgent.GetCategory
  id: 'GetCategory'
  so.intellisense: NSListAgent.GetCategory
  langs:
  - crmscript
  name: 'GetCategory'
  nameWithType: NSListAgent.GetCategory
  fullName: CRMScript.NetServer.NSListAgent.GetCategory
  type: Method
  summary: "\nGets an NSCategory object.\n"
  remarks: 
  syntax: 
    content: NSCategory GetCategory(Integer categoryId);
    parameters:
    - id: categoryId;
      type: CRMScript.Global.Integer
      description: 
    - id: categoryId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCategory
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCategory thing = agent.GetCategory(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCategoryList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCategoryList
  id: 'GetCategoryList'
  so.intellisense: NSListAgent.GetCategoryList
  langs:
  - crmscript
  name: 'GetCategoryList'
  nameWithType: NSListAgent.GetCategoryList
  fullName: CRMScript.NetServer.NSListAgent.GetCategoryList
  type: Method
  summary: "\nGets a vector of NSCategory objects.\n"
  remarks: 
  syntax: 
    content: NSCategory[] GetCategoryList(Integer[]  categoryIds);
    parameters:
    - id: categoryIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: categoryIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCategory[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCategory[] res = agent.GetCategoryList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCompetitor
  commentId: M:CRMScript.NetServer.NSListAgent.GetCompetitor
  id: 'GetCompetitor'
  so.intellisense: NSListAgent.GetCompetitor
  langs:
  - crmscript
  name: 'GetCompetitor'
  nameWithType: NSListAgent.GetCompetitor
  fullName: CRMScript.NetServer.NSListAgent.GetCompetitor
  type: Method
  summary: "\nGets an NSCompetitor object.\n"
  remarks: 
  syntax: 
    content: NSCompetitor GetCompetitor(Integer competitorId);
    parameters:
    - id: competitorId;
      type: CRMScript.Global.Integer
      description: 
    - id: competitorId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCompetitor
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCompetitor thing = agent.GetCompetitor(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCompetitorList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCompetitorList
  id: 'GetCompetitorList'
  so.intellisense: NSListAgent.GetCompetitorList
  langs:
  - crmscript
  name: 'GetCompetitorList'
  nameWithType: NSListAgent.GetCompetitorList
  fullName: CRMScript.NetServer.NSListAgent.GetCompetitorList
  type: Method
  summary: "\nGets a vector of NSCompetitor objects.\n"
  remarks: 
  syntax: 
    content: NSCompetitor[] GetCompetitorList(Integer[]  competitorIds);
    parameters:
    - id: competitorIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: competitorIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCompetitor[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCompetitor[] res = agent.GetCompetitorList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCompetitors
  commentId: M:CRMScript.NetServer.NSListAgent.GetCompetitors
  id: 'GetCompetitors'
  so.intellisense: NSListAgent.GetCompetitors
  langs:
  - crmscript
  name: 'GetCompetitors'
  nameWithType: NSListAgent.GetCompetitors
  fullName: CRMScript.NetServer.NSListAgent.GetCompetitors
  type: Method
  summary: "\nReturns all competitors<p></p>\n<strong>Returns:</strong>NSCompetitor[]<p></p>\n<pre><code>NSListAgent agent;\nNSCompetitor[] res = agent.GetCompetitors();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCompetitor[] GetCompetitors()
    parameters:
    return:
      type: CRMScript.NetServer.NSCompetitor[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCompetitor[] res = agent.GetCompetitors();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentPurpose
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentPurpose
  id: 'GetConsentPurpose'
  so.intellisense: NSListAgent.GetConsentPurpose
  langs:
  - crmscript
  name: 'GetConsentPurpose'
  nameWithType: NSListAgent.GetConsentPurpose
  fullName: CRMScript.NetServer.NSListAgent.GetConsentPurpose
  type: Method
  summary: "\nGets an NSConsentPurpose object.\n"
  remarks: 
  syntax: 
    content: NSConsentPurpose GetConsentPurpose(Integer consentPurposeId);
    parameters:
    - id: consentPurposeId;
      type: CRMScript.Global.Integer
      description: 
    - id: consentPurposeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSConsentPurpose
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentPurpose thing = agent.GetConsentPurpose(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentPurposeList
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentPurposeList
  id: 'GetConsentPurposeList'
  so.intellisense: NSListAgent.GetConsentPurposeList
  langs:
  - crmscript
  name: 'GetConsentPurposeList'
  nameWithType: NSListAgent.GetConsentPurposeList
  fullName: CRMScript.NetServer.NSListAgent.GetConsentPurposeList
  type: Method
  summary: "\nGets a vector of NSConsentPurpose objects.\n"
  remarks: 
  syntax: 
    content: NSConsentPurpose[] GetConsentPurposeList(Integer[]  consentPurposeIds);
    parameters:
    - id: consentPurposeIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: consentPurposeIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSConsentPurpose[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSConsentPurpose[] res = agent.GetConsentPurposeList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentPurposes
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentPurposes
  id: 'GetConsentPurposes'
  so.intellisense: NSListAgent.GetConsentPurposes
  langs:
  - crmscript
  name: 'GetConsentPurposes'
  nameWithType: NSListAgent.GetConsentPurposes
  fullName: CRMScript.NetServer.NSListAgent.GetConsentPurposes
  type: Method
  summary: "\nReturns all defined purposes.<p></p>\n<strong>Returns:</strong>NSConsentPurpose[]<p></p>\n<pre><code>NSListAgent agent;\nNSConsentPurpose[] res = agent.GetConsentPurposes();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSConsentPurpose[] GetConsentPurposes()
    parameters:
    return:
      type: CRMScript.NetServer.NSConsentPurpose[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentPurpose[] res = agent.GetConsentPurposes();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentSource
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentSource
  id: 'GetConsentSource'
  so.intellisense: NSListAgent.GetConsentSource
  langs:
  - crmscript
  name: 'GetConsentSource'
  nameWithType: NSListAgent.GetConsentSource
  fullName: CRMScript.NetServer.NSListAgent.GetConsentSource
  type: Method
  summary: "\nGets an NSConsentSource object.\n"
  remarks: 
  syntax: 
    content: NSConsentSource GetConsentSource(Integer consentSourceId);
    parameters:
    - id: consentSourceId;
      type: CRMScript.Global.Integer
      description: 
    - id: consentSourceId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSConsentSource
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentSource thing = agent.GetConsentSource(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentSourceList
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentSourceList
  id: 'GetConsentSourceList'
  so.intellisense: NSListAgent.GetConsentSourceList
  langs:
  - crmscript
  name: 'GetConsentSourceList'
  nameWithType: NSListAgent.GetConsentSourceList
  fullName: CRMScript.NetServer.NSListAgent.GetConsentSourceList
  type: Method
  summary: "\nGets a vector of NSConsentSource objects.\n"
  remarks: 
  syntax: 
    content: NSConsentSource[] GetConsentSourceList(Integer[]  consentSourceIds);
    parameters:
    - id: consentSourceIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: consentSourceIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSConsentSource[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSConsentSource[] res = agent.GetConsentSourceList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetConsentSources
  commentId: M:CRMScript.NetServer.NSListAgent.GetConsentSources
  id: 'GetConsentSources'
  so.intellisense: NSListAgent.GetConsentSources
  langs:
  - crmscript
  name: 'GetConsentSources'
  nameWithType: NSListAgent.GetConsentSources
  fullName: CRMScript.NetServer.NSListAgent.GetConsentSources
  type: Method
  summary: "\nReturns all defined Sources.<p></p>\n<strong>Returns:</strong>NSConsentSource[]<p></p>\n<pre><code>NSListAgent agent;\nNSConsentSource[] res = agent.GetConsentSources();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSConsentSource[] GetConsentSources()
    parameters:
    return:
      type: CRMScript.NetServer.NSConsentSource[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentSource[] res = agent.GetConsentSources();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCountries
  commentId: M:CRMScript.NetServer.NSListAgent.GetCountries
  id: 'GetCountries'
  so.intellisense: NSListAgent.GetCountries
  langs:
  - crmscript
  name: 'GetCountries'
  nameWithType: NSListAgent.GetCountries
  fullName: CRMScript.NetServer.NSListAgent.GetCountries
  type: Method
  summary: "\nReturns all available countries a contact or person could belong to.<p></p>\n<strong>Returns:</strong>NSCountry[]<p></p>\n<pre><code>NSListAgent agent;\nNSCountry[] res = agent.GetCountries();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCountry[] GetCountries()
    parameters:
    return:
      type: CRMScript.NetServer.NSCountry[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCountry[] res = agent.GetCountries();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCountry
  commentId: M:CRMScript.NetServer.NSListAgent.GetCountry
  id: 'GetCountry'
  so.intellisense: NSListAgent.GetCountry
  langs:
  - crmscript
  name: 'GetCountry'
  nameWithType: NSListAgent.GetCountry
  fullName: CRMScript.NetServer.NSListAgent.GetCountry
  type: Method
  summary: "\nGets an NSCountry object.\n"
  remarks: 
  syntax: 
    content: NSCountry GetCountry(Integer countryId);
    parameters:
    - id: countryId;
      type: CRMScript.Global.Integer
      description: 
    - id: countryId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCountry
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCountry thing = agent.GetCountry(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCountryList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCountryList
  id: 'GetCountryList'
  so.intellisense: NSListAgent.GetCountryList
  langs:
  - crmscript
  name: 'GetCountryList'
  nameWithType: NSListAgent.GetCountryList
  fullName: CRMScript.NetServer.NSListAgent.GetCountryList
  type: Method
  summary: "\nGets a vector of NSCountry objects.\n"
  remarks: 
  syntax: 
    content: NSCountry[] GetCountryList(Integer[]  countryIds);
    parameters:
    - id: countryIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: countryIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCountry[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCountry[] res = agent.GetCountryList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCredited
  commentId: M:CRMScript.NetServer.NSListAgent.GetCredited
  id: 'GetCredited'
  so.intellisense: NSListAgent.GetCredited
  langs:
  - crmscript
  name: 'GetCredited'
  nameWithType: NSListAgent.GetCredited
  fullName: CRMScript.NetServer.NSListAgent.GetCredited
  type: Method
  summary: "\nGets an NSCredited object.\n"
  remarks: 
  syntax: 
    content: NSCredited GetCredited(Integer creditedId);
    parameters:
    - id: creditedId;
      type: CRMScript.Global.Integer
      description: 
    - id: creditedId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCredited
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCredited thing = agent.GetCredited(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCreditedList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCreditedList
  id: 'GetCreditedList'
  so.intellisense: NSListAgent.GetCreditedList
  langs:
  - crmscript
  name: 'GetCreditedList'
  nameWithType: NSListAgent.GetCreditedList
  fullName: CRMScript.NetServer.NSListAgent.GetCreditedList
  type: Method
  summary: "\nGets a vector of NSCredited objects.\n"
  remarks: 
  syntax: 
    content: NSCredited[] GetCreditedList(Integer[]  creditedIds);
    parameters:
    - id: creditedIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: creditedIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCredited[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCredited[] res = agent.GetCreditedList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCrediteds
  commentId: M:CRMScript.NetServer.NSListAgent.GetCrediteds
  id: 'GetCrediteds'
  so.intellisense: NSListAgent.GetCrediteds
  langs:
  - crmscript
  name: 'GetCrediteds'
  nameWithType: NSListAgent.GetCrediteds
  fullName: CRMScript.NetServer.NSListAgent.GetCrediteds
  type: Method
  summary: "\nReturns all credited\n"
  remarks: 
  syntax: 
    content: NSCredited[] GetCrediteds()
    parameters:
    return:
      type: CRMScript.NetServer.NSCredited[]
  example: 
- uid: CRMScript.NetServer.NSListAgent.GetCurrencies
  commentId: M:CRMScript.NetServer.NSListAgent.GetCurrencies
  id: 'GetCurrencies'
  so.intellisense: NSListAgent.GetCurrencies
  langs:
  - crmscript
  name: 'GetCurrencies'
  nameWithType: NSListAgent.GetCurrencies
  fullName: CRMScript.NetServer.NSListAgent.GetCurrencies
  type: Method
  summary: "\nReturns all currencies<p></p>\n<strong>Returns:</strong>NSCurrency[]<p></p>\n<pre><code>NSListAgent agent;\nNSCurrency[] res = agent.GetCurrencies();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrency[] GetCurrencies()
    parameters:
    return:
      type: CRMScript.NetServer.NSCurrency[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrency[] res = agent.GetCurrencies();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCurrency
  commentId: M:CRMScript.NetServer.NSListAgent.GetCurrency
  id: 'GetCurrency'
  so.intellisense: NSListAgent.GetCurrency
  langs:
  - crmscript
  name: 'GetCurrency'
  nameWithType: NSListAgent.GetCurrency
  fullName: CRMScript.NetServer.NSListAgent.GetCurrency
  type: Method
  summary: "\nGets an NSCurrency object.\n"
  remarks: 
  syntax: 
    content: NSCurrency GetCurrency(Integer currencyId);
    parameters:
    - id: currencyId;
      type: CRMScript.Global.Integer
      description: 
    - id: currencyId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCurrency
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrency thing = agent.GetCurrency(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCurrencyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetCurrencyEntity
  id: 'GetCurrencyEntity'
  so.intellisense: NSListAgent.GetCurrencyEntity
  langs:
  - crmscript
  name: 'GetCurrencyEntity'
  nameWithType: NSListAgent.GetCurrencyEntity
  fullName: CRMScript.NetServer.NSListAgent.GetCurrencyEntity
  type: Method
  summary: "\nGets an NSCurrencyEntity object.\n"
  remarks: 
  syntax: 
    content: NSCurrencyEntity GetCurrencyEntity(Integer currencyEntityId);
    parameters:
    - id: currencyEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: currencyEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCurrencyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrencyEntity thing = agent.GetCurrencyEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCurrencyList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCurrencyList
  id: 'GetCurrencyList'
  so.intellisense: NSListAgent.GetCurrencyList
  langs:
  - crmscript
  name: 'GetCurrencyList'
  nameWithType: NSListAgent.GetCurrencyList
  fullName: CRMScript.NetServer.NSListAgent.GetCurrencyList
  type: Method
  summary: "\nGets a vector of NSCurrency objects.\n"
  remarks: 
  syntax: 
    content: NSCurrency[] GetCurrencyList(Integer[]  currencyIds);
    parameters:
    - id: currencyIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: currencyIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCurrency[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCurrency[] res = agent.GetCurrencyList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCustomerLanguage
  commentId: M:CRMScript.NetServer.NSListAgent.GetCustomerLanguage
  id: 'GetCustomerLanguage'
  so.intellisense: NSListAgent.GetCustomerLanguage
  langs:
  - crmscript
  name: 'GetCustomerLanguage'
  nameWithType: NSListAgent.GetCustomerLanguage
  fullName: CRMScript.NetServer.NSListAgent.GetCustomerLanguage
  type: Method
  summary: "\nGets an NSCustomerLanguage object.\n"
  remarks: 
  syntax: 
    content: NSCustomerLanguage GetCustomerLanguage(Integer customerLanguageId);
    parameters:
    - id: customerLanguageId;
      type: CRMScript.Global.Integer
      description: 
    - id: customerLanguageId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCustomerLanguage
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCustomerLanguage thing = agent.GetCustomerLanguage(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCustomerLanguageList
  commentId: M:CRMScript.NetServer.NSListAgent.GetCustomerLanguageList
  id: 'GetCustomerLanguageList'
  so.intellisense: NSListAgent.GetCustomerLanguageList
  langs:
  - crmscript
  name: 'GetCustomerLanguageList'
  nameWithType: NSListAgent.GetCustomerLanguageList
  fullName: CRMScript.NetServer.NSListAgent.GetCustomerLanguageList
  type: Method
  summary: "\nGets a vector of NSCustomerLanguage objects.\n"
  remarks: 
  syntax: 
    content: NSCustomerLanguage[] GetCustomerLanguageList(Integer[]  customerLanguageIds);
    parameters:
    - id: customerLanguageIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: customerLanguageIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSCustomerLanguage[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSCustomerLanguage[] res = agent.GetCustomerLanguageList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetCustomerLanguages
  commentId: M:CRMScript.NetServer.NSListAgent.GetCustomerLanguages
  id: 'GetCustomerLanguages'
  so.intellisense: NSListAgent.GetCustomerLanguages
  langs:
  - crmscript
  name: 'GetCustomerLanguages'
  nameWithType: NSListAgent.GetCustomerLanguages
  fullName: CRMScript.NetServer.NSListAgent.GetCustomerLanguages
  type: Method
  summary: "\n<strong>Returns:</strong>NSCustomerLanguage[]<p></p>\n<pre><code>NSListAgent agent;\nNSCustomerLanguage[] res = agent.GetCustomerLanguages();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCustomerLanguage[] GetCustomerLanguages()
    parameters:
    return:
      type: CRMScript.NetServer.NSCustomerLanguage[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCustomerLanguage[] res = agent.GetCustomerLanguages();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDeliveryTerm
  commentId: M:CRMScript.NetServer.NSListAgent.GetDeliveryTerm
  id: 'GetDeliveryTerm'
  so.intellisense: NSListAgent.GetDeliveryTerm
  langs:
  - crmscript
  name: 'GetDeliveryTerm'
  nameWithType: NSListAgent.GetDeliveryTerm
  fullName: CRMScript.NetServer.NSListAgent.GetDeliveryTerm
  type: Method
  summary: "\nGets an NSDeliveryTerm object.\n"
  remarks: 
  syntax: 
    content: NSDeliveryTerm GetDeliveryTerm(Integer deliveryTermId);
    parameters:
    - id: deliveryTermId;
      type: CRMScript.Global.Integer
      description: 
    - id: deliveryTermId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDeliveryTerm
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDeliveryTerm thing = agent.GetDeliveryTerm(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDeliveryTerms
  commentId: M:CRMScript.NetServer.NSListAgent.GetDeliveryTerms
  id: 'GetDeliveryTerms'
  so.intellisense: NSListAgent.GetDeliveryTerms
  langs:
  - crmscript
  name: 'GetDeliveryTerms'
  nameWithType: NSListAgent.GetDeliveryTerms
  fullName: CRMScript.NetServer.NSListAgent.GetDeliveryTerms
  type: Method
  summary: "\nReturns all DeliveryTerms in SuperOffice db.<p></p>\n<strong>Returns:</strong>NSDeliveryTerm[]<p></p>\n<pre><code>NSListAgent agent;\nNSDeliveryTerm[] res = agent.GetDeliveryTerms();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDeliveryTerm[] GetDeliveryTerms()
    parameters:
    return:
      type: CRMScript.NetServer.NSDeliveryTerm[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDeliveryTerm[] res = agent.GetDeliveryTerms();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDeliveryType
  commentId: M:CRMScript.NetServer.NSListAgent.GetDeliveryType
  id: 'GetDeliveryType'
  so.intellisense: NSListAgent.GetDeliveryType
  langs:
  - crmscript
  name: 'GetDeliveryType'
  nameWithType: NSListAgent.GetDeliveryType
  fullName: CRMScript.NetServer.NSListAgent.GetDeliveryType
  type: Method
  summary: "\nGets an NSDeliveryType object.\n"
  remarks: 
  syntax: 
    content: NSDeliveryType GetDeliveryType(Integer deliveryTypeId);
    parameters:
    - id: deliveryTypeId;
      type: CRMScript.Global.Integer
      description: 
    - id: deliveryTypeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDeliveryType
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDeliveryType thing = agent.GetDeliveryType(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDeliveryTypes
  commentId: M:CRMScript.NetServer.NSListAgent.GetDeliveryTypes
  id: 'GetDeliveryTypes'
  so.intellisense: NSListAgent.GetDeliveryTypes
  langs:
  - crmscript
  name: 'GetDeliveryTypes'
  nameWithType: NSListAgent.GetDeliveryTypes
  fullName: CRMScript.NetServer.NSListAgent.GetDeliveryTypes
  type: Method
  summary: "\nReturns all DeliveryTypes in SuperOffice db.<p></p>\n<strong>Returns:</strong>NSDeliveryType[]<p></p>\n<pre><code>NSListAgent agent;\nNSDeliveryType[] res = agent.GetDeliveryTypes();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDeliveryType[] GetDeliveryTypes()
    parameters:
    return:
      type: CRMScript.NetServer.NSDeliveryType[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDeliveryType[] res = agent.GetDeliveryTypes();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDepartment
  commentId: M:CRMScript.NetServer.NSListAgent.GetDepartment
  id: 'GetDepartment'
  so.intellisense: NSListAgent.GetDepartment
  langs:
  - crmscript
  name: 'GetDepartment'
  nameWithType: NSListAgent.GetDepartment
  fullName: CRMScript.NetServer.NSListAgent.GetDepartment
  type: Method
  summary: "\nGets an NSDepartment object.\n"
  remarks: 
  syntax: 
    content: NSDepartment GetDepartment(Integer departmentId);
    parameters:
    - id: departmentId;
      type: CRMScript.Global.Integer
      description: 
    - id: departmentId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDepartment
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDepartment thing = agent.GetDepartment(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDepartmentList
  commentId: M:CRMScript.NetServer.NSListAgent.GetDepartmentList
  id: 'GetDepartmentList'
  so.intellisense: NSListAgent.GetDepartmentList
  langs:
  - crmscript
  name: 'GetDepartmentList'
  nameWithType: NSListAgent.GetDepartmentList
  fullName: CRMScript.NetServer.NSListAgent.GetDepartmentList
  type: Method
  summary: "\nGets a vector of Department objects.\n"
  remarks: 
  syntax: 
    content: NSDepartment[] GetDepartmentList(Integer[]  departmentIds);
    parameters:
    - id: departmentIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: departmentIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDepartment[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSDepartment[] res = agent.GetDepartmentList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDepartments
  commentId: M:CRMScript.NetServer.NSListAgent.GetDepartments
  id: 'GetDepartments'
  so.intellisense: NSListAgent.GetDepartments
  langs:
  - crmscript
  name: 'GetDepartments'
  nameWithType: NSListAgent.GetDepartments
  fullName: CRMScript.NetServer.NSListAgent.GetDepartments
  type: Method
  summary: "\nGetting all departments/user groups for the internal phone list with the user's colleagues.<p></p>\n<strong>Returns:</strong>NSDepartment[]<p></p>\n<pre><code>NSListAgent agent;\nNSDepartment[] res = agent.GetDepartments();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDepartment[] GetDepartments()
    parameters:
    return:
      type: CRMScript.NetServer.NSDepartment[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDepartment[] res = agent.GetDepartments();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplate
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplate
  id: 'GetDocumentTemplate'
  so.intellisense: NSListAgent.GetDocumentTemplate
  langs:
  - crmscript
  name: 'GetDocumentTemplate'
  nameWithType: NSListAgent.GetDocumentTemplate
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplate
  type: Method
  summary: "\nGets an NSDocumentTemplate object.\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplate GetDocumentTemplate(Integer documentTemplateId);
    parameters:
    - id: documentTemplateId;
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplate
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDocumentTemplate thing = agent.GetDocumentTemplate(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateEntity
  id: 'GetDocumentTemplateEntity'
  so.intellisense: NSListAgent.GetDocumentTemplateEntity
  langs:
  - crmscript
  name: 'GetDocumentTemplateEntity'
  nameWithType: NSListAgent.GetDocumentTemplateEntity
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateEntity
  type: Method
  summary: "\nGets an NSDocumentTemplateEntity object.\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity GetDocumentTemplateEntity(Integer documentTemplateEntityId);
    parameters:
    - id: documentTemplateEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDocumentTemplateEntity thing = agent.GetDocumentTemplateEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateExtension
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateExtension
  id: 'GetDocumentTemplateExtension'
  so.intellisense: NSListAgent.GetDocumentTemplateExtension
  langs:
  - crmscript
  name: 'GetDocumentTemplateExtension'
  nameWithType: NSListAgent.GetDocumentTemplateExtension
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateExtension
  type: Method
  summary: "\nGet the file extension for the document template\n"
  remarks: 
  syntax: 
    content: String GetDocumentTemplateExtension(Integer documentTemplateId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString res = agent.GetDocumentTemplateExtension(documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateLanguages
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateLanguages
  id: 'GetDocumentTemplateLanguages'
  so.intellisense: NSListAgent.GetDocumentTemplateLanguages
  langs:
  - crmscript
  name: 'GetDocumentTemplateLanguages'
  nameWithType: NSListAgent.GetDocumentTemplateLanguages
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateLanguages
  type: Method
  summary: "\nGet the supported language variations for a document template\n"
  remarks: 
  syntax: 
    content: String[] GetDocumentTemplateLanguages(Integer documentTemplateId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString[] res = agent.GetDocumentTemplateLanguages(documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateList
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateList
  id: 'GetDocumentTemplateList'
  so.intellisense: NSListAgent.GetDocumentTemplateList
  langs:
  - crmscript
  name: 'GetDocumentTemplateList'
  nameWithType: NSListAgent.GetDocumentTemplateList
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateList
  type: Method
  summary: "\nGets a vector of NSDocumentTemplate objects.\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplate[] GetDocumentTemplateList(Integer[]  documentTemplateIds);
    parameters:
    - id: documentTemplateIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: documentTemplateIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplate[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSDocumentTemplate[] res = agent.GetDocumentTemplateList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateProperties
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateProperties
  id: 'GetDocumentTemplateProperties'
  so.intellisense: NSListAgent.GetDocumentTemplateProperties
  langs:
  - crmscript
  name: 'GetDocumentTemplateProperties'
  nameWithType: NSListAgent.GetDocumentTemplateProperties
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateProperties
  type: Method
  summary: "\nCRMScript method in the NSListAgent class that retrieves a list of key-value pairs of document template propertiesGets document template properties.<p></p>\nReturns key-value pairs with the requested properties.<p></p>\n<code>StringDictionary GetDocumentTemplateProperties(Integer documentTemplateId, String[] requestedProperties)</code>\n"
  remarks: 
  syntax: 
    content: GetDocumentTemplateProperties()
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: The primary key id of the document template
    - id: requestedProperties
      type: CRMScript.Global.String[]
      description: An array of properties to get the values for
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString[] requestedProperties;\nStringDictionary res = agent.GetDocumentTemplateProperties(documentTemplateId, requestedProperties);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplates
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplates
  id: 'GetDocumentTemplates'
  so.intellisense: NSListAgent.GetDocumentTemplates
  langs:
  - crmscript
  name: 'GetDocumentTemplates'
  nameWithType: NSListAgent.GetDocumentTemplates
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplates
  type: Method
  summary: "\nReturns all available document templates<p></p>\n<strong>Returns:</strong>NSDocumentTemplate[]<p></p>\n<pre><code>NSListAgent agent;\nNSDocumentTemplate[] res = agent.GetDocumentTemplates();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplate[] GetDocumentTemplates()
    parameters:
    return:
      type: CRMScript.NetServer.NSDocumentTemplate[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDocumentTemplate[] res = agent.GetDocumentTemplates();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplatesTasks
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplatesTasks
  id: 'GetDocumentTemplatesTasks'
  so.intellisense: NSListAgent.GetDocumentTemplatesTasks
  langs:
  - crmscript
  name: 'GetDocumentTemplatesTasks'
  nameWithType: NSListAgent.GetDocumentTemplatesTasks
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplatesTasks
  type: Method
  summary: "\nThe appointment's task is a Document template item when the appointment is a document.<p></p>\n<strong>Returns:</strong>NSTask[]<p></p>\n<pre><code>NSListAgent agent;\nNSTask[] res = agent.GetDocumentTemplatesTasks();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTask[] GetDocumentTemplatesTasks()
    parameters:
    return:
      type: CRMScript.NetServer.NSTask[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTask[] res = agent.GetDocumentTemplatesTasks();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateStreamFromId
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateStreamFromId
  id: 'GetDocumentTemplateStreamFromId'
  so.intellisense: NSListAgent.GetDocumentTemplateStreamFromId
  langs:
  - crmscript
  name: 'GetDocumentTemplateStreamFromId'
  nameWithType: NSListAgent.GetDocumentTemplateStreamFromId
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateStreamFromId
  type: Method
  summary: "\nRetrieve a stream to a document template based on its id\n"
  remarks: 
  syntax: 
    content: NSStream GetDocumentTemplateStreamFromId(Integer documentTemplateId, String languageCode)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSStream
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString languageCode;\nNSStream res = agent.GetDocumentTemplateStreamFromId(documentTemplateId, languageCode);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateTask
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateTask
  id: 'GetDocumentTemplateTask'
  so.intellisense: NSListAgent.GetDocumentTemplateTask
  langs:
  - crmscript
  name: 'GetDocumentTemplateTask'
  nameWithType: NSListAgent.GetDocumentTemplateTask
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateTask
  type: Method
  summary: "\nReturns a Document Template list item as a TaskListItem. The appointment's task is a Document template item when the appointment is a document.\n"
  remarks: 
  syntax: 
    content: NSTask GetDocumentTemplateTask(Integer documentTemplateId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSTask
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nNSTask res = agent.GetDocumentTemplateTask(documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUrl
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateUrl
  id: 'GetDocumentTemplateUrl'
  so.intellisense: NSListAgent.GetDocumentTemplateUrl
  langs:
  - crmscript
  name: 'GetDocumentTemplateUrl'
  nameWithType: NSListAgent.GetDocumentTemplateUrl
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUrl
  type: Method
  summary: "\nGet a url to the document template\n"
  remarks: 
  syntax: 
    content: String GetDocumentTemplateUrl(Integer documentTemplateId, Bool writableUrl, String languageCode)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: writableUrl
      type: CRMScript.Global.Bool
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nBool writableUrl;\nString languageCode;\nString res = agent.GetDocumentTemplateUrl(documentTemplateId, writableUrl, languageCode);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInProjectStage
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInProjectStage
  id: 'GetDocumentTemplateUsedInProjectStage'
  so.intellisense: NSListAgent.GetDocumentTemplateUsedInProjectStage
  langs:
  - crmscript
  name: 'GetDocumentTemplateUsedInProjectStage'
  nameWithType: NSListAgent.GetDocumentTemplateUsedInProjectStage
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInProjectStage
  type: Method
  summary: "\nGet a String array of names in project guide that this template is used in\n"
  remarks: 
  syntax: 
    content: String[] GetDocumentTemplateUsedInProjectStage(Integer documentTemplateId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString[] res = agent.GetDocumentTemplateUsedInProjectStage(documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInSalesStage
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInSalesStage
  id: 'GetDocumentTemplateUsedInSalesStage'
  so.intellisense: NSListAgent.GetDocumentTemplateUsedInSalesStage
  langs:
  - crmscript
  name: 'GetDocumentTemplateUsedInSalesStage'
  nameWithType: NSListAgent.GetDocumentTemplateUsedInSalesStage
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTemplateUsedInSalesStage
  type: Method
  summary: "\nGet a String array of names in sales guide that this template is used in\n"
  remarks: 
  syntax: 
    content: String[] GetDocumentTemplateUsedInSalesStage(Integer documentTemplateId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.String[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nString[] res = agent.GetDocumentTemplateUsedInSalesStage(documentTemplateId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetDocumentTypesForPlugin
  commentId: M:CRMScript.NetServer.NSListAgent.GetDocumentTypesForPlugin
  id: 'GetDocumentTypesForPlugin'
  so.intellisense: NSListAgent.GetDocumentTypesForPlugin
  langs:
  - crmscript
  name: 'GetDocumentTypesForPlugin'
  nameWithType: NSListAgent.GetDocumentTypesForPlugin
  fullName: CRMScript.NetServer.NSListAgent.GetDocumentTypesForPlugin
  type: Method
  summary: "\nGet a list of document types supported by a given document plugin. Use the document template type when creating a new template.\n"
  remarks: 
  syntax: 
    content: StringDictionary GetDocumentTypesForPlugin(Integer pluginId)
    parameters:
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger pluginId;\nStringDictionary res = agent.GetDocumentTypesForPlugin(pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetEmarketingStrictMode
  commentId: M:CRMScript.NetServer.NSListAgent.GetEmarketingStrictMode
  id: 'GetEmarketingStrictMode'
  so.intellisense: NSListAgent.GetEmarketingStrictMode
  langs:
  - crmscript
  name: 'GetEmarketingStrictMode'
  nameWithType: NSListAgent.GetEmarketingStrictMode
  fullName: CRMScript.NetServer.NSListAgent.GetEmarketingStrictMode
  type: Method
  summary: "\nGet the value of the Emarketing strict mode setting<p></p>\n<strong>Returns:</strong>Bool<p></p>\n<pre><code>NSListAgent agent;\nBool res = agent.GetEmarketingStrictMode();</code></pre>\n"
  remarks: 
  syntax: 
    content: Bool GetEmarketingStrictMode()
    parameters:
    return:
      type: CRMScript.Global.Bool
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool res = agent.GetEmarketingStrictMode();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetExtAppEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetExtAppEntity
  id: 'GetExtAppEntity'
  so.intellisense: NSListAgent.GetExtAppEntity
  langs:
  - crmscript
  name: 'GetExtAppEntity'
  nameWithType: NSListAgent.GetExtAppEntity
  fullName: CRMScript.NetServer.NSListAgent.GetExtAppEntity
  type: Method
  summary: "\nGets an NSExtAppEntity object.\n"
  remarks: 
  syntax: 
    content: NSExtAppEntity GetExtAppEntity(Integer extAppEntityId);
    parameters:
    - id: extAppEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: extAppEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSExtAppEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSExtAppEntity thing = agent.GetExtAppEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.GetFromListDefinition
  id: 'GetFromListDefinition'
  so.intellisense: NSListAgent.GetFromListDefinition
  langs:
  - crmscript
  name: 'GetFromListDefinition'
  nameWithType: NSListAgent.GetFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.GetFromListDefinition
  type: Method
  summary: "\nGet a list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity GetFromListDefinition(Integer id, Integer udListDefinitionId)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nInteger udListDefinitionId;\nNSListItemEntity res = agent.GetFromListDefinition(id, udListDefinitionId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetFromListName
  id: 'GetFromListName'
  so.intellisense: NSListAgent.GetFromListName
  langs:
  - crmscript
  name: 'GetFromListName'
  nameWithType: NSListAgent.GetFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetFromListName
  type: Method
  summary: "\nGet a list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity GetFromListName(Integer id, String udListDefinitionName)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nString udListDefinitionName;\nNSListItemEntity res = agent.GetFromListName(id, udListDefinitionName);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHeadingEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetHeadingEntity
  id: 'GetHeadingEntity'
  so.intellisense: NSListAgent.GetHeadingEntity
  langs:
  - crmscript
  name: 'GetHeadingEntity'
  nameWithType: NSListAgent.GetHeadingEntity
  fullName: CRMScript.NetServer.NSListAgent.GetHeadingEntity
  type: Method
  summary: "\nGets an NSHeadingEntity object.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity GetHeadingEntity(Integer headingEntityId);
    parameters:
    - id: headingEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: headingEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSHeadingEntity thing = agent.GetHeadingEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHeadings
  commentId: M:CRMScript.NetServer.NSListAgent.GetHeadings
  id: 'GetHeadings'
  so.intellisense: NSListAgent.GetHeadings
  langs:
  - crmscript
  name: 'GetHeadings'
  nameWithType: NSListAgent.GetHeadings
  fullName: CRMScript.NetServer.NSListAgent.GetHeadings
  type: Method
  summary: "\nGets a selectable MDO list of the headings for this list item\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetHeadings(Integer udListDefinitionId, Integer listItemId, Bool showDeleted)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: showDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger listItemId;\nBool showDeleted;\nNSSelectableMDOListItem[] res = agent.GetHeadings(udListDefinitionId, listItemId, showDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHeadingsForListItemFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetHeadingsForListItemFromListName
  id: 'GetHeadingsForListItemFromListName'
  so.intellisense: NSListAgent.GetHeadingsForListItemFromListName
  langs:
  - crmscript
  name: 'GetHeadingsForListItemFromListName'
  nameWithType: NSListAgent.GetHeadingsForListItemFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetHeadingsForListItemFromListName
  type: Method
  summary: "\nGets a selectable MDO list of the headings for this list item\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetHeadingsForListItemFromListName(String udListDefinitionName, Integer listItemId, Bool showDeleted)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: showDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger listItemId;\nBool showDeleted;\nNSSelectableMDOListItem[] res = agent.GetHeadingsForListItemFromListName(udListDefinitionName, listItemId, showDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHeadingsFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.GetHeadingsFromListDefinition
  id: 'GetHeadingsFromListDefinition'
  so.intellisense: NSListAgent.GetHeadingsFromListDefinition
  langs:
  - crmscript
  name: 'GetHeadingsFromListDefinition'
  nameWithType: NSListAgent.GetHeadingsFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.GetHeadingsFromListDefinition
  type: Method
  summary: "\nGets headings for list resolved by the provided id.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity[] GetHeadingsFromListDefinition(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nNSHeadingEntity[] res = agent.GetHeadingsFromListDefinition(id);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHeadingsFromName
  commentId: M:CRMScript.NetServer.NSListAgent.GetHeadingsFromName
  id: 'GetHeadingsFromName'
  so.intellisense: NSListAgent.GetHeadingsFromName
  langs:
  - crmscript
  name: 'GetHeadingsFromName'
  nameWithType: NSListAgent.GetHeadingsFromName
  fullName: CRMScript.NetServer.NSListAgent.GetHeadingsFromName
  type: Method
  summary: "\nGets headings for list resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity[] GetHeadingsFromName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nNSHeadingEntity[] res = agent.GetHeadingsFromName(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHierarchyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetHierarchyEntity
  id: 'GetHierarchyEntity'
  so.intellisense: NSListAgent.GetHierarchyEntity
  langs:
  - crmscript
  name: 'GetHierarchyEntity'
  nameWithType: NSListAgent.GetHierarchyEntity
  fullName: CRMScript.NetServer.NSListAgent.GetHierarchyEntity
  type: Method
  summary: "\nGets an NSHierarchyEntity object.\n"
  remarks: 
  syntax: 
    content: NSHierarchyEntity GetHierarchyEntity(Integer hierarchyEntityId);
    parameters:
    - id: hierarchyEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: hierarchyEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSHierarchyEntity thing = agent.GetHierarchyEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetHierarchyFromPath
  commentId: M:CRMScript.NetServer.NSListAgent.GetHierarchyFromPath
  id: 'GetHierarchyFromPath'
  so.intellisense: NSListAgent.GetHierarchyFromPath
  langs:
  - crmscript
  name: 'GetHierarchyFromPath'
  nameWithType: NSListAgent.GetHierarchyFromPath
  fullName: CRMScript.NetServer.NSListAgent.GetHierarchyFromPath
  type: Method
  summary: "\nGet a hierarchy item from a path\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = ExtraTables</li><li>Enum: 2 = ScreenDefinitions</li><li>Enum: 3 = Scripts</li><li>Enum: 4 = Selections</li><li>Enum: 5 = ExternalDocuments</li><li>Enum: 6 = UserGroups</li><li>Enum: 7 = ExternalDocumentRelatedToSpmMessage</li><li>Enum: 8 = Dashboards</li></ul>\n"
  syntax: 
    content: NSHierarchyEntity GetHierarchyFromPath(Integer domain, String path, Bool children)
    parameters:
    - id: domain
      type: CRMScript.Global.Integer
      description: 
    - id: path
      type: CRMScript.Global.String
      description: 
    - id: children
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger domain;\nString path;\nBool children;\nNSHierarchyEntity res = agent.GetHierarchyFromPath(domain, path, children);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetInstalledLanguages
  commentId: M:CRMScript.NetServer.NSListAgent.GetInstalledLanguages
  id: 'GetInstalledLanguages'
  so.intellisense: NSListAgent.GetInstalledLanguages
  langs:
  - crmscript
  name: 'GetInstalledLanguages'
  nameWithType: NSListAgent.GetInstalledLanguages
  fullName: CRMScript.NetServer.NSListAgent.GetInstalledLanguages
  type: Method
  summary: "\nReturns the list of all languages installed in this database.<p></p>\n<strong>Returns:</strong>NSLanguageInfo[]<p></p>\n<pre><code>NSListAgent agent;\nNSLanguageInfo[] res = agent.GetInstalledLanguages();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSLanguageInfo[] GetInstalledLanguages()
    parameters:
    return:
      type: CRMScript.NetServer.NSLanguageInfo[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLanguageInfo[] res = agent.GetInstalledLanguages();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLanguageInfo
  commentId: M:CRMScript.NetServer.NSListAgent.GetLanguageInfo
  id: 'GetLanguageInfo'
  so.intellisense: NSListAgent.GetLanguageInfo
  langs:
  - crmscript
  name: 'GetLanguageInfo'
  nameWithType: NSListAgent.GetLanguageInfo
  fullName: CRMScript.NetServer.NSListAgent.GetLanguageInfo
  type: Method
  summary: "\nGets an NSLanguageInfo object.\n"
  remarks: 
  syntax: 
    content: NSLanguageInfo GetLanguageInfo(Integer languageInfoId);
    parameters:
    - id: languageInfoId;
      type: CRMScript.Global.Integer
      description: 
    - id: languageInfoId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLanguageInfo
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLanguageInfo thing = agent.GetLanguageInfo(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLanguageInfoList
  commentId: M:CRMScript.NetServer.NSListAgent.GetLanguageInfoList
  id: 'GetLanguageInfoList'
  so.intellisense: NSListAgent.GetLanguageInfoList
  langs:
  - crmscript
  name: 'GetLanguageInfoList'
  nameWithType: NSListAgent.GetLanguageInfoList
  fullName: CRMScript.NetServer.NSListAgent.GetLanguageInfoList
  type: Method
  summary: "\nGets a vector of NSLanguageInfo objects.\n"
  remarks: 
  syntax: 
    content: NSLanguageInfo[] GetLanguageInfoList(Integer[]  languageInfoIds);
    parameters:
    - id: languageInfoIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: languageInfoIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLanguageInfo[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSLanguageInfo[] res = agent.GetLanguageInfoList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLegalBase
  commentId: M:CRMScript.NetServer.NSListAgent.GetLegalBase
  id: 'GetLegalBase'
  so.intellisense: NSListAgent.GetLegalBase
  langs:
  - crmscript
  name: 'GetLegalBase'
  nameWithType: NSListAgent.GetLegalBase
  fullName: CRMScript.NetServer.NSListAgent.GetLegalBase
  type: Method
  summary: "\nGets an NSLegalBase object.\n"
  remarks: 
  syntax: 
    content: NSLegalBase GetLegalBase(Integer legalBaseId);
    parameters:
    - id: legalBaseId;
      type: CRMScript.Global.Integer
      description: 
    - id: legalBaseId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLegalBase
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLegalBase thing = agent.GetLegalBase(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLegalBaseList
  commentId: M:CRMScript.NetServer.NSListAgent.GetLegalBaseList
  id: 'GetLegalBaseList'
  so.intellisense: NSListAgent.GetLegalBaseList
  langs:
  - crmscript
  name: 'GetLegalBaseList'
  nameWithType: NSListAgent.GetLegalBaseList
  fullName: CRMScript.NetServer.NSListAgent.GetLegalBaseList
  type: Method
  summary: "\nGets a vector of NSLegalBase objects.\n"
  remarks: 
  syntax: 
    content: NSLegalBase[] GetLegalBaseList(Integer[]  legalBaseIds);
    parameters:
    - id: legalBaseIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: legalBaseIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLegalBase[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSLegalBase[] res = agent.GetLegalBaseList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLegalBases
  commentId: M:CRMScript.NetServer.NSListAgent.GetLegalBases
  id: 'GetLegalBases'
  so.intellisense: NSListAgent.GetLegalBases
  langs:
  - crmscript
  name: 'GetLegalBases'
  nameWithType: NSListAgent.GetLegalBases
  fullName: CRMScript.NetServer.NSListAgent.GetLegalBases
  type: Method
  summary: "\nReturns all defined bases.<p></p>\n<strong>Returns:</strong>NSLegalBase[]<p></p>\n<pre><code>NSListAgent agent;\nNSLegalBase[] res = agent.GetLegalBases();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSLegalBase[] GetLegalBases()
    parameters:
    return:
      type: CRMScript.NetServer.NSLegalBase[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLegalBase[] res = agent.GetLegalBases();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLink
  commentId: M:CRMScript.NetServer.NSListAgent.GetLink
  id: 'GetLink'
  so.intellisense: NSListAgent.GetLink
  langs:
  - crmscript
  name: 'GetLink'
  nameWithType: NSListAgent.GetLink
  fullName: CRMScript.NetServer.NSListAgent.GetLink
  type: Method
  summary: "\nGets an NSLink object.\n"
  remarks: 
  syntax: 
    content: NSLink GetLink(Integer linkId);
    parameters:
    - id: linkId;
      type: CRMScript.Global.Integer
      description: 
    - id: linkId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLink
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLink thing = agent.GetLink(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLinkList
  commentId: M:CRMScript.NetServer.NSListAgent.GetLinkList
  id: 'GetLinkList'
  so.intellisense: NSListAgent.GetLinkList
  langs:
  - crmscript
  name: 'GetLinkList'
  nameWithType: NSListAgent.GetLinkList
  fullName: CRMScript.NetServer.NSListAgent.GetLinkList
  type: Method
  summary: "\nGets a vector of Link objects.\n"
  remarks: 
  syntax: 
    content: NSLink[] GetLinkList(Integer[]  linkIds);
    parameters:
    - id: linkIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: linkIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLink[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSLink[] res = agent.GetLinkList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListDefinitions
  commentId: M:CRMScript.NetServer.NSListAgent.GetListDefinitions
  id: 'GetListDefinitions'
  so.intellisense: NSListAgent.GetListDefinitions
  langs:
  - crmscript
  name: 'GetListDefinitions'
  nameWithType: NSListAgent.GetListDefinitions
  fullName: CRMScript.NetServer.NSListAgent.GetListDefinitions
  type: Method
  summary: "\nGet a list of the lists* built-in and user-defined.\n"
  remarks: 
  syntax: 
    content: NSListEntity[] GetListDefinitions(Bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.NetServer.NSListEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool includeDeleted;\nNSListEntity[] res = agent.GetListDefinitions(includeDeleted);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetListEntity
  id: 'GetListEntity'
  so.intellisense: NSListAgent.GetListEntity
  langs:
  - crmscript
  name: 'GetListEntity'
  nameWithType: NSListAgent.GetListEntity
  fullName: CRMScript.NetServer.NSListAgent.GetListEntity
  type: Method
  summary: "\nGets an NSListEntity object.\n"
  remarks: 
  syntax: 
    content: NSListEntity GetListEntity(Integer listEntityId);
    parameters:
    - id: listEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: listEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSListEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSListEntity thing = agent.GetListEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListEntityByName
  commentId: M:CRMScript.NetServer.NSListAgent.GetListEntityByName
  id: 'GetListEntityByName'
  so.intellisense: NSListAgent.GetListEntityByName
  langs:
  - crmscript
  name: 'GetListEntityByName'
  nameWithType: NSListAgent.GetListEntityByName
  fullName: CRMScript.NetServer.NSListAgent.GetListEntityByName
  type: Method
  summary: "\nGets an NSListEntity resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: NSListEntity GetListEntityByName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSListEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nNSListEntity res = agent.GetListEntityByName(name);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListItemsForHeading
  commentId: M:CRMScript.NetServer.NSListAgent.GetListItemsForHeading
  id: 'GetListItemsForHeading'
  so.intellisense: NSListAgent.GetListItemsForHeading
  langs:
  - crmscript
  name: 'GetListItemsForHeading'
  nameWithType: NSListAgent.GetListItemsForHeading
  fullName: CRMScript.NetServer.NSListAgent.GetListItemsForHeading
  type: Method
  summary: "\nList of list items that is selected if under this heading\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetListItemsForHeading(Integer udListDefinitionId, Integer headingId)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: headingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger headingId;\nNSSelectableMDOListItem[] res = agent.GetListItemsForHeading(udListDefinitionId, headingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListItemsForHeadingFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetListItemsForHeadingFromListName
  id: 'GetListItemsForHeadingFromListName'
  so.intellisense: NSListAgent.GetListItemsForHeadingFromListName
  langs:
  - crmscript
  name: 'GetListItemsForHeadingFromListName'
  nameWithType: NSListAgent.GetListItemsForHeadingFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetListItemsForHeadingFromListName
  type: Method
  summary: "\nList of list items that is selected if under this heading\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetListItemsForHeadingFromListName(String udListDefinitionName, Integer headingId)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: headingId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger headingId;\nNSSelectableMDOListItem[] res = agent.GetListItemsForHeadingFromListName(udListDefinitionName, headingId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListItemsForUserGroup
  commentId: M:CRMScript.NetServer.NSListAgent.GetListItemsForUserGroup
  id: 'GetListItemsForUserGroup'
  so.intellisense: NSListAgent.GetListItemsForUserGroup
  langs:
  - crmscript
  name: 'GetListItemsForUserGroup'
  nameWithType: NSListAgent.GetListItemsForUserGroup
  fullName: CRMScript.NetServer.NSListAgent.GetListItemsForUserGroup
  type: Method
  summary: "\nList of list items that is visible in the usergroup\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetListItemsForUserGroup(Integer udListDefinitionId, Integer groupId)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: groupId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger groupId;\nNSSelectableMDOListItem[] res = agent.GetListItemsForUserGroup(udListDefinitionId, groupId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetListItemsForUserGroupFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetListItemsForUserGroupFromListName
  id: 'GetListItemsForUserGroupFromListName'
  so.intellisense: NSListAgent.GetListItemsForUserGroupFromListName
  langs:
  - crmscript
  name: 'GetListItemsForUserGroupFromListName'
  nameWithType: NSListAgent.GetListItemsForUserGroupFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetListItemsForUserGroupFromListName
  type: Method
  summary: "\nList of list items that is visible in the usergroup\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetListItemsForUserGroupFromListName(String udListDefinitionName, Integer groupId)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: groupId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger groupId;\nNSSelectableMDOListItem[] res = agent.GetListItemsForUserGroupFromListName(udListDefinitionName, groupId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedText
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedText
  id: 'GetLocalizedText'
  so.intellisense: NSListAgent.GetLocalizedText
  langs:
  - crmscript
  name: 'GetLocalizedText'
  nameWithType: NSListAgent.GetLocalizedText
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedText
  type: Method
  summary: "\nGets an NSLocalizedText object.\n"
  remarks: 
  syntax: 
    content: NSLocalizedText GetLocalizedText(Integer localizedTextId);
    parameters:
    - id: localizedTextId;
      type: CRMScript.Global.Integer
      description: 
    - id: localizedTextId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLocalizedText
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLocalizedText thing = agent.GetLocalizedText(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedTextByType
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedTextByType
  id: 'GetLocalizedTextByType'
  so.intellisense: NSListAgent.GetLocalizedTextByType
  langs:
  - crmscript
  name: 'GetLocalizedTextByType'
  nameWithType: NSListAgent.GetLocalizedTextByType
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedTextByType
  type: Method
  summary: "\nReturns a localized text based on the resource id for the selected language.\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = Label</li><li>Enum: 2 = Table</li><li>Enum: 3 = Column</li><li>Enum: 4 = ImportField</li><li>Enum: 5 = ImportObject</li><li>Enum: 6 = ImportGUICategory</li><li>Enum: 7 = StartupHints</li><li>Enum: 11 = FunctionRightLabel</li><li>Enum: 12 = FunctionRightDesc</li><li>Enum: 16 = StatusMonitorName</li><li>Enum: 19 = UdefContactLabel</li><li>Enum: 20 = UdefPersonLabel</li><li>Enum: 21 = UdefProjectLabel</li><li>Enum: 22 = UdefSaleLabel</li><li>Enum: 23 = UdefAppointmentLabel</li><li>Enum: 24 = UdefDocumentLabel</li><li>Enum: 41 = PushNotificationText</li></ul>\n"
  syntax: 
    content: NSLocalizedText GetLocalizedTextByType(Integer textType, Integer resourceId, Integer languageId)
    parameters:
    - id: textType
      type: CRMScript.Global.Integer
      description: 
    - id: resourceId
      type: CRMScript.Global.Integer
      description: 
    - id: languageId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSLocalizedText
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger textType;\nInteger resourceId;\nInteger languageId;\nNSLocalizedText res = agent.GetLocalizedTextByType(textType, resourceId, languageId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedTextList
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedTextList
  id: 'GetLocalizedTextList'
  so.intellisense: NSListAgent.GetLocalizedTextList
  langs:
  - crmscript
  name: 'GetLocalizedTextList'
  nameWithType: NSListAgent.GetLocalizedTextList
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedTextList
  type: Method
  summary: "\nGets a vector of NSLocalizedText objects.\n"
  remarks: 
  syntax: 
    content: NSLocalizedText[] GetLocalizedTextList(Integer[]  localizedTextIds);
    parameters:
    - id: localizedTextIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: localizedTextIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSLocalizedText[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSLocalizedText[] res = agent.GetLocalizedTextList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedTexts
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedTexts
  id: 'GetLocalizedTexts'
  so.intellisense: NSListAgent.GetLocalizedTexts
  langs:
  - crmscript
  name: 'GetLocalizedTexts'
  nameWithType: NSListAgent.GetLocalizedTexts
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedTexts
  type: Method
  summary: "\nGets all localized texts in the CRM database.<p></p>\n<strong>Returns:</strong>NSLocalizedText[]<p></p>\n<pre><code>NSListAgent agent;\nNSLocalizedText[] res = agent.GetLocalizedTexts();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSLocalizedText[] GetLocalizedTexts()
    parameters:
    return:
      type: CRMScript.NetServer.NSLocalizedText[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSLocalizedText[] res = agent.GetLocalizedTexts();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedTextsByLanguageId
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedTextsByLanguageId
  id: 'GetLocalizedTextsByLanguageId'
  so.intellisense: NSListAgent.GetLocalizedTextsByLanguageId
  langs:
  - crmscript
  name: 'GetLocalizedTextsByLanguageId'
  nameWithType: NSListAgent.GetLocalizedTextsByLanguageId
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedTextsByLanguageId
  type: Method
  summary: "\nGets all localized text belonging to a specific language.\n"
  remarks: 
  syntax: 
    content: NSLocalizedText[] GetLocalizedTextsByLanguageId(Integer languageId)
    parameters:
    - id: languageId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSLocalizedText[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger languageId;\nNSLocalizedText[] res = agent.GetLocalizedTextsByLanguageId(languageId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetLocalizedTextsByType
  commentId: M:CRMScript.NetServer.NSListAgent.GetLocalizedTextsByType
  id: 'GetLocalizedTextsByType'
  so.intellisense: NSListAgent.GetLocalizedTextsByType
  langs:
  - crmscript
  name: 'GetLocalizedTextsByType'
  nameWithType: NSListAgent.GetLocalizedTextsByType
  fullName: CRMScript.NetServer.NSListAgent.GetLocalizedTextsByType
  type: Method
  summary: "\nCRMScript method in the NSListAgent class that gets localized text by their typeGets localized text by their type.<p></p>\nReturns an array of NSLocalizedText objects.<p></p>\n<code>NSLocalizedText[] GetLocalizedTextsByType(Integer[] textTypes)</code>\n"
  remarks: "\n<h3>Types</h3><table><thead><tr><th>Enum</th><th>Type</th></tr></thead><tbody><tr><td>0</td><td>Unknown</td></tr><tr><td>1</td><td>Label</td></tr><tr><td>2</td><td>Table</td></tr><tr><td>3</td><td>Column</td></tr><tr><td>4</td><td>ImportField</td></tr><tr><td>5</td><td>ImportObject</td></tr><tr><td>6</td><td>ImportGUICategory</td></tr><tr><td>7</td><td>StartupHints</td></tr><tr><td>11</td><td>FunctionRightLabel</td></tr><tr><td>12</td><td>FunctionRightDesc</td></tr><tr><td>16</td><td>StatusMonitorName</td></tr><tr><td>19</td><td>UdefContactLabel</td></tr><tr><td>20</td><td>UdefPersonLabel</td></tr><tr><td>21</td><td>UdefProjectLabel</td></tr><tr><td>22</td><td>UdefSaleLabel</td></tr><tr><td>23</td><td>UdefAppointmentLabel</td></tr><tr><td>24</td><td>UdefDocumentLabel</td></tr><tr><td>41</td><td>PushNotificationText</td></tr></tbody></table>\n"
  syntax: 
    content: GetLocalizedTextsByType()
    parameters:
    - id: textTypes
      type: CRMScript.Global.Integer[]
      description: Array of localized text types. If null, all texts are returned.
  example: 
  - "\n<pre><code>NSListAgent agent;\nLocalizedTextType[] textTypes;\nNSLocalizedText[] res = agent.GetLocalizedTextsByType(textTypes);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetMrMrs
  commentId: M:CRMScript.NetServer.NSListAgent.GetMrMrs
  id: 'GetMrMrs'
  so.intellisense: NSListAgent.GetMrMrs
  langs:
  - crmscript
  name: 'GetMrMrs'
  nameWithType: NSListAgent.GetMrMrs
  fullName: CRMScript.NetServer.NSListAgent.GetMrMrs
  type: Method
  summary: "\nGets an NSMrMrs object.\n"
  remarks: 
  syntax: 
    content: NSMrMrs GetMrMrs(Integer mrMrsId);
    parameters:
    - id: mrMrsId;
      type: CRMScript.Global.Integer
      description: 
    - id: mrMrsId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSMrMrs
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSMrMrs thing = agent.GetMrMrs(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetMrMrses
  commentId: M:CRMScript.NetServer.NSListAgent.GetMrMrses
  id: 'GetMrMrses'
  so.intellisense: NSListAgent.GetMrMrses
  langs:
  - crmscript
  name: 'GetMrMrses'
  nameWithType: NSListAgent.GetMrMrses
  fullName: CRMScript.NetServer.NSListAgent.GetMrMrses
  type: Method
  summary: "\nReturns all Items from the NSMrMrs table sorted by their value.<p></p>\n<strong>Returns:</strong>NSMrMrs[]<p></p>\n<pre><code>NSListAgent agent;\nNSMrMrs[] res = agent.GetMrMrses();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSMrMrs[] GetMrMrses()
    parameters:
    return:
      type: CRMScript.NetServer.NSMrMrs[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSMrMrs[] res = agent.GetMrMrses();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetMrMrsList
  commentId: M:CRMScript.NetServer.NSListAgent.GetMrMrsList
  id: 'GetMrMrsList'
  so.intellisense: NSListAgent.GetMrMrsList
  langs:
  - crmscript
  name: 'GetMrMrsList'
  nameWithType: NSListAgent.GetMrMrsList
  fullName: CRMScript.NetServer.NSListAgent.GetMrMrsList
  type: Method
  summary: "\nGets a vector of NSMrMrs objects.\n"
  remarks: 
  syntax: 
    content: NSMrMrs[] GetMrMrsList(Integer[]  mrMrsIds);
    parameters:
    - id: mrMrsIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: mrMrsIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSMrMrs[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSMrMrs[] res = agent.GetMrMrsList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetOurCurrency
  commentId: M:CRMScript.NetServer.NSListAgent.GetOurCurrency
  id: 'GetOurCurrency'
  so.intellisense: NSListAgent.GetOurCurrency
  langs:
  - crmscript
  name: 'GetOurCurrency'
  nameWithType: NSListAgent.GetOurCurrency
  fullName: CRMScript.NetServer.NSListAgent.GetOurCurrency
  type: Method
  summary: "\nGets the Our currency object if currency is enabled<p></p>\n<strong>Returns:</strong>NSCurrency<p></p>\n<pre><code>NSListAgent agent;\nNSCurrency res = agent.GetOurCurrency();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrency GetOurCurrency()
    parameters:
    return:
      type: CRMScript.NetServer.NSCurrency
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrency res = agent.GetOurCurrency();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetOwnerCompanysCurrency
  commentId: M:CRMScript.NetServer.NSListAgent.GetOwnerCompanysCurrency
  id: 'GetOwnerCompanysCurrency'
  so.intellisense: NSListAgent.GetOwnerCompanysCurrency
  langs:
  - crmscript
  name: 'GetOwnerCompanysCurrency'
  nameWithType: NSListAgent.GetOwnerCompanysCurrency
  fullName: CRMScript.NetServer.NSListAgent.GetOwnerCompanysCurrency
  type: Method
  summary: "\nGet the currency of the user's owner company<p></p>\n<strong>Returns:</strong>NSCurrency<p></p>\n<pre><code>NSListAgent agent;\nNSCurrency res = agent.GetOwnerCompanysCurrency();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrency GetOwnerCompanysCurrency()
    parameters:
    return:
      type: CRMScript.NetServer.NSCurrency
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCurrency res = agent.GetOwnerCompanysCurrency();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPaymentTerm
  commentId: M:CRMScript.NetServer.NSListAgent.GetPaymentTerm
  id: 'GetPaymentTerm'
  so.intellisense: NSListAgent.GetPaymentTerm
  langs:
  - crmscript
  name: 'GetPaymentTerm'
  nameWithType: NSListAgent.GetPaymentTerm
  fullName: CRMScript.NetServer.NSListAgent.GetPaymentTerm
  type: Method
  summary: "\nGets an NSPaymentTerm object.\n"
  remarks: 
  syntax: 
    content: NSPaymentTerm GetPaymentTerm(Integer paymentTermId);
    parameters:
    - id: paymentTermId;
      type: CRMScript.Global.Integer
      description: 
    - id: paymentTermId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPaymentTerm
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPaymentTerm thing = agent.GetPaymentTerm(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPaymentTerms
  commentId: M:CRMScript.NetServer.NSListAgent.GetPaymentTerms
  id: 'GetPaymentTerms'
  so.intellisense: NSListAgent.GetPaymentTerms
  langs:
  - crmscript
  name: 'GetPaymentTerms'
  nameWithType: NSListAgent.GetPaymentTerms
  fullName: CRMScript.NetServer.NSListAgent.GetPaymentTerms
  type: Method
  summary: "\nReturns all PaymentTerms in SuperOffice db.<p></p>\n<strong>Returns:</strong>NSPaymentTerm[]<p></p>\n<pre><code>NSListAgent agent;\nNSPaymentTerm[] res = agent.GetPaymentTerms();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSPaymentTerm[] GetPaymentTerms()
    parameters:
    return:
      type: CRMScript.NetServer.NSPaymentTerm[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPaymentTerm[] res = agent.GetPaymentTerms();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPaymentType
  commentId: M:CRMScript.NetServer.NSListAgent.GetPaymentType
  id: 'GetPaymentType'
  so.intellisense: NSListAgent.GetPaymentType
  langs:
  - crmscript
  name: 'GetPaymentType'
  nameWithType: NSListAgent.GetPaymentType
  fullName: CRMScript.NetServer.NSListAgent.GetPaymentType
  type: Method
  summary: "\nGets an NSPaymentType object.\n"
  remarks: 
  syntax: 
    content: NSPaymentType GetPaymentType(Integer paymentTypeId);
    parameters:
    - id: paymentTypeId;
      type: CRMScript.Global.Integer
      description: 
    - id: paymentTypeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPaymentType
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPaymentType thing = agent.GetPaymentType(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPaymentTypes
  commentId: M:CRMScript.NetServer.NSListAgent.GetPaymentTypes
  id: 'GetPaymentTypes'
  so.intellisense: NSListAgent.GetPaymentTypes
  langs:
  - crmscript
  name: 'GetPaymentTypes'
  nameWithType: NSListAgent.GetPaymentTypes
  fullName: CRMScript.NetServer.NSListAgent.GetPaymentTypes
  type: Method
  summary: "\nReturns all PaymentTypes in SuperOffice db.<p></p>\n<strong>Returns:</strong>NSPaymentType[]<p></p>\n<pre><code>NSListAgent agent;\nNSPaymentType[] res = agent.GetPaymentTypes();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSPaymentType[] GetPaymentTypes()
    parameters:
    return:
      type: CRMScript.NetServer.NSPaymentType[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPaymentType[] res = agent.GetPaymentTypes();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPluginCapabilities
  commentId: M:CRMScript.NetServer.NSListAgent.GetPluginCapabilities
  id: 'GetPluginCapabilities'
  so.intellisense: NSListAgent.GetPluginCapabilities
  langs:
  - crmscript
  name: 'GetPluginCapabilities'
  nameWithType: NSListAgent.GetPluginCapabilities
  fullName: CRMScript.NetServer.NSListAgent.GetPluginCapabilities
  type: Method
  summary: "\nGet a list of plugin-dependent capabilities for a given document archive plugin.<br/>A standard set of properties is defined in SuperOffice.CRM.Documents.Constants.Capabilities.\n"
  remarks: 
  syntax: 
    content: StringDictionary GetPluginCapabilities(Integer pluginId)
    parameters:
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger pluginId;\nStringDictionary res = agent.GetPluginCapabilities(pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPluginList
  commentId: M:CRMScript.NetServer.NSListAgent.GetPluginList
  id: 'GetPluginList'
  so.intellisense: NSListAgent.GetPluginList
  langs:
  - crmscript
  name: 'GetPluginList'
  nameWithType: NSListAgent.GetPluginList
  fullName: CRMScript.NetServer.NSListAgent.GetPluginList
  type: Method
  summary: "\nGet a list of installed document plugins<p></p>\n<strong>Returns:</strong>StringDictionary<p></p>\n<pre><code>NSListAgent agent;\nStringDictionary res = agent.GetPluginList();</code></pre>\n"
  remarks: 
  syntax: 
    content: StringDictionary GetPluginList()
    parameters:
    return:
      type: CRMScript.Global.StringDictionary
  example: 
  - "\n<pre><code>NSListAgent agent;\nStringDictionary res = agent.GetPluginList();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPosition
  commentId: M:CRMScript.NetServer.NSListAgent.GetPosition
  id: 'GetPosition'
  so.intellisense: NSListAgent.GetPosition
  langs:
  - crmscript
  name: 'GetPosition'
  nameWithType: NSListAgent.GetPosition
  fullName: CRMScript.NetServer.NSListAgent.GetPosition
  type: Method
  summary: "\nGets an NSPosition object.\n"
  remarks: 
  syntax: 
    content: NSPosition GetPosition(Integer positionId);
    parameters:
    - id: positionId;
      type: CRMScript.Global.Integer
      description: 
    - id: positionId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPosition
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPosition thing = agent.GetPosition(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPositionList
  commentId: M:CRMScript.NetServer.NSListAgent.GetPositionList
  id: 'GetPositionList'
  so.intellisense: NSListAgent.GetPositionList
  langs:
  - crmscript
  name: 'GetPositionList'
  nameWithType: NSListAgent.GetPositionList
  fullName: CRMScript.NetServer.NSListAgent.GetPositionList
  type: Method
  summary: "\nGets a vector of NSPosition objects.\n"
  remarks: 
  syntax: 
    content: NSPosition[] GetPositionList(Integer[]  positionIds);
    parameters:
    - id: positionIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: positionIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPosition[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSPosition[] res = agent.GetPositionList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPositions
  commentId: M:CRMScript.NetServer.NSListAgent.GetPositions
  id: 'GetPositions'
  so.intellisense: NSListAgent.GetPositions
  langs:
  - crmscript
  name: 'GetPositions'
  nameWithType: NSListAgent.GetPositions
  fullName: CRMScript.NetServer.NSListAgent.GetPositions
  type: Method
  summary: "\nReturns all the positions a person could have.<p></p>\n<strong>Returns:</strong>NSPosition[]<p></p>\n<pre><code>NSListAgent agent;\nNSPosition[] res = agent.GetPositions();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSPosition[] GetPositions()
    parameters:
    return:
      type: CRMScript.NetServer.NSPosition[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPosition[] res = agent.GetPositions();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPriorities
  commentId: M:CRMScript.NetServer.NSListAgent.GetPriorities
  id: 'GetPriorities'
  so.intellisense: NSListAgent.GetPriorities
  langs:
  - crmscript
  name: 'GetPriorities'
  nameWithType: NSListAgent.GetPriorities
  fullName: CRMScript.NetServer.NSListAgent.GetPriorities
  type: Method
  summary: "\nReturns all priorities an appointment could have.<p></p>\n<strong>Returns:</strong>NSPriority[]<p></p>\n<pre><code>NSListAgent agent;\nNSPriority[] res = agent.GetPriorities();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSPriority[] GetPriorities()
    parameters:
    return:
      type: CRMScript.NetServer.NSPriority[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPriority[] res = agent.GetPriorities();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPriority
  commentId: M:CRMScript.NetServer.NSListAgent.GetPriority
  id: 'GetPriority'
  so.intellisense: NSListAgent.GetPriority
  langs:
  - crmscript
  name: 'GetPriority'
  nameWithType: NSListAgent.GetPriority
  fullName: CRMScript.NetServer.NSListAgent.GetPriority
  type: Method
  summary: "\nGets an NSPriority object.\n"
  remarks: 
  syntax: 
    content: NSPriority GetPriority(Integer priorityId);
    parameters:
    - id: priorityId;
      type: CRMScript.Global.Integer
      description: 
    - id: priorityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPriority
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSPriority thing = agent.GetPriority(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetPriorityList
  commentId: M:CRMScript.NetServer.NSListAgent.GetPriorityList
  id: 'GetPriorityList'
  so.intellisense: NSListAgent.GetPriorityList
  langs:
  - crmscript
  name: 'GetPriorityList'
  nameWithType: NSListAgent.GetPriorityList
  fullName: CRMScript.NetServer.NSListAgent.GetPriorityList
  type: Method
  summary: "\nGets a vector of Priority objects.\n"
  remarks: 
  syntax: 
    content: NSPriority[] GetPriorityList(Integer[]  priorityIds);
    parameters:
    - id: priorityIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: priorityIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSPriority[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSPriority[] res = agent.GetPriorityList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductCategories
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductCategories
  id: 'GetProductCategories'
  so.intellisense: NSListAgent.GetProductCategories
  langs:
  - crmscript
  name: 'GetProductCategories'
  nameWithType: NSListAgent.GetProductCategories
  fullName: CRMScript.NetServer.NSListAgent.GetProductCategories
  type: Method
  summary: "\nReturns all ProductCategories in SuperOffice list.<p></p>\n<strong>Returns:</strong>NSProductCategory[]<p></p>\n<pre><code>NSListAgent agent;\nNSProductCategory[] res = agent.GetProductCategories();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProductCategory[] GetProductCategories()
    parameters:
    return:
      type: CRMScript.NetServer.NSProductCategory[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductCategory[] res = agent.GetProductCategories();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductCategory
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductCategory
  id: 'GetProductCategory'
  so.intellisense: NSListAgent.GetProductCategory
  langs:
  - crmscript
  name: 'GetProductCategory'
  nameWithType: NSListAgent.GetProductCategory
  fullName: CRMScript.NetServer.NSListAgent.GetProductCategory
  type: Method
  summary: "\nGets an NSProductCategory object.\n"
  remarks: 
  syntax: 
    content: NSProductCategory GetProductCategory(Integer productCategoryId);
    parameters:
    - id: productCategoryId;
      type: CRMScript.Global.Integer
      description: 
    - id: productCategoryId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProductCategory
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductCategory thing = agent.GetProductCategory(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductFamilies
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductFamilies
  id: 'GetProductFamilies'
  so.intellisense: NSListAgent.GetProductFamilies
  langs:
  - crmscript
  name: 'GetProductFamilies'
  nameWithType: NSListAgent.GetProductFamilies
  fullName: CRMScript.NetServer.NSListAgent.GetProductFamilies
  type: Method
  summary: "\nReturns all NSProductFamily in SuperOffice list.<p></p>\n<strong>Returns:</strong>NSProductFamily[]<p></p>\n<pre><code>NSListAgent agent;\nNSProductFamily[] res = agent.GetProductFamilies();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProductFamily[] GetProductFamilies()
    parameters:
    return:
      type: CRMScript.NetServer.NSProductFamily[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductFamily[] res = agent.GetProductFamilies();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductFamily
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductFamily
  id: 'GetProductFamily'
  so.intellisense: NSListAgent.GetProductFamily
  langs:
  - crmscript
  name: 'GetProductFamily'
  nameWithType: NSListAgent.GetProductFamily
  fullName: CRMScript.NetServer.NSListAgent.GetProductFamily
  type: Method
  summary: "\nGets an NSProductFamily object.\n"
  remarks: 
  syntax: 
    content: NSProductFamily GetProductFamily(Integer productFamilyId);
    parameters:
    - id: productFamilyId;
      type: CRMScript.Global.Integer
      description: 
    - id: productFamilyId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProductFamily
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductFamily thing = agent.GetProductFamily(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductType
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductType
  id: 'GetProductType'
  so.intellisense: NSListAgent.GetProductType
  langs:
  - crmscript
  name: 'GetProductType'
  nameWithType: NSListAgent.GetProductType
  fullName: CRMScript.NetServer.NSListAgent.GetProductType
  type: Method
  summary: "\nGets an NSProductType object.\n"
  remarks: 
  syntax: 
    content: NSProductType GetProductType(Integer productTypeId);
    parameters:
    - id: productTypeId;
      type: CRMScript.Global.Integer
      description: 
    - id: productTypeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProductType
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductType thing = agent.GetProductType(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProductTypes
  commentId: M:CRMScript.NetServer.NSListAgent.GetProductTypes
  id: 'GetProductTypes'
  so.intellisense: NSListAgent.GetProductTypes
  langs:
  - crmscript
  name: 'GetProductTypes'
  nameWithType: NSListAgent.GetProductTypes
  fullName: CRMScript.NetServer.NSListAgent.GetProductTypes
  type: Method
  summary: "\nReturns all ProductTypes in SuperOffice list.<p></p>\n<strong>Returns:</strong>NSProductType[]<p></p>\n<pre><code>NSListAgent agent;\nNSProductType[] res = agent.GetProductTypes();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProductType[] GetProductTypes()
    parameters:
    return:
      type: CRMScript.NetServer.NSProductType[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProductType[] res = agent.GetProductTypes();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectStatus
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectStatus
  id: 'GetProjectStatus'
  so.intellisense: NSListAgent.GetProjectStatus
  langs:
  - crmscript
  name: 'GetProjectStatus'
  nameWithType: NSListAgent.GetProjectStatus
  fullName: CRMScript.NetServer.NSListAgent.GetProjectStatus
  type: Method
  summary: "\nGets an NSProjectStatus object.\n"
  remarks: 
  syntax: 
    content: NSProjectStatus GetProjectStatus(Integer projectStatusId);
    parameters:
    - id: projectStatusId;
      type: CRMScript.Global.Integer
      description: 
    - id: projectStatusId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProjectStatus
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectStatus thing = agent.GetProjectStatus(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectStatuses
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectStatuses
  id: 'GetProjectStatuses'
  so.intellisense: NSListAgent.GetProjectStatuses
  langs:
  - crmscript
  name: 'GetProjectStatuses'
  nameWithType: NSListAgent.GetProjectStatuses
  fullName: CRMScript.NetServer.NSListAgent.GetProjectStatuses
  type: Method
  summary: "\nGets all items from the Project Status (ProjStatus) table.<p></p>\n<strong>Returns:</strong>NSProjectStatus[]<p></p>\n<pre><code>NSListAgent agent;\nNSProjectStatus[] res = agent.GetProjectStatuses();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProjectStatus[] GetProjectStatuses()
    parameters:
    return:
      type: CRMScript.NetServer.NSProjectStatus[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectStatus[] res = agent.GetProjectStatuses();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectStatusList
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectStatusList
  id: 'GetProjectStatusList'
  so.intellisense: NSListAgent.GetProjectStatusList
  langs:
  - crmscript
  name: 'GetProjectStatusList'
  nameWithType: NSListAgent.GetProjectStatusList
  fullName: CRMScript.NetServer.NSListAgent.GetProjectStatusList
  type: Method
  summary: "\nGets a vector of NSProjectStatus objects.\n"
  remarks: 
  syntax: 
    content: NSProjectStatus[] GetProjectStatusList(Integer[]  projectStatusIds);
    parameters:
    - id: projectStatusIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: projectStatusIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProjectStatus[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSProjectStatus[] res = agent.GetProjectStatusList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectType
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectType
  id: 'GetProjectType'
  so.intellisense: NSListAgent.GetProjectType
  langs:
  - crmscript
  name: 'GetProjectType'
  nameWithType: NSListAgent.GetProjectType
  fullName: CRMScript.NetServer.NSListAgent.GetProjectType
  type: Method
  summary: "\nGets an NSProjectType object.\n"
  remarks: 
  syntax: 
    content: NSProjectType GetProjectType(Integer projectTypeId);
    parameters:
    - id: projectTypeId;
      type: CRMScript.Global.Integer
      description: 
    - id: projectTypeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProjectType
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectType thing = agent.GetProjectType(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectTypeEntity
  id: 'GetProjectTypeEntity'
  so.intellisense: NSListAgent.GetProjectTypeEntity
  langs:
  - crmscript
  name: 'GetProjectTypeEntity'
  nameWithType: NSListAgent.GetProjectTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.GetProjectTypeEntity
  type: Method
  summary: "\nGets an NSProjectTypeEntity object.\n"
  remarks: 
  syntax: 
    content: NSProjectTypeEntity GetProjectTypeEntity(Integer projectTypeEntityId);
    parameters:
    - id: projectTypeEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: projectTypeEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProjectTypeEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectTypeEntity thing = agent.GetProjectTypeEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectTypeList
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectTypeList
  id: 'GetProjectTypeList'
  so.intellisense: NSListAgent.GetProjectTypeList
  langs:
  - crmscript
  name: 'GetProjectTypeList'
  nameWithType: NSListAgent.GetProjectTypeList
  fullName: CRMScript.NetServer.NSListAgent.GetProjectTypeList
  type: Method
  summary: "\nGets a vector of NSProjectType objects.\n"
  remarks: 
  syntax: 
    content: NSProjectType[] GetProjectTypeList(Integer[]  projectTypeIds);
    parameters:
    - id: projectTypeIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: projectTypeIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSProjectType[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSProjectType[] res = agent.GetProjectTypeList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetProjectTypes
  commentId: M:CRMScript.NetServer.NSListAgent.GetProjectTypes
  id: 'GetProjectTypes'
  so.intellisense: NSListAgent.GetProjectTypes
  langs:
  - crmscript
  name: 'GetProjectTypes'
  nameWithType: NSListAgent.GetProjectTypes
  fullName: CRMScript.NetServer.NSListAgent.GetProjectTypes
  type: Method
  summary: "\nGets all items from the Project Type (ProjType) table.<p></p>\n<strong>Returns:</strong>NSProjectType[]<p></p>\n<pre><code>NSListAgent agent;\nNSProjectType[] res = agent.GetProjectTypes();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProjectType[] GetProjectTypes()
    parameters:
    return:
      type: CRMScript.NetServer.NSProjectType[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSProjectType[] res = agent.GetProjectTypes();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetQuickReplies
  commentId: M:CRMScript.NetServer.NSListAgent.GetQuickReplies
  id: 'GetQuickReplies'
  so.intellisense: NSListAgent.GetQuickReplies
  langs:
  - crmscript
  name: 'GetQuickReplies'
  nameWithType: NSListAgent.GetQuickReplies
  fullName: CRMScript.NetServer.NSListAgent.GetQuickReplies
  type: Method
  summary: "\nMethod to return all quick replies for a given associate<p></p>\n<strong>Returns:</strong>NSQuickReply[]<p></p>\n<pre><code>NSListAgent agent;\nNSQuickReply[] res = agent.GetQuickReplies();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSQuickReply[] GetQuickReplies()
    parameters:
    return:
      type: CRMScript.NetServer.NSQuickReply[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSQuickReply[] res = agent.GetQuickReplies();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetRating
  commentId: M:CRMScript.NetServer.NSListAgent.GetRating
  id: 'GetRating'
  so.intellisense: NSListAgent.GetRating
  langs:
  - crmscript
  name: 'GetRating'
  nameWithType: NSListAgent.GetRating
  fullName: CRMScript.NetServer.NSListAgent.GetRating
  type: Method
  summary: "\nGets an NSRating object.\n"
  remarks: 
  syntax: 
    content: NSRating GetRating(Integer ratingId);
    parameters:
    - id: ratingId;
      type: CRMScript.Global.Integer
      description: 
    - id: ratingId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSRating
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSRating thing = agent.GetRating(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetRatingList
  commentId: M:CRMScript.NetServer.NSListAgent.GetRatingList
  id: 'GetRatingList'
  so.intellisense: NSListAgent.GetRatingList
  langs:
  - crmscript
  name: 'GetRatingList'
  nameWithType: NSListAgent.GetRatingList
  fullName: CRMScript.NetServer.NSListAgent.GetRatingList
  type: Method
  summary: "\nGets a vector of NSRating objects.\n"
  remarks: 
  syntax: 
    content: NSRating[] GetRatingList(Integer[]  ratingIds);
    parameters:
    - id: ratingIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: ratingIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSRating[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSRating[] res = agent.GetRatingList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetRatings
  commentId: M:CRMScript.NetServer.NSListAgent.GetRatings
  id: 'GetRatings'
  so.intellisense: NSListAgent.GetRatings
  langs:
  - crmscript
  name: 'GetRatings'
  nameWithType: NSListAgent.GetRatings
  fullName: CRMScript.NetServer.NSListAgent.GetRatings
  type: Method
  summary: "\nReturns all ratings<p></p>\n<strong>Returns:</strong>NSRating[]<p></p>\n<pre><code>NSListAgent agent;\nNSRating[] res = agent.GetRatings();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSRating[] GetRatings()
    parameters:
    return:
      type: CRMScript.NetServer.NSRating[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSRating[] res = agent.GetRatings();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReason
  commentId: M:CRMScript.NetServer.NSListAgent.GetReason
  id: 'GetReason'
  so.intellisense: NSListAgent.GetReason
  langs:
  - crmscript
  name: 'GetReason'
  nameWithType: NSListAgent.GetReason
  fullName: CRMScript.NetServer.NSListAgent.GetReason
  type: Method
  summary: "\nGets an NSReason object.<p></p>\n<ul><li><strong>ReasonId</strong>The identifier of the NSReason object</li></ul><strong>Returns:</strong>NSReason<p></p>\n<pre><code>NSListAgent agent;\nNSReason thing = agent.GetReason(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReason GetReason(Integer reasonId);
    parameters:
    - id: reasonId;
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSReason
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSReason thing = agent.GetReason(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasonList
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasonList
  id: 'GetReasonList'
  so.intellisense: NSListAgent.GetReasonList
  langs:
  - crmscript
  name: 'GetReasonList'
  nameWithType: NSListAgent.GetReasonList
  fullName: CRMScript.NetServer.NSListAgent.GetReasonList
  type: Method
  summary: "\nGets a vector of NSReason objects.<p></p>\n<ul><li><strong>ReasonIds</strong>The identifiers of the NSReason objects</li></ul><strong>Returns:</strong>NSReason[]<p></p>\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReason[] res = agent.GetReasonList(ids);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReason[] GetReasonList(Integer[]  reasonIds);
    parameters:
    - id: reasonIds;
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSReason[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReason[] res = agent.GetReasonList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasons
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasons
  id: 'GetReasons'
  so.intellisense: NSListAgent.GetReasons
  langs:
  - crmscript
  name: 'GetReasons'
  nameWithType: NSListAgent.GetReasons
  fullName: CRMScript.NetServer.NSListAgent.GetReasons
  type: Method
  summary: "\nReturns all reasons<p></p>\n<strong>Returns:</strong>NSReason[]<p></p>\n<pre><code>NSListAgent agent;\nNSReason[] res = agent.GetReasons();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReason[] GetReasons()
    parameters:
    return:
      type: CRMScript.NetServer.NSReason[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSReason[] res = agent.GetReasons();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasonSold
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasonSold
  id: 'GetReasonSold'
  so.intellisense: NSListAgent.GetReasonSold
  langs:
  - crmscript
  name: 'GetReasonSold'
  nameWithType: NSListAgent.GetReasonSold
  fullName: CRMScript.NetServer.NSListAgent.GetReasonSold
  type: Method
  summary: "\nGets an NSReasonSold object.<p></p>\n<ul><li><strong>ReasonSoldId</strong>The identifier of the NSReasonSold object</li></ul><strong>Returns:</strong>NSReasonSold<p></p>\n<pre><code>NSListAgent agent;\nNSReasonSold thing = agent.GetReasonSold(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReasonSold GetReasonSold(Integer reasonSoldId);
    parameters:
    - id: reasonSoldId;
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSReasonSold
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSReasonSold thing = agent.GetReasonSold(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasonSoldList
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasonSoldList
  id: 'GetReasonSoldList'
  so.intellisense: NSListAgent.GetReasonSoldList
  langs:
  - crmscript
  name: 'GetReasonSoldList'
  nameWithType: NSListAgent.GetReasonSoldList
  fullName: CRMScript.NetServer.NSListAgent.GetReasonSoldList
  type: Method
  summary: "\nGets a vector of ReasonSold objects.<p></p>\n<ul><li><strong>ReasonSoldIds</strong>The identifiers of the NSReasonSold objects</li></ul><strong>Returns:</strong>NSReasonSold[]<p></p>\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReasonSold[] res = agent.GetReasonSoldList(ids);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReasonSold[] GetReasonSoldList(Integer[]  reasonSoldIds);
    parameters:
    - id: reasonSoldIds;
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSReasonSold[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReasonSold[] res = agent.GetReasonSoldList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasonStalled
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasonStalled
  id: 'GetReasonStalled'
  so.intellisense: NSListAgent.GetReasonStalled
  langs:
  - crmscript
  name: 'GetReasonStalled'
  nameWithType: NSListAgent.GetReasonStalled
  fullName: CRMScript.NetServer.NSListAgent.GetReasonStalled
  type: Method
  summary: "\nGets an NSReasonStalled object.<p></p>\n<ul><li><strong>ReasonStalledId</strong>The identifier of the NSReasonStalled object</li></ul><strong>Returns:</strong>NSReasonStalled<p></p>\n<pre><code>NSListAgent agent;\nNSReasonStalled thing = agent.GetReasonStalled(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReasonStalled GetReasonStalled(Integer reasonStalledId);
    parameters:
    - id: reasonStalledId;
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSReasonStalled
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSReasonStalled thing = agent.GetReasonStalled(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetReasonStalledList
  commentId: M:CRMScript.NetServer.NSListAgent.GetReasonStalledList
  id: 'GetReasonStalledList'
  so.intellisense: NSListAgent.GetReasonStalledList
  langs:
  - crmscript
  name: 'GetReasonStalledList'
  nameWithType: NSListAgent.GetReasonStalledList
  fullName: CRMScript.NetServer.NSListAgent.GetReasonStalledList
  type: Method
  summary: "\nGets a vector of ReasonStalled objects.<p></p>\n<ul><li><strong>ReasonStalledIds</strong>The identifiers of the NSReasonStalled objects</li></ul><strong>Returns:</strong>NSReasonStalled[]<p></p>\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReasonStalled[] res = agent.GetReasonStalledList(ids);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSReasonStalled[] GetReasonStalledList(Integer[]  reasonStalledIds);
    parameters:
    - id: reasonStalledIds;
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSReasonStalled[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSReasonStalled[] res = agent.GetReasonStalledList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetRelationDefinitionEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetRelationDefinitionEntity
  id: 'GetRelationDefinitionEntity'
  so.intellisense: NSListAgent.GetRelationDefinitionEntity
  langs:
  - crmscript
  name: 'GetRelationDefinitionEntity'
  nameWithType: NSListAgent.GetRelationDefinitionEntity
  fullName: CRMScript.NetServer.NSListAgent.GetRelationDefinitionEntity
  type: Method
  summary: "\nGets an NSRelationDefinitionEntity object.<p></p>\n<ul><li><strong>RelationDefinitionEntityId</strong>The identifier of the NSRelationDefinitionEntity object</li></ul><strong>Returns:</strong>NSRelationDefinitionEntity<p></p>\n<pre><code>NSListAgent agent;\nNSRelationDefinitionEntity thing = agent.GetRelationDefinitionEntity(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSRelationDefinitionEntity GetRelationDefinitionEntity(Integer relationDefinitionEntityId);
    parameters:
    - id: relationDefinitionEntityId;
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSRelationDefinitionEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSRelationDefinitionEntity thing = agent.GetRelationDefinitionEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetResourceEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetResourceEntity
  id: 'GetResourceEntity'
  so.intellisense: NSListAgent.GetResourceEntity
  langs:
  - crmscript
  name: 'GetResourceEntity'
  nameWithType: NSListAgent.GetResourceEntity
  fullName: CRMScript.NetServer.NSListAgent.GetResourceEntity
  type: Method
  summary: "\nGets an NSResourceEntity object.<p></p>\n<ul><li><strong>ResourceEntityId</strong>The identifier of the NSResourceEntity object</li></ul><strong>Returns:</strong>NSResourceEntity<p></p>\n<pre><code>NSListAgent agent;\nNSResourceEntity thing = agent.GetResourceEntity(123);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSResourceEntity GetResourceEntity(Integer resourceEntityId);
    parameters:
    - id: resourceEntityId;
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSResourceEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSResourceEntity thing = agent.GetResourceEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSaleStageEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetSaleStageEntity
  id: 'GetSaleStageEntity'
  so.intellisense: NSListAgent.GetSaleStageEntity
  langs:
  - crmscript
  name: 'GetSaleStageEntity'
  nameWithType: NSListAgent.GetSaleStageEntity
  fullName: CRMScript.NetServer.NSListAgent.GetSaleStageEntity
  type: Method
  summary: "\nGets an NSSaleStageEntity object.\n"
  remarks: 
  syntax: 
    content: NSSaleStageEntity GetSaleStageEntity(Integer saleStageEntityId);
    parameters:
    - id: saleStageEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: saleStageEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSaleStageEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleStageEntity thing = agent.GetSaleStageEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSaleType
  commentId: M:CRMScript.NetServer.NSListAgent.GetSaleType
  id: 'GetSaleType'
  so.intellisense: NSListAgent.GetSaleType
  langs:
  - crmscript
  name: 'GetSaleType'
  nameWithType: NSListAgent.GetSaleType
  fullName: CRMScript.NetServer.NSListAgent.GetSaleType
  type: Method
  summary: "\nGets an NSSaleType object.\n"
  remarks: 
  syntax: 
    content: NSSaleType GetSaleType(Integer saleTypeId);
    parameters:
    - id: saleTypeId;
      type: CRMScript.Global.Integer
      description: 
    - id: saleTypeId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSaleType
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleType thing = agent.GetSaleType(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSaleTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetSaleTypeEntity
  id: 'GetSaleTypeEntity'
  so.intellisense: NSListAgent.GetSaleTypeEntity
  langs:
  - crmscript
  name: 'GetSaleTypeEntity'
  nameWithType: NSListAgent.GetSaleTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.GetSaleTypeEntity
  type: Method
  summary: "\nGets an NSSaleTypeEntity object.\n"
  remarks: 
  syntax: 
    content: NSSaleTypeEntity GetSaleTypeEntity(Integer saleTypeEntityId);
    parameters:
    - id: saleTypeEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: saleTypeEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSaleTypeEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSaleTypeEntity thing = agent.GetSaleTypeEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSaleTypeList
  commentId: M:CRMScript.NetServer.NSListAgent.GetSaleTypeList
  id: 'GetSaleTypeList'
  so.intellisense: NSListAgent.GetSaleTypeList
  langs:
  - crmscript
  name: 'GetSaleTypeList'
  nameWithType: NSListAgent.GetSaleTypeList
  fullName: CRMScript.NetServer.NSListAgent.GetSaleTypeList
  type: Method
  summary: "\nGets a vector of NSSaleType objects.\n"
  remarks: 
  syntax: 
    content: NSSaleType[] GetSaleTypeList(Integer[]  saleTypeIds);
    parameters:
    - id: saleTypeIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: saleTypeIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSaleType[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSSaleType[] res = agent.GetSaleTypeList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSelectionCategory
  commentId: M:CRMScript.NetServer.NSListAgent.GetSelectionCategory
  id: 'GetSelectionCategory'
  so.intellisense: NSListAgent.GetSelectionCategory
  langs:
  - crmscript
  name: 'GetSelectionCategory'
  nameWithType: NSListAgent.GetSelectionCategory
  fullName: CRMScript.NetServer.NSListAgent.GetSelectionCategory
  type: Method
  summary: "\nGets an NSSelectionCategory object.\n"
  remarks: 
  syntax: 
    content: NSSelectionCategory GetSelectionCategory(Integer selectionCategoryId);
    parameters:
    - id: selectionCategoryId;
      type: CRMScript.Global.Integer
      description: 
    - id: selectionCategoryId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSelectionCategory
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSelectionCategory thing = agent.GetSelectionCategory(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSelectionCategoryList
  commentId: M:CRMScript.NetServer.NSListAgent.GetSelectionCategoryList
  id: 'GetSelectionCategoryList'
  so.intellisense: NSListAgent.GetSelectionCategoryList
  langs:
  - crmscript
  name: 'GetSelectionCategoryList'
  nameWithType: NSListAgent.GetSelectionCategoryList
  fullName: CRMScript.NetServer.NSListAgent.GetSelectionCategoryList
  type: Method
  summary: "\nGets a vector of SelectionCategory objects.\n"
  remarks: 
  syntax: 
    content: NSSelectionCategory[] GetSelectionCategoryList(Integer[]  selectionCategoryIds);
    parameters:
    - id: selectionCategoryIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: selectionCategoryIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSelectionCategory[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSSelectionCategory[] res = agent.GetSelectionCategoryList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSource
  commentId: M:CRMScript.NetServer.NSListAgent.GetSource
  id: 'GetSource'
  so.intellisense: NSListAgent.GetSource
  langs:
  - crmscript
  name: 'GetSource'
  nameWithType: NSListAgent.GetSource
  fullName: CRMScript.NetServer.NSListAgent.GetSource
  type: Method
  summary: "\nGets an NSSource object.\n"
  remarks: 
  syntax: 
    content: NSSource GetSource(Integer sourceId);
    parameters:
    - id: sourceId;
      type: CRMScript.Global.Integer
      description: 
    - id: sourceId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSource
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSource thing = agent.GetSource(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSourceList
  commentId: M:CRMScript.NetServer.NSListAgent.GetSourceList
  id: 'GetSourceList'
  so.intellisense: NSListAgent.GetSourceList
  langs:
  - crmscript
  name: 'GetSourceList'
  nameWithType: NSListAgent.GetSourceList
  fullName: CRMScript.NetServer.NSListAgent.GetSourceList
  type: Method
  summary: "\nGets a vector of Source objects.\n"
  remarks: 
  syntax: 
    content: NSSource[] GetSourceList(Integer[]  sourceIds);
    parameters:
    - id: sourceIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: sourceIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSSource[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSSource[] res = agent.GetSourceList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetSources
  commentId: M:CRMScript.NetServer.NSListAgent.GetSources
  id: 'GetSources'
  so.intellisense: NSListAgent.GetSources
  langs:
  - crmscript
  name: 'GetSources'
  nameWithType: NSListAgent.GetSources
  fullName: CRMScript.NetServer.NSListAgent.GetSources
  type: Method
  summary: "\nReturns all sources<p></p>\n<strong>Returns:</strong>NSSource[]<p></p>\n<pre><code>NSListAgent agent;\nNSSource[] res = agent.GetSources();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSource[] GetSources()
    parameters:
    return:
      type: CRMScript.NetServer.NSSource[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSSource[] res = agent.GetSources();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTask
  commentId: M:CRMScript.NetServer.NSListAgent.GetTask
  id: 'GetTask'
  so.intellisense: NSListAgent.GetTask
  langs:
  - crmscript
  name: 'GetTask'
  nameWithType: NSListAgent.GetTask
  fullName: CRMScript.NetServer.NSListAgent.GetTask
  type: Method
  summary: "\nGets an NSTask object.\n"
  remarks: 
  syntax: 
    content: NSTask GetTask(Integer taskId);
    parameters:
    - id: taskId;
      type: CRMScript.Global.Integer
      description: 
    - id: taskId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTask
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTask thing = agent.GetTask(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTaskList
  commentId: M:CRMScript.NetServer.NSListAgent.GetTaskList
  id: 'GetTaskList'
  so.intellisense: NSListAgent.GetTaskList
  langs:
  - crmscript
  name: 'GetTaskList'
  nameWithType: NSListAgent.GetTaskList
  fullName: CRMScript.NetServer.NSListAgent.GetTaskList
  type: Method
  summary: "\nGets a vector of Task objects.\n"
  remarks: 
  syntax: 
    content: NSTask[] GetTaskList(Integer[]  taskIds);
    parameters:
    - id: taskIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: taskIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTask[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSTask[] res = agent.GetTaskList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTasks
  commentId: M:CRMScript.NetServer.NSListAgent.GetTasks
  id: 'GetTasks'
  so.intellisense: NSListAgent.GetTasks
  langs:
  - crmscript
  name: 'GetTasks'
  nameWithType: NSListAgent.GetTasks
  fullName: CRMScript.NetServer.NSListAgent.GetTasks
  type: Method
  summary: "\nReturns all appointment tasks<p></p>\n<strong>Returns:</strong>NSTask[]<p></p>\n<pre><code>NSListAgent agent;\nNSTask[] res = agent.GetTasks();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTask[] GetTasks()
    parameters:
    return:
      type: CRMScript.NetServer.NSTask[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTask[] res = agent.GetTasks();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketCategories
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketCategories
  id: 'GetTicketCategories'
  so.intellisense: NSListAgent.GetTicketCategories
  langs:
  - crmscript
  name: 'GetTicketCategories'
  nameWithType: NSListAgent.GetTicketCategories
  fullName: CRMScript.NetServer.NSListAgent.GetTicketCategories
  type: Method
  summary: "\n<strong>Returns:</strong>NSTicketCategoryEntity[]<p></p>\n<pre><code>NSListAgent agent;\nNSTicketCategoryEntity[] thing = agent.GetTicketCategories();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketCategoryEntity[] GetTicketCategories()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketCategoryEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketCategoryEntity[] thing = agent.GetTicketCategories();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketCategoriesForUserGroups
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketCategoriesForUserGroups
  id: 'GetTicketCategoriesForUserGroups'
  so.intellisense: NSListAgent.GetTicketCategoriesForUserGroups
  langs:
  - crmscript
  name: 'GetTicketCategoriesForUserGroups'
  nameWithType: NSListAgent.GetTicketCategoriesForUserGroups
  fullName: CRMScript.NetServer.NSListAgent.GetTicketCategoriesForUserGroups
  type: Method
  summary: "\nTicket categories for user groups\n"
  remarks: 
  syntax: 
    content: NSMDOListItem[] GetTicketCategoriesForUserGroups(Integer[] userGroupIds)
    parameters:
    - id: userGroupIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.NetServer.NSMDOListItem[]
  example: 
- uid: CRMScript.NetServer.NSListAgent.GetTicketCategory
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketCategory
  id: 'GetTicketCategory'
  so.intellisense: NSListAgent.GetTicketCategory
  langs:
  - crmscript
  name: 'GetTicketCategory'
  nameWithType: NSListAgent.GetTicketCategory
  fullName: CRMScript.NetServer.NSListAgent.GetTicketCategory
  type: Method
  summary: "\nGets an NSTicketCategory object.\n"
  remarks: 
  syntax: 
    content: NSTicketCategory GetTicketCategory(Integer ticketCategoryId);
    parameters:
    - id: ticketCategoryId;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketCategoryId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketCategory
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketCategory thing = agent.GetTicketCategory(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketCategoryEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketCategoryEntity
  id: 'GetTicketCategoryEntity'
  so.intellisense: NSListAgent.GetTicketCategoryEntity
  langs:
  - crmscript
  name: 'GetTicketCategoryEntity'
  nameWithType: NSListAgent.GetTicketCategoryEntity
  fullName: CRMScript.NetServer.NSListAgent.GetTicketCategoryEntity
  type: Method
  summary: "\nGets an NSTicketCategoryEntity object.\n"
  remarks: 
  syntax: 
    content: NSTicketCategoryEntity GetTicketCategoryEntity(Integer ticketCategoryEntityId);
    parameters:
    - id: ticketCategoryEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketCategoryEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketCategoryEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketCategoryEntity thing = agent.GetTicketCategoryEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketCategoryList
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketCategoryList
  id: 'GetTicketCategoryList'
  so.intellisense: NSListAgent.GetTicketCategoryList
  langs:
  - crmscript
  name: 'GetTicketCategoryList'
  nameWithType: NSListAgent.GetTicketCategoryList
  fullName: CRMScript.NetServer.NSListAgent.GetTicketCategoryList
  type: Method
  summary: "\nGets a vector of NSTicketCategoryEntity objects.\n"
  remarks: 
  syntax: 
    content: NSTicketCategoryEntity[] GetTicketCategoryList(Integer[]  ticketCategoryEntityIds);
    parameters:
    - id: ticketCategoryEntityIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: ticketCategoryEntityIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketCategoryEntity[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSTicketCategoryEntity[] res = agent.GetTicketCategoryList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketPriorities
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketPriorities
  id: 'GetTicketPriorities'
  so.intellisense: NSListAgent.GetTicketPriorities
  langs:
  - crmscript
  name: 'GetTicketPriorities'
  nameWithType: NSListAgent.GetTicketPriorities
  fullName: CRMScript.NetServer.NSListAgent.GetTicketPriorities
  type: Method
  summary: "\n<strong>Returns:</strong>NSTicketPriority[]<p></p>\n<pre><code>NSListAgent agent;\nNSTicketPriority[] thing = agent.GetTicketPriorities();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketPriority[] GetTicketPriorities()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketPriority[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketPriority[] thing = agent.GetTicketPriorities();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketPriority
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketPriority
  id: 'GetTicketPriority'
  so.intellisense: NSListAgent.GetTicketPriority
  langs:
  - crmscript
  name: 'GetTicketPriority'
  nameWithType: NSListAgent.GetTicketPriority
  fullName: CRMScript.NetServer.NSListAgent.GetTicketPriority
  type: Method
  summary: "\nGets an NSTicketPriority object.\n"
  remarks: 
  syntax: 
    content: NSTicketPriority GetTicketPriority(Integer ticketPriorityId);
    parameters:
    - id: ticketPriorityId;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketPriorityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketPriority
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketPriority thing = agent.GetTicketPriority(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketPriorityEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketPriorityEntity
  id: 'GetTicketPriorityEntity'
  so.intellisense: NSListAgent.GetTicketPriorityEntity
  langs:
  - crmscript
  name: 'GetTicketPriorityEntity'
  nameWithType: NSListAgent.GetTicketPriorityEntity
  fullName: CRMScript.NetServer.NSListAgent.GetTicketPriorityEntity
  type: Method
  summary: "\nGets an NSTicketPriorityEntity object.\n"
  remarks: 
  syntax: 
    content: NSTicketPriorityEntity GetTicketPriorityEntity(Integer ticketPriorityEntityId);
    parameters:
    - id: ticketPriorityEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketPriorityEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketPriorityEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketPriorityEntity thing = agent.GetTicketPriorityEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketPriorityList
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketPriorityList
  id: 'GetTicketPriorityList'
  so.intellisense: NSListAgent.GetTicketPriorityList
  langs:
  - crmscript
  name: 'GetTicketPriorityList'
  nameWithType: NSListAgent.GetTicketPriorityList
  fullName: CRMScript.NetServer.NSListAgent.GetTicketPriorityList
  type: Method
  summary: "\nGets a vector of NSTicketPriority objects.\n"
  remarks: 
  syntax: 
    content: NSTicketPriority[] GetTicketPriorityList(Integer[]  ticketPriorityIds);
    parameters:
    - id: ticketPriorityIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: ticketPriorityIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketPriority[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSTicketPriority[] res = agent.GetTicketPriorityList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketStatusEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketStatusEntity
  id: 'GetTicketStatusEntity'
  so.intellisense: NSListAgent.GetTicketStatusEntity
  langs:
  - crmscript
  name: 'GetTicketStatusEntity'
  nameWithType: NSListAgent.GetTicketStatusEntity
  fullName: CRMScript.NetServer.NSListAgent.GetTicketStatusEntity
  type: Method
  summary: "\nGets an NSTicketStatusEntity object.\n"
  remarks: 
  syntax: 
    content: NSTicketStatusEntity GetTicketStatusEntity(Integer ticketStatusEntityId);
    parameters:
    - id: ticketStatusEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: ticketStatusEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketStatusEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketStatusEntity thing = agent.GetTicketStatusEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketStatuses
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketStatuses
  id: 'GetTicketStatuses'
  so.intellisense: NSListAgent.GetTicketStatuses
  langs:
  - crmscript
  name: 'GetTicketStatuses'
  nameWithType: NSListAgent.GetTicketStatuses
  fullName: CRMScript.NetServer.NSListAgent.GetTicketStatuses
  type: Method
  summary: "\n<strong>Returns:</strong>NSTicketStatusEntity[]<p></p>\n<pre><code>NSListAgent agent;\nNSTicketStatusEntity[] res = agent.GetTicketStatuses();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketStatusEntity[] GetTicketStatuses()
    parameters:
    return:
      type: CRMScript.NetServer.NSTicketStatusEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSTicketStatusEntity[] res = agent.GetTicketStatuses();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetTicketStatusList
  commentId: M:CRMScript.NetServer.NSListAgent.GetTicketStatusList
  id: 'GetTicketStatusList'
  so.intellisense: NSListAgent.GetTicketStatusList
  langs:
  - crmscript
  name: 'GetTicketStatusList'
  nameWithType: NSListAgent.GetTicketStatusList
  fullName: CRMScript.NetServer.NSListAgent.GetTicketStatusList
  type: Method
  summary: "\nGets a vector of NSTicketStatusEntity objects.\n"
  remarks: 
  syntax: 
    content: NSTicketStatusEntity[] GetTicketStatusList(Integer[]  ticketStatusEntityIds);
    parameters:
    - id: ticketStatusEntityIds;
      type: CRMScript.Global.Integer[]
      description: 
    - id: ticketStatusEntityIds
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSTicketStatusEntity[]
  example: 
  - "\n<pre><code>Integer[] ids;\nNSListAgent agent;\nNSTicketStatusEntity[] res = agent.GetTicketStatusList(ids);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetVisibleForUserGroups
  commentId: M:CRMScript.NetServer.NSListAgent.GetVisibleForUserGroups
  id: 'GetVisibleForUserGroups'
  so.intellisense: NSListAgent.GetVisibleForUserGroups
  langs:
  - crmscript
  name: 'GetVisibleForUserGroups'
  nameWithType: NSListAgent.GetVisibleForUserGroups
  fullName: CRMScript.NetServer.NSListAgent.GetVisibleForUserGroups
  type: Method
  summary: "\nList of User groups that this list item is visible for\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetVisibleForUserGroups(Integer udListDefinitionId, Integer listItemId)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger listItemId;\nNSSelectableMDOListItem[] res = agent.GetVisibleForUserGroups(udListDefinitionId, listItemId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetVisibleForUserGroupsFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.GetVisibleForUserGroupsFromListName
  id: 'GetVisibleForUserGroupsFromListName'
  so.intellisense: NSListAgent.GetVisibleForUserGroupsFromListName
  langs:
  - crmscript
  name: 'GetVisibleForUserGroupsFromListName'
  nameWithType: NSListAgent.GetVisibleForUserGroupsFromListName
  fullName: CRMScript.NetServer.NSListAgent.GetVisibleForUserGroupsFromListName
  type: Method
  summary: "\nList of User groups that this list item is visible for\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] GetVisibleForUserGroupsFromListName(String udListDefinitionName, Integer listItemId)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger listItemId;\nNSSelectableMDOListItem[] res = agent.GetVisibleForUserGroupsFromListName(udListDefinitionName, listItemId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetWebPanelByProgId
  commentId: M:CRMScript.NetServer.NSListAgent.GetWebPanelByProgId
  id: 'GetWebPanelByProgId'
  so.intellisense: NSListAgent.GetWebPanelByProgId
  langs:
  - crmscript
  name: 'GetWebPanelByProgId'
  nameWithType: NSListAgent.GetWebPanelByProgId
  fullName: CRMScript.NetServer.NSListAgent.GetWebPanelByProgId
  type: Method
  summary: "\nGet a web panel using the ProgId key that was specified when it was created\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity GetWebPanelByProgId(String progId)
    parameters:
    - id: progId
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.NetServer.NSWebPanelEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nString progId;\nNSWebPanelEntity res = agent.GetWebPanelByProgId(progId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetWebPanelEntity
  commentId: M:CRMScript.NetServer.NSListAgent.GetWebPanelEntity
  id: 'GetWebPanelEntity'
  so.intellisense: NSListAgent.GetWebPanelEntity
  langs:
  - crmscript
  name: 'GetWebPanelEntity'
  nameWithType: NSListAgent.GetWebPanelEntity
  fullName: CRMScript.NetServer.NSListAgent.GetWebPanelEntity
  type: Method
  summary: "\nGets an NSWebPanelEntity object.\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity GetWebPanelEntity(Integer webPanelEntityId);
    parameters:
    - id: webPanelEntityId;
      type: CRMScript.Global.Integer
      description: 
    - id: webPanelEntityId
      type: 
      description: 
    return:
      type: CRMScript.NetServer.NSWebPanelEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSWebPanelEntity thing = agent.GetWebPanelEntity(123);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GetWebPanelList
  commentId: M:CRMScript.NetServer.NSListAgent.GetWebPanelList
  id: 'GetWebPanelList'
  so.intellisense: NSListAgent.GetWebPanelList
  langs:
  - crmscript
  name: 'GetWebPanelList'
  nameWithType: NSListAgent.GetWebPanelList
  fullName: CRMScript.NetServer.NSListAgent.GetWebPanelList
  type: Method
  summary: "\nReturn a list of all web panels.<p></p>\n<strong>Returns:</strong>NSWebPanelEntity[]<p></p>\n<pre><code>NSListAgent agent;\nNSWebPanelEntity[] res = agent.GetWebPanelList();</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity[] GetWebPanelList()
    parameters:
    return:
      type: CRMScript.NetServer.NSWebPanelEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSWebPanelEntity[] res = agent.GetWebPanelList();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.GlobalChangeTicketStatus
  commentId: M:CRMScript.NetServer.NSListAgent.GlobalChangeTicketStatus
  id: 'GlobalChangeTicketStatus'
  so.intellisense: NSListAgent.GlobalChangeTicketStatus
  langs:
  - crmscript
  name: 'GlobalChangeTicketStatus'
  nameWithType: NSListAgent.GlobalChangeTicketStatus
  fullName: CRMScript.NetServer.NSListAgent.GlobalChangeTicketStatus
  type: Method
  summary: "\nThis method will change all references from one ticket status to another. Typically used in conjuction with delete\n"
  remarks: 
  syntax: 
    content: Void GlobalChangeTicketStatus(Integer fromTicketStatusId, Integer toTicketStatusId)
    parameters:
    - id: fromTicketStatusId
      type: CRMScript.Global.Integer
      description: 
    - id: toTicketStatusId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger fromTicketStatusId;\nInteger toTicketStatusId;\nagent.GlobalChangeTicketStatus(fromTicketStatusId, toTicketStatusId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.MoveAllTickets
  commentId: M:CRMScript.NetServer.NSListAgent.MoveAllTickets
  id: 'MoveAllTickets'
  so.intellisense: NSListAgent.MoveAllTickets
  langs:
  - crmscript
  name: 'MoveAllTickets'
  nameWithType: NSListAgent.MoveAllTickets
  fullName: CRMScript.NetServer.NSListAgent.MoveAllTickets
  type: Method
  summary: "\nMove all tickets from one ticket category to another\n"
  remarks: 
  syntax: 
    content: Void MoveAllTickets(Integer fromTicketCategoryId, Integer toTicketCategoryId)
    parameters:
    - id: fromTicketCategoryId
      type: CRMScript.Global.Integer
      description: 
    - id: toTicketCategoryId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger fromTicketCategoryId;\nInteger toTicketCategoryId;\nagent.MoveAllTickets(fromTicketCategoryId, toTicketCategoryId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.MoveListItem
  commentId: M:CRMScript.NetServer.NSListAgent.MoveListItem
  id: 'MoveListItem'
  so.intellisense: NSListAgent.MoveListItem
  langs:
  - crmscript
  name: 'MoveListItem'
  nameWithType: NSListAgent.MoveListItem
  fullName: CRMScript.NetServer.NSListAgent.MoveListItem
  type: Method
  summary: "\nMove a list item up or down in the list based on rank\n"
  remarks: 
  syntax: 
    content: Void MoveListItem(Integer udListDefinitionId, Integer listItemId, Integer direction)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: direction
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.#ctor
  commentId: M:CRMScript.NetServer.NSListAgent.#ctor
  id: '#ctor'
  so.intellisense: Void.NSListAgent
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: NSListAgent.#ctor
  fullName: CRMScript.NetServer.NSListAgent.#ctor
  type: Constructor
  summary: "\nCollection of all services that work with Lists. These are typical lists of data shown in dropdown-list, checkbox lists, etc.\n"
  remarks: 
  syntax: 
    content: NSListAgent
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.callMethod(arg1, arg2);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.RebuildFullnames
  commentId: M:CRMScript.NetServer.NSListAgent.RebuildFullnames
  id: 'RebuildFullnames'
  so.intellisense: NSListAgent.RebuildFullnames
  langs:
  - crmscript
  name: 'RebuildFullnames'
  nameWithType: NSListAgent.RebuildFullnames
  fullName: CRMScript.NetServer.NSListAgent.RebuildFullnames
  type: Method
  summary: "\nUpdate the fullname field of all categories. Use this e.g. when changing parentId or renaming a category with children.<p></p>\n<pre><code>NSListAgent agent;\nagent.RebuildFullnames();</code></pre>\n"
  remarks: 
  syntax: 
    content: Void RebuildFullnames()
    parameters:
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nagent.RebuildFullnames();</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveAllFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.SaveAllFromListDefinition
  id: 'SaveAllFromListDefinition'
  so.intellisense: NSListAgent.SaveAllFromListDefinition
  langs:
  - crmscript
  name: 'SaveAllFromListDefinition'
  nameWithType: NSListAgent.SaveAllFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.SaveAllFromListDefinition
  type: Method
  summary: "\nSave all list items for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity[] SaveAllFromListDefinition(Integer udListDefinitionId, NSListItemEntity[] items)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: items
      type: CRMScript.NetServer.NSListItemEntity[]
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nNSListItemEntity[] items;\nNSListItemEntity[] res = agent.SaveAllFromListDefinition(udListDefinitionId, items);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveAllFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveAllFromListName
  id: 'SaveAllFromListName'
  so.intellisense: NSListAgent.SaveAllFromListName
  langs:
  - crmscript
  name: 'SaveAllFromListName'
  nameWithType: NSListAgent.SaveAllFromListName
  fullName: CRMScript.NetServer.NSListAgent.SaveAllFromListName
  type: Method
  summary: "\nSave all list items for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity[] SaveAllFromListName(String udListDefinitionName, NSListItemEntity[] items)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: items
      type: CRMScript.NetServer.NSListItemEntity[]
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nNSListItemEntity[] items;\nNSListItemEntity[] res = agent.SaveAllFromListName(udListDefinitionName, items);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveAmountClassEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveAmountClassEntity
  id: 'SaveAmountClassEntity'
  so.intellisense: NSListAgent.SaveAmountClassEntity
  langs:
  - crmscript
  name: 'SaveAmountClassEntity'
  nameWithType: NSListAgent.SaveAmountClassEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveAmountClassEntity
  type: Method
  summary: "\nUpdates the existing NSAmountClassEntity or creates a new NSAmountClassEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>amountClassEntity</strong>The NSAmountClassEntity to save.</li></ul><strong>Returns:</strong>NSAmountClassEntity<p></p>\n<pre><code>NSList  agent;\nNSAmountClassEntity thing = agent.CreateDefaultAmountClassEntity();\nthing = agent.SaveAmountClassEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSAmountClassEntity SaveAmountClassEntity(NSAmountClassEntity amountClassEntity);
    parameters:
    - id: amountClassEntity;
      type: CRMScript.NetServer.NSAmountClassEntity
      description: 
    return:
      type: CRMScript.NetServer.NSAmountClassEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSAmountClassEntity thing = agent.CreateDefaultAmountClassEntity();\nthing = agent.SaveAmountClassEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveConsentPurpose
  commentId: M:CRMScript.NetServer.NSListAgent.SaveConsentPurpose
  id: 'SaveConsentPurpose'
  so.intellisense: NSListAgent.SaveConsentPurpose
  langs:
  - crmscript
  name: 'SaveConsentPurpose'
  nameWithType: NSListAgent.SaveConsentPurpose
  fullName: CRMScript.NetServer.NSListAgent.SaveConsentPurpose
  type: Method
  summary: "\nSave an NSConsentPurpose object\n"
  remarks: 
  syntax: 
    content: NSConsentPurpose SaveConsentPurpose(NSConsentPurpose consentPurpose)
    parameters:
    - id: consentPurpose
      type: CRMScript.NetServer.NSConsentPurpose
      description: 
    return:
      type: CRMScript.NetServer.NSConsentPurpose
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentPurpose consentPurpose;\nNSConsentPurpose res = agent.SaveConsentPurpose(consentPurpose);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveConsentSource
  commentId: M:CRMScript.NetServer.NSListAgent.SaveConsentSource
  id: 'SaveConsentSource'
  so.intellisense: NSListAgent.SaveConsentSource
  langs:
  - crmscript
  name: 'SaveConsentSource'
  nameWithType: NSListAgent.SaveConsentSource
  fullName: CRMScript.NetServer.NSListAgent.SaveConsentSource
  type: Method
  summary: "\n<strong>Returns:</strong>NSConsentSource\n"
  remarks: 
  syntax: 
    content: NSConsentSource SaveConsentSource(NSConsentSource consentSource)
    parameters:
    - id: consentSource
      type: CRMScript.NetServer.NSConsentSource
      description: 
    return:
      type: CRMScript.NetServer.NSConsentSource
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSConsentSource consentSource;\nNSConsentSource res = agent.SaveConsentSource(consentSource);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveCountry
  commentId: M:CRMScript.NetServer.NSListAgent.SaveCountry
  id: 'SaveCountry'
  so.intellisense: NSListAgent.SaveCountry
  langs:
  - crmscript
  name: 'SaveCountry'
  nameWithType: NSListAgent.SaveCountry
  fullName: CRMScript.NetServer.NSListAgent.SaveCountry
  type: Method
  summary: "\nSaves a country\n"
  remarks: 
  syntax: 
    content: NSCountry SaveCountry(NSCountry country)
    parameters:
    - id: country
      type: CRMScript.NetServer.NSCountry
      description: 
    return:
      type: CRMScript.NetServer.NSCountry
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSCountry country;\nNSCountry res = agent.SaveCountry(country);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveCurrencyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveCurrencyEntity
  id: 'SaveCurrencyEntity'
  so.intellisense: NSListAgent.SaveCurrencyEntity
  langs:
  - crmscript
  name: 'SaveCurrencyEntity'
  nameWithType: NSListAgent.SaveCurrencyEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveCurrencyEntity
  type: Method
  summary: "\nUpdates the existing NSCurrencyEntity or creates a new NSCurrencyEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>currencyEntity</strong>The NSCurrencyEntity to save.</li></ul><strong>Returns:</strong>NSCurrencyEntity<p></p>\n<pre><code>NSList agent;\nNSCurrencyEntity thing = agent.CreateDefaultCurrencyEntity();\nthing = agent.SaveCurrencyEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSCurrencyEntity SaveCurrencyEntity(NSCurrencyEntity currencyEntity);
    parameters:
    - id: currencyEntity;
      type: CRMScript.NetServer.NSCurrencyEntity
      description: 
    return:
      type: CRMScript.NetServer.NSCurrencyEntity
  example: 
  - "\n<pre><code>NSList agent;\nNSCurrencyEntity thing = agent.CreateDefaultCurrencyEntity();\nthing = agent.SaveCurrencyEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveDocumentTemplateEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveDocumentTemplateEntity
  id: 'SaveDocumentTemplateEntity'
  so.intellisense: NSListAgent.SaveDocumentTemplateEntity
  langs:
  - crmscript
  name: 'SaveDocumentTemplateEntity'
  nameWithType: NSListAgent.SaveDocumentTemplateEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveDocumentTemplateEntity
  type: Method
  summary: "\nUpdates the existing NSDocumentTemplateEntity or creates a new NSDocumentTemplateEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>documentTemplateEntity</strong>The NSDocumentTemplateEntity to save.</li></ul><strong>Returns:</strong>NSDocumentTemplateEntity<p></p>\n<pre><code>NSList  agent;\nNSDocumentTemplateEntity thing = agent.CreateDefaultDocumentTemplateEntity();\nthing = agent.SaveDocumentTemplateEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity SaveDocumentTemplateEntity(NSDocumentTemplateEntity documentTemplateEntity);
    parameters:
    - id: documentTemplateEntity;
      type: CRMScript.NetServer.NSDocumentTemplateEntity
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSDocumentTemplateEntity thing = agent.CreateDefaultDocumentTemplateEntity();\nthing = agent.SaveDocumentTemplateEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveDocumentTemplateStream
  commentId: M:CRMScript.NetServer.NSListAgent.SaveDocumentTemplateStream
  id: 'SaveDocumentTemplateStream'
  so.intellisense: NSListAgent.SaveDocumentTemplateStream
  langs:
  - crmscript
  name: 'SaveDocumentTemplateStream'
  nameWithType: NSListAgent.SaveDocumentTemplateStream
  fullName: CRMScript.NetServer.NSListAgent.SaveDocumentTemplateStream
  type: Method
  summary: "\nWrites content in stream to document template file\n"
  remarks: 
  syntax: 
    content: NSTemplateInfo SaveDocumentTemplateStream(Integer documentTemplateId, NSStream content, String languageCode, Integer pluginId)
    parameters:
    - id: documentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: content
      type: CRMScript.NetServer.NSStream
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSTemplateInfo
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger documentTemplateId;\nNSStream content;\nString languageCode;\nInteger pluginId;\nNSTemplateInfo res = agent.SaveDocumentTemplateStream(documentTemplateId, content, languageCode, pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveExtAppEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveExtAppEntity
  id: 'SaveExtAppEntity'
  so.intellisense: NSListAgent.SaveExtAppEntity
  langs:
  - crmscript
  name: 'SaveExtAppEntity'
  nameWithType: NSListAgent.SaveExtAppEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveExtAppEntity
  type: Method
  summary: "\nUpdates the existing NSExtAppEntity or creates a new NSExtAppEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>extAppEntity</strong>The NSExtAppEntity to save.</li></ul><strong>Returns:</strong>NSExtAppEntity<p></p>\n<pre><code>NSList  agent;\nNSExtAppEntity thing = agent.CreateDefaultExtAppEntity();\nthing = agent.SaveExtAppEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSExtAppEntity SaveExtAppEntity(NSExtAppEntity extAppEntity);
    parameters:
    - id: extAppEntity;
      type: CRMScript.NetServer.NSExtAppEntity
      description: 
    return:
      type: CRMScript.NetServer.NSExtAppEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSExtAppEntity thing = agent.CreateDefaultExtAppEntity();\nthing = agent.SaveExtAppEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.SaveFromListDefinition
  id: 'SaveFromListDefinition'
  so.intellisense: NSListAgent.SaveFromListDefinition
  langs:
  - crmscript
  name: 'SaveFromListDefinition'
  nameWithType: NSListAgent.SaveFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.SaveFromListDefinition
  type: Method
  summary: "\nSave a list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity SaveFromListDefinition(Integer id, Integer udListDefinitionId, NSListItemEntity item)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: item
      type: CRMScript.NetServer.NSListItemEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nInteger udListDefinitionId;\nNSListItemEntity item;\nNSListItemEntity res = agent.SaveFromListDefinition(id, udListDefinitionId, item);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveFromListName
  id: 'SaveFromListName'
  so.intellisense: NSListAgent.SaveFromListName
  langs:
  - crmscript
  name: 'SaveFromListName'
  nameWithType: NSListAgent.SaveFromListName
  fullName: CRMScript.NetServer.NSListAgent.SaveFromListName
  type: Method
  summary: "\nSave a list item for the specified list defintion\n"
  remarks: 
  syntax: 
    content: NSListItemEntity SaveFromListName(Integer id, String udListDefinitionName, NSListItemEntity item)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: item
      type: CRMScript.NetServer.NSListItemEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nString udListDefinitionName;\nNSListItemEntity item;\nNSListItemEntity res = agent.SaveFromListName(id, udListDefinitionName, item);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingEntity
  id: 'SaveHeadingEntity'
  so.intellisense: NSListAgent.SaveHeadingEntity
  langs:
  - crmscript
  name: 'SaveHeadingEntity'
  nameWithType: NSListAgent.SaveHeadingEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingEntity
  type: Method
  summary: "\nUpdates the existing NSHeadingEntity or creates a new NSHeadingEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>headingEntity</strong>The NSHeadingEntity to save.</li></ul><strong>Returns:</strong>NSHeadingEntity<p></p>\n<pre><code>NSList  agent;\nNSHeadingEntity thing = agent.CreateDefaultHeadingEntity();\nthing = agent.SaveHeadingEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity SaveHeadingEntity(NSHeadingEntity headingEntity);
    parameters:
    - id: headingEntity;
      type: CRMScript.NetServer.NSHeadingEntity
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSHeadingEntity thing = agent.CreateDefaultHeadingEntity();\nthing = agent.SaveHeadingEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingFromListDefinition
  id: 'SaveHeadingFromListDefinition'
  so.intellisense: NSListAgent.SaveHeadingFromListDefinition
  langs:
  - crmscript
  name: 'SaveHeadingFromListDefinition'
  nameWithType: NSListAgent.SaveHeadingFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingFromListDefinition
  type: Method
  summary: "\nSave new heading for list resolved by the provided id.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity SaveHeadingFromListDefinition(Integer id, NSHeadingEntity entity)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: entity
      type: CRMScript.NetServer.NSHeadingEntity
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nNSHeadingEntity entity;\nNSHeadingEntity res = agent.SaveHeadingFromListDefinition(id, entity);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingFromName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingFromName
  id: 'SaveHeadingFromName'
  so.intellisense: NSListAgent.SaveHeadingFromName
  langs:
  - crmscript
  name: 'SaveHeadingFromName'
  nameWithType: NSListAgent.SaveHeadingFromName
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingFromName
  type: Method
  summary: "\nSave new heading for list resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity SaveHeadingFromName(String name, NSHeadingEntity entity)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: entity
      type: CRMScript.NetServer.NSHeadingEntity
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nNSHeadingEntity entity;\nNSHeadingEntity res = agent.SaveHeadingFromName(name, entity);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListDefinition
  id: 'SaveHeadingsForListItemFromListDefinition'
  so.intellisense: NSListAgent.SaveHeadingsForListItemFromListDefinition
  langs:
  - crmscript
  name: 'SaveHeadingsForListItemFromListDefinition'
  nameWithType: NSListAgent.SaveHeadingsForListItemFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListDefinition
  type: Method
  summary: "\nSaves the active headings for the list item.\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] SaveHeadingsForListItemFromListDefinition(Integer udListDefinitionId, Integer listItemId, NSSelectableMDOListItem[] headings)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: headings
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger listItemId;\nNSSelectableMDOListItem[] headings;\nNSSelectableMDOListItem[] res = agent.SaveHeadingsForListItemFromListDefinition(udListDefinitionId, listItemId, headings);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListName
  id: 'SaveHeadingsForListItemFromListName'
  so.intellisense: NSListAgent.SaveHeadingsForListItemFromListName
  langs:
  - crmscript
  name: 'SaveHeadingsForListItemFromListName'
  nameWithType: NSListAgent.SaveHeadingsForListItemFromListName
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingsForListItemFromListName
  type: Method
  summary: "\nSaves the headings for the list item.\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] SaveHeadingsForListItemFromListName(String udListDefinitionName, Integer listItemId, NSSelectableMDOListItem[] headings)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: headings
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger listItemId;\nNSSelectableMDOListItem[] headings;\nNSSelectableMDOListItem[] res = agent.SaveHeadingsForListItemFromListName(udListDefinitionName, listItemId, headings);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingsFromListDefinition
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingsFromListDefinition
  id: 'SaveHeadingsFromListDefinition'
  so.intellisense: NSListAgent.SaveHeadingsFromListDefinition
  langs:
  - crmscript
  name: 'SaveHeadingsFromListDefinition'
  nameWithType: NSListAgent.SaveHeadingsFromListDefinition
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingsFromListDefinition
  type: Method
  summary: "\nSave headings for list resolved by the provided id.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity[] SaveHeadingsFromListDefinition(Integer id, NSHeadingEntity[] entities)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
    - id: entities
      type: CRMScript.NetServer.NSHeadingEntity[]
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger id;\nNSHeadingEntity[] entities;\nNSHeadingEntity[] res = agent.SaveHeadingsFromListDefinition(id, entities);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHeadingsFromName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHeadingsFromName
  id: 'SaveHeadingsFromName'
  so.intellisense: NSListAgent.SaveHeadingsFromName
  langs:
  - crmscript
  name: 'SaveHeadingsFromName'
  nameWithType: NSListAgent.SaveHeadingsFromName
  fullName: CRMScript.NetServer.NSListAgent.SaveHeadingsFromName
  type: Method
  summary: "\nSave headings for list resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: NSHeadingEntity[] SaveHeadingsFromName(String name, NSHeadingEntity[] entities)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: entities
      type: CRMScript.NetServer.NSHeadingEntity[]
      description: 
    return:
      type: CRMScript.NetServer.NSHeadingEntity[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nNSHeadingEntity[] entities;\nNSHeadingEntity[] res = agent.SaveHeadingsFromName(name, entities);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveHierarchyEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveHierarchyEntity
  id: 'SaveHierarchyEntity'
  so.intellisense: NSListAgent.SaveHierarchyEntity
  langs:
  - crmscript
  name: 'SaveHierarchyEntity'
  nameWithType: NSListAgent.SaveHierarchyEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveHierarchyEntity
  type: Method
  summary: "\nUpdates the existing NSHierarchyEntity or creates a new NSHierarchyEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>hierarchyEntity</strong>The NSHierarchyEntity to save.</li></ul><strong>Returns:</strong>NSHierarchyEntity<p></p>\n<pre><code>NSList  agent;\nNSHierarchyEntity thing = agent.CreateDefaultHierarchyEntity();\nthing = agent.SaveHierarchyEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSHierarchyEntity SaveHierarchyEntity(NSHierarchyEntity hierarchyEntity);
    parameters:
    - id: hierarchyEntity;
      type: CRMScript.NetServer.NSHierarchyEntity
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSHierarchyEntity thing = agent.CreateDefaultHierarchyEntity();\nthing = agent.SaveHierarchyEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveLegalBase
  commentId: M:CRMScript.NetServer.NSListAgent.SaveLegalBase
  id: 'SaveLegalBase'
  so.intellisense: NSListAgent.SaveLegalBase
  langs:
  - crmscript
  name: 'SaveLegalBase'
  nameWithType: NSListAgent.SaveLegalBase
  fullName: CRMScript.NetServer.NSListAgent.SaveLegalBase
  type: Method
  summary: 
  remarks: 
  syntax: 
    content: NSLegalBase SaveLegalBase(NSLegalBase legalBase)
    parameters:
    - id: legalBase
      type: CRMScript.NetServer.NSLegalBase
      description: 
    return:
      type: CRMScript.NetServer.NSLegalBase
  example: 
- uid: CRMScript.NetServer.NSListAgent.SaveListEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveListEntity
  id: 'SaveListEntity'
  so.intellisense: NSListAgent.SaveListEntity
  langs:
  - crmscript
  name: 'SaveListEntity'
  nameWithType: NSListAgent.SaveListEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveListEntity
  type: Method
  summary: "\nUpdates the existing NSListEntity or creates a new NSListEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>listEntity</strong>The NSListEntity to save.</li></ul><strong>Returns:</strong>NSListEntity<p></p>\n<pre><code>NSList  agent;\nNSListEntity thing = agent.CreateDefaultListEntity();\nthing = agent.SaveListEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSListEntity SaveListEntity(NSListEntity listEntity);
    parameters:
    - id: listEntity;
      type: CRMScript.NetServer.NSListEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSListEntity thing = agent.CreateDefaultListEntity();\nthing = agent.SaveListEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveListEntityByName
  commentId: M:CRMScript.NetServer.NSListAgent.SaveListEntityByName
  id: 'SaveListEntityByName'
  so.intellisense: NSListAgent.SaveListEntityByName
  langs:
  - crmscript
  name: 'SaveListEntityByName'
  nameWithType: NSListAgent.SaveListEntityByName
  fullName: CRMScript.NetServer.NSListAgent.SaveListEntityByName
  type: Method
  summary: "\nSave an NSListEntity resolved by the provided name.\n"
  remarks: 
  syntax: 
    content: NSListEntity SaveListEntityByName(String name, NSListEntity listEntity)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: listEntity
      type: CRMScript.NetServer.NSListEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nString name;\nNSListEntity listEntity;\nNSListEntity res = agent.SaveListEntityByName(name, listEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveListItemEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveListItemEntity
  id: 'SaveListItemEntity'
  so.intellisense: NSListAgent.SaveListItemEntity
  langs:
  - crmscript
  name: 'SaveListItemEntity'
  nameWithType: NSListAgent.SaveListItemEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveListItemEntity
  type: Method
  summary: "\nSave the NSListItemEntity.\n"
  remarks: 
  syntax: 
    content: NSListItemEntity SaveListItemEntity(NSListItemEntity listItemEntity)
    parameters:
    - id: listItemEntity
      type: CRMScript.NetServer.NSListItemEntity
      description: 
    return:
      type: CRMScript.NetServer.NSListItemEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSListItemEntity listItemEntity;\nNSListItemEntity res = agent.SaveListItemEntity(listItemEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveProjectTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveProjectTypeEntity
  id: 'SaveProjectTypeEntity'
  so.intellisense: NSListAgent.SaveProjectTypeEntity
  langs:
  - crmscript
  name: 'SaveProjectTypeEntity'
  nameWithType: NSListAgent.SaveProjectTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveProjectTypeEntity
  type: Method
  summary: "\nUpdates the existing NSProjectTypeEntity or creates a new NSProjectTypeEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>projectTypeEntity</strong>The NSProjectTypeEntity to save.</li></ul><strong>Returns:</strong>NSProjectTypeEntity<p></p>\n<pre><code>NSList  agent;\nNSProjectTypeEntity thing = agent.CreateDefaultProjectTypeEntity();\nthing = agent.SaveProjectTypeEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSProjectTypeEntity SaveProjectTypeEntity(NSProjectTypeEntity projectTypeEntity);
    parameters:
    - id: projectTypeEntity;
      type: CRMScript.NetServer.NSProjectTypeEntity
      description: 
    return:
      type: CRMScript.NetServer.NSProjectTypeEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSProjectTypeEntity thing = agent.CreateDefaultProjectTypeEntity();\nthing = agent.SaveProjectTypeEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveQuickReplies
  commentId: M:CRMScript.NetServer.NSListAgent.SaveQuickReplies
  id: 'SaveQuickReplies'
  so.intellisense: NSListAgent.SaveQuickReplies
  langs:
  - crmscript
  name: 'SaveQuickReplies'
  nameWithType: NSListAgent.SaveQuickReplies
  fullName: CRMScript.NetServer.NSListAgent.SaveQuickReplies
  type: Method
  summary: "\nMethod to save all quick replies for a given associate\n"
  remarks: 
  syntax: 
    content: Void SaveQuickReplies(NSQuickReply[] quickReplies)
    parameters:
    - id: quickReplies
      type: CRMScript.NetServer.NSQuickReply[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SaveRelationDefinitionEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveRelationDefinitionEntity
  id: 'SaveRelationDefinitionEntity'
  so.intellisense: NSListAgent.SaveRelationDefinitionEntity
  langs:
  - crmscript
  name: 'SaveRelationDefinitionEntity'
  nameWithType: NSListAgent.SaveRelationDefinitionEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveRelationDefinitionEntity
  type: Method
  summary: "\nUpdates the existing NSRelationDefinitionEntity or creates a new NSRelationDefinitionEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>relationDefinitionEntity</strong>The NSRelationDefinitionEntity to save.</li></ul><strong>Returns:</strong>NSRelationDefinitionEntity<p></p>\n<pre><code>NSList  agent;\nNSRelationDefinitionEntity thing = agent.CreateDefaultRelationDefinitionEntity();\nthing = agent.SaveRelationDefinitionEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSRelationDefinitionEntity SaveRelationDefinitionEntity(NSRelationDefinitionEntity relationDefinitionEntity);
    parameters:
    - id: relationDefinitionEntity;
      type: CRMScript.NetServer.NSRelationDefinitionEntity
      description: 
    return:
      type: CRMScript.NetServer.NSRelationDefinitionEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSRelationDefinitionEntity thing = agent.CreateDefaultRelationDefinitionEntity();\nthing = agent.SaveRelationDefinitionEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveResourceEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveResourceEntity
  id: 'SaveResourceEntity'
  so.intellisense: NSListAgent.SaveResourceEntity
  langs:
  - crmscript
  name: 'SaveResourceEntity'
  nameWithType: NSListAgent.SaveResourceEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveResourceEntity
  type: Method
  summary: "\nUpdates the existing NSResourceEntity or creates a new NSResourceEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>resourceEntity</strong>The NSResourceEntity to save.</li></ul><strong>Returns:</strong>NSResourceEntity<p></p>\n<pre><code>NSList  agent;\nNSResourceEntity thing = agent.CreateDefaultResourceEntity();\nthing = agent.SaveResourceEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSResourceEntity SaveResourceEntity(NSResourceEntity resourceEntity);
    parameters:
    - id: resourceEntity;
      type: CRMScript.NetServer.NSResourceEntity
      description: 
    return:
      type: CRMScript.NetServer.NSResourceEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSResourceEntity thing = agent.CreateDefaultResourceEntity();\nthing = agent.SaveResourceEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveSaleStageEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveSaleStageEntity
  id: 'SaveSaleStageEntity'
  so.intellisense: NSListAgent.SaveSaleStageEntity
  langs:
  - crmscript
  name: 'SaveSaleStageEntity'
  nameWithType: NSListAgent.SaveSaleStageEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveSaleStageEntity
  type: Method
  summary: "\nUpdates the existing NSSaleStageEntity or creates a new NSSaleStageEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>saleStageEntity</strong>The NSSaleStageEntity to save.</li></ul><strong>Returns:</strong>NSSaleStageEntity<p></p>\n<pre><code>NSList  agent;\nNSSaleStageEntity thing = agent.CreateDefaultSaleStageEntity();\nthing = agent.SaveSaleStageEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSaleStageEntity SaveSaleStageEntity(NSSaleStageEntity saleStageEntity);
    parameters:
    - id: saleStageEntity;
      type: CRMScript.NetServer.NSSaleStageEntity
      description: 
    return:
      type: CRMScript.NetServer.NSSaleStageEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSSaleStageEntity thing = agent.CreateDefaultSaleStageEntity();\nthing = agent.SaveSaleStageEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveSaleTypeEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveSaleTypeEntity
  id: 'SaveSaleTypeEntity'
  so.intellisense: NSListAgent.SaveSaleTypeEntity
  langs:
  - crmscript
  name: 'SaveSaleTypeEntity'
  nameWithType: NSListAgent.SaveSaleTypeEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveSaleTypeEntity
  type: Method
  summary: "\nUpdates the existing NSSaleTypeEntity or creates a new NSSaleTypeEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>saleTypeEntity</strong>The NSSaleTypeEntity to save.</li></ul><strong>Returns:</strong>NSSaleTypeEntity<p></p>\n<pre><code>NSList  agent;\nNSSaleTypeEntity thing = agent.CreateDefaultSaleTypeEntity();\nthing = agent.SaveSaleTypeEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSSaleTypeEntity SaveSaleTypeEntity(NSSaleTypeEntity saleTypeEntity);
    parameters:
    - id: saleTypeEntity;
      type: CRMScript.NetServer.NSSaleTypeEntity
      description: 
    return:
      type: CRMScript.NetServer.NSSaleTypeEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSSaleTypeEntity thing = agent.CreateDefaultSaleTypeEntity();\nthing = agent.SaveSaleTypeEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveTicketCategoryEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveTicketCategoryEntity
  id: 'SaveTicketCategoryEntity'
  so.intellisense: NSListAgent.SaveTicketCategoryEntity
  langs:
  - crmscript
  name: 'SaveTicketCategoryEntity'
  nameWithType: NSListAgent.SaveTicketCategoryEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveTicketCategoryEntity
  type: Method
  summary: "\nUpdates the existing NSTicketCategoryEntity or creates a new NSTicketCategoryEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>ticketCategoryEntity</strong>The NSTicketCategoryEntity to save.</li></ul><strong>Returns:</strong>NSTicketCategoryEntity<p></p>\n<pre><code>NSList  agent;\nNSTicketCategoryEntity thing = agent.CreateDefaultTicketCategoryEntity();\nthing = agent.SaveTicketCategoryEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketCategoryEntity SaveTicketCategoryEntity(NSTicketCategoryEntity ticketCategoryEntity);
    parameters:
    - id: ticketCategoryEntity;
      type: CRMScript.NetServer.NSTicketCategoryEntity
      description: 
    return:
      type: CRMScript.NetServer.NSTicketCategoryEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSTicketCategoryEntity thing = agent.CreateDefaultTicketCategoryEntity();\nthing = agent.SaveTicketCategoryEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveTicketPriorityEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveTicketPriorityEntity
  id: 'SaveTicketPriorityEntity'
  so.intellisense: NSListAgent.SaveTicketPriorityEntity
  langs:
  - crmscript
  name: 'SaveTicketPriorityEntity'
  nameWithType: NSListAgent.SaveTicketPriorityEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveTicketPriorityEntity
  type: Method
  summary: "\nUpdates the existing NSTicketPriorityEntity or creates a new NSTicketPriorityEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>ticketPriorityEntity</strong>The NSTicketPriorityEntity to save.</li></ul><strong>Returns:</strong>NSTicketPriorityEntity<p></p>\n<pre><code>NSList  agent;\nNSTicketPriorityEntity thing = agent.CreateDefaultTicketPriorityEntity();\nthing = agent.SaveTicketPriorityEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketPriorityEntity SaveTicketPriorityEntity(NSTicketPriorityEntity ticketPriorityEntity);
    parameters:
    - id: ticketPriorityEntity;
      type: CRMScript.NetServer.NSTicketPriorityEntity
      description: 
    return:
      type: CRMScript.NetServer.NSTicketPriorityEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSTicketPriorityEntity thing = agent.CreateDefaultTicketPriorityEntity();\nthing = agent.SaveTicketPriorityEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveTicketStatusEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveTicketStatusEntity
  id: 'SaveTicketStatusEntity'
  so.intellisense: NSListAgent.SaveTicketStatusEntity
  langs:
  - crmscript
  name: 'SaveTicketStatusEntity'
  nameWithType: NSListAgent.SaveTicketStatusEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveTicketStatusEntity
  type: Method
  summary: "\nUpdates the existing NSTicketStatusEntity or creates a new NSTicketStatusEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>ticketStatusEntity</strong>The NSTicketStatusEntity to save.</li></ul><strong>Returns:</strong>NSTicketStatusEntity<p></p>\n<pre><code>NSList  agent;\nNSTicketStatusEntity thing = agent.CreateDefaultTicketStatusEntity();\nthing = agent.SaveTicketStatusEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSTicketStatusEntity SaveTicketStatusEntity(NSTicketStatusEntity ticketStatusEntity);
    parameters:
    - id: ticketStatusEntity;
      type: CRMScript.NetServer.NSTicketStatusEntity
      description: 
    return:
      type: CRMScript.NetServer.NSTicketStatusEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSTicketStatusEntity thing = agent.CreateDefaultTicketStatusEntity();\nthing = agent.SaveTicketStatusEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SaveWebPanelEntity
  commentId: M:CRMScript.NetServer.NSListAgent.SaveWebPanelEntity
  id: 'SaveWebPanelEntity'
  so.intellisense: NSListAgent.SaveWebPanelEntity
  langs:
  - crmscript
  name: 'SaveWebPanelEntity'
  nameWithType: NSListAgent.SaveWebPanelEntity
  fullName: CRMScript.NetServer.NSListAgent.SaveWebPanelEntity
  type: Method
  summary: "\nUpdates the existing NSWebPanelEntity or creates a new NSWebPanelEntity if the id parameter is 0<p></p>\n<strong>Parameters</strong>:<p></p>\n<ul><li><strong>webPanelEntity</strong>The NSWebPanelEntity to save.</li></ul><strong>Returns:</strong>NSWebPanelEntity<p></p>\n<pre><code>NSList  agent;\nNSWebPanelEntity thing = agent.CreateDefaultWebPanelEntity();\nthing = agent.SaveWebPanelEntity(thing);</code></pre>\n"
  remarks: 
  syntax: 
    content: NSWebPanelEntity SaveWebPanelEntity(NSWebPanelEntity webPanelEntity);
    parameters:
    - id: webPanelEntity;
      type: CRMScript.NetServer.NSWebPanelEntity
      description: 
    return:
      type: CRMScript.NetServer.NSWebPanelEntity
  example: 
  - "\n<pre><code>NSList  agent;\nNSWebPanelEntity thing = agent.CreateDefaultWebPanelEntity();\nthing = agent.SaveWebPanelEntity(thing);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetDocumentTemplateFromDocumentTemplate
  commentId: M:CRMScript.NetServer.NSListAgent.SetDocumentTemplateFromDocumentTemplate
  id: 'SetDocumentTemplateFromDocumentTemplate'
  so.intellisense: NSListAgent.SetDocumentTemplateFromDocumentTemplate
  langs:
  - crmscript
  name: 'SetDocumentTemplateFromDocumentTemplate'
  nameWithType: NSListAgent.SetDocumentTemplateFromDocumentTemplate
  fullName: CRMScript.NetServer.NSListAgent.SetDocumentTemplateFromDocumentTemplate
  type: Method
  summary: "\nCreate a new document template based on another template\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity SetDocumentTemplateFromDocumentTemplate(Integer sourceDocumentTemplateId, NSDocumentTemplateEntity documentTemplateEntity)
    parameters:
    - id: sourceDocumentTemplateId
      type: CRMScript.Global.Integer
      description: 
    - id: documentTemplateEntity
      type: CRMScript.NetServer.NSDocumentTemplateEntity
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger sourceDocumentTemplateId;\nNSDocumentTemplateEntity documentTemplateEntity;\nNSDocumentTemplateEntity res = agent.SetDocumentTemplateFromDocumentTemplate(sourceDocumentTemplateId, documentTemplateEntity);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetDocumentTemplateStream
  commentId: M:CRMScript.NetServer.NSListAgent.SetDocumentTemplateStream
  id: 'SetDocumentTemplateStream'
  so.intellisense: NSListAgent.SetDocumentTemplateStream
  langs:
  - crmscript
  name: 'SetDocumentTemplateStream'
  nameWithType: NSListAgent.SetDocumentTemplateStream
  fullName: CRMScript.NetServer.NSListAgent.SetDocumentTemplateStream
  type: Method
  summary: "\nStore a document template from its stream. Since there is a potential for a name conflict (the file name stored by the document entity earlier may prove to be invalid), the (possibly amended) document entity is returned. The client should not assume that any earlier, cached entity information is valid.\n"
  remarks: 
  syntax: 
    content: NSDocumentTemplateEntity SetDocumentTemplateStream(NSDocumentTemplateEntity documentTemplateEntity, NSStream stream, String languageCode, Integer pluginId)
    parameters:
    - id: documentTemplateEntity
      type: CRMScript.NetServer.NSDocumentTemplateEntity
      description: 
    - id: stream
      type: CRMScript.NetServer.NSStream
      description: 
    - id: languageCode
      type: CRMScript.Global.String
      description: 
    - id: pluginId
      type: CRMScript.Global.Integer
      description: 
    return:
      type: CRMScript.NetServer.NSDocumentTemplateEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nNSDocumentTemplateEntity documentTemplateEntity;\nNSStream stream;\nString languageCode;\nInteger pluginId;\nNSDocumentTemplateEntity res = agent.SetDocumentTemplateStream(documentTemplateEntity, stream, languageCode, pluginId);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetEmarketingStrictMode
  commentId: M:CRMScript.NetServer.NSListAgent.SetEmarketingStrictMode
  id: 'SetEmarketingStrictMode'
  so.intellisense: NSListAgent.SetEmarketingStrictMode
  langs:
  - crmscript
  name: 'SetEmarketingStrictMode'
  nameWithType: NSListAgent.SetEmarketingStrictMode
  fullName: CRMScript.NetServer.NSListAgent.SetEmarketingStrictMode
  type: Method
  summary: "\nTurn on the Emarketing strict mode, which will enable full GDPR rules concerning Emarketing consents and subscriptions\n"
  remarks: 
  syntax: 
    content: Void SetEmarketingStrictMode(Bool enable)
    parameters:
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nBool enable;\nagent.SetEmarketingStrictMode(enable);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetHeadingsForListItem
  commentId: M:CRMScript.NetServer.NSListAgent.SetHeadingsForListItem
  id: 'SetHeadingsForListItem'
  so.intellisense: NSListAgent.SetHeadingsForListItem
  langs:
  - crmscript
  name: 'SetHeadingsForListItem'
  nameWithType: NSListAgent.SetHeadingsForListItem
  fullName: CRMScript.NetServer.NSListAgent.SetHeadingsForListItem
  type: Method
  summary: "\nSet headings which this list item should be listed under\n"
  remarks: 
  syntax: 
    content: Void SetHeadingsForListItem(Integer udListDefinitionId, Integer listItemId, Integer [] headingIds, Bool enable)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    - id: headingIds
      type: 
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetListItemsForHeading
  commentId: M:CRMScript.NetServer.NSListAgent.SetListItemsForHeading
  id: 'SetListItemsForHeading'
  so.intellisense: NSListAgent.SetListItemsForHeading
  langs:
  - crmscript
  name: 'SetListItemsForHeading'
  nameWithType: NSListAgent.SetListItemsForHeading
  fullName: CRMScript.NetServer.NSListAgent.SetListItemsForHeading
  type: Method
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  remarks: 
  syntax: 
    content: Void SetListItemsForHeading(Integer udListDefinitionId, Integer headingId, Integer[] listItemIds, Bool enable)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: headingId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemIds
      type: CRMScript.Global.Integer[]
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetListItemsForHeadingFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SetListItemsForHeadingFromListName
  id: 'SetListItemsForHeadingFromListName'
  so.intellisense: NSListAgent.SetListItemsForHeadingFromListName
  langs:
  - crmscript
  name: 'SetListItemsForHeadingFromListName'
  nameWithType: NSListAgent.SetListItemsForHeadingFromListName
  fullName: CRMScript.NetServer.NSListAgent.SetListItemsForHeadingFromListName
  type: Method
  summary: "\nUpdate listItems under this heading\n"
  remarks: 
  syntax: 
    content: Void SetListItemsForHeadingFromListName(String udListDefinitionName, Integer headingId, Integer[] listItemIds, Bool enable)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: headingId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemIds
      type: CRMScript.Global.Integer[]
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetListItemsForUserGroup
  commentId: M:CRMScript.NetServer.NSListAgent.SetListItemsForUserGroup
  id: 'SetListItemsForUserGroup'
  so.intellisense: NSListAgent.SetListItemsForUserGroup
  langs:
  - crmscript
  name: 'SetListItemsForUserGroup'
  nameWithType: NSListAgent.SetListItemsForUserGroup
  fullName: CRMScript.NetServer.NSListAgent.SetListItemsForUserGroup
  type: Method
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  remarks: 
  syntax: 
    content: Void SetListItemsForUserGroup(Integer udListDefinitionId, Integer usergroupId, Integer[] listItemIds, Bool enable)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: usergroupId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemIds
      type: CRMScript.Global.Integer[]
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetListItemsForUserGroupFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SetListItemsForUserGroupFromListName
  id: 'SetListItemsForUserGroupFromListName'
  so.intellisense: NSListAgent.SetListItemsForUserGroupFromListName
  langs:
  - crmscript
  name: 'SetListItemsForUserGroupFromListName'
  nameWithType: NSListAgent.SetListItemsForUserGroupFromListName
  fullName: CRMScript.NetServer.NSListAgent.SetListItemsForUserGroupFromListName
  type: Method
  summary: "\nUpdate listItems that will be visible for this usergroup\n"
  remarks: 
  syntax: 
    content: Void SetListItemsForUserGroupFromListName(String udListDefinitionName, Integer usergroupId, Integer[] listItemsID, Bool enable)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: usergroupId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemsID
      type: CRMScript.Global.Integer[]
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetRankOnHeadings
  commentId: M:CRMScript.NetServer.NSListAgent.SetRankOnHeadings
  id: 'SetRankOnHeadings'
  so.intellisense: NSListAgent.SetRankOnHeadings
  langs:
  - crmscript
  name: 'SetRankOnHeadings'
  nameWithType: NSListAgent.SetRankOnHeadings
  fullName: CRMScript.NetServer.NSListAgent.SetRankOnHeadings
  type: Method
  summary: "\nSet rank order on headings\n"
  remarks: 
  syntax: 
    content: Void SetRankOnHeadings(Integer udListDefinitionId, Integer[] headingIds)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: headingIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetRankOnProjectActivity
  commentId: M:CRMScript.NetServer.NSListAgent.SetRankOnProjectActivity
  id: 'SetRankOnProjectActivity'
  so.intellisense: NSListAgent.SetRankOnProjectActivity
  langs:
  - crmscript
  name: 'SetRankOnProjectActivity'
  nameWithType: NSListAgent.SetRankOnProjectActivity
  fullName: CRMScript.NetServer.NSListAgent.SetRankOnProjectActivity
  type: Method
  summary: "\nSet rank order on project activity\n"
  remarks: 
  syntax: 
    content: Void SetRankOnProjectActivity(Integer projectTypeStatusLinkId, Integer[] itemsIds)
    parameters:
    - id: projectTypeStatusLinkId
      type: CRMScript.Global.Integer
      description: 
    - id: itemsIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetRankOnProjectDocument
  commentId: M:CRMScript.NetServer.NSListAgent.SetRankOnProjectDocument
  id: 'SetRankOnProjectDocument'
  so.intellisense: NSListAgent.SetRankOnProjectDocument
  langs:
  - crmscript
  name: 'SetRankOnProjectDocument'
  nameWithType: NSListAgent.SetRankOnProjectDocument
  fullName: CRMScript.NetServer.NSListAgent.SetRankOnProjectDocument
  type: Method
  summary: "\nSet rank order on project document\n"
  remarks: 
  syntax: 
    content: Void SetRankOnProjectDocument(Integer projectTypeStatusLinkId, Integer[] itemsIds)
    parameters:
    - id: projectTypeStatusLinkId
      type: CRMScript.Global.Integer
      description: 
    - id: itemsIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetRankOnSaleActivity
  commentId: M:CRMScript.NetServer.NSListAgent.SetRankOnSaleActivity
  id: 'SetRankOnSaleActivity'
  so.intellisense: NSListAgent.SetRankOnSaleActivity
  langs:
  - crmscript
  name: 'SetRankOnSaleActivity'
  nameWithType: NSListAgent.SetRankOnSaleActivity
  fullName: CRMScript.NetServer.NSListAgent.SetRankOnSaleActivity
  type: Method
  summary: "\nSet rank order on sale activity\n"
  remarks: 
  syntax: 
    content: Void SetRankOnSaleActivity(Integer saleTypeStageLinkId, Integer[] itemsIds)
    parameters:
    - id: saleTypeStageLinkId
      type: CRMScript.Global.Integer
      description: 
    - id: itemsIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetRankOnSaleDocument
  commentId: M:CRMScript.NetServer.NSListAgent.SetRankOnSaleDocument
  id: 'SetRankOnSaleDocument'
  so.intellisense: NSListAgent.SetRankOnSaleDocument
  langs:
  - crmscript
  name: 'SetRankOnSaleDocument'
  nameWithType: NSListAgent.SetRankOnSaleDocument
  fullName: CRMScript.NetServer.NSListAgent.SetRankOnSaleDocument
  type: Method
  summary: "\nSet rank order on project document\n"
  remarks: 
  syntax: 
    content: Void SetRankOnSaleDocument(Integer saleTypeStageLinkId, Integer[] itemsIds)
    parameters:
    - id: saleTypeStageLinkId
      type: CRMScript.Global.Integer
      description: 
    - id: itemsIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetTicketCategoriesForUserGroup
  commentId: M:CRMScript.NetServer.NSListAgent.SetTicketCategoriesForUserGroup
  id: 'SetTicketCategoriesForUserGroup'
  so.intellisense: NSListAgent.SetTicketCategoriesForUserGroup
  langs:
  - crmscript
  name: 'SetTicketCategoriesForUserGroup'
  nameWithType: NSListAgent.SetTicketCategoriesForUserGroup
  fullName: CRMScript.NetServer.NSListAgent.SetTicketCategoriesForUserGroup
  type: Method
  summary: "\nSet ticket categories for one user group\n"
  remarks: 
  syntax: 
    content: Void SetTicketCategoriesForUserGroup(Integer userGroupId, Integer[] categoryIds)
    parameters:
    - id: userGroupId
      type: CRMScript.Global.Integer
      description: 
    - id: categoryIds
      type: CRMScript.Global.Integer[]
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger userGroupId;\nInteger[] categoryIds;\nagent.SetTicketCategoriesForUserGroup(userGroupId, categoryIds);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroup
  commentId: M:CRMScript.NetServer.NSListAgent.SetVisibleForUserGroup
  id: 'SetVisibleForUserGroup'
  so.intellisense: NSListAgent.SetVisibleForUserGroup
  langs:
  - crmscript
  name: 'SetVisibleForUserGroup'
  nameWithType: NSListAgent.SetVisibleForUserGroup
  fullName: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroup
  type: Method
  summary: "\nSet a group which this list item should be visible for\n"
  remarks: 
  syntax: 
    content: Void SetVisibleForUserGroup(Integer udListDefinitionId, Integer listItemId, Integer[] userGroupId, Bool enable)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: userGroupId
      type: CRMScript.Global.Integer[]
      description: 
    - id: enable
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroups
  commentId: M:CRMScript.NetServer.NSListAgent.SetVisibleForUserGroups
  id: 'SetVisibleForUserGroups'
  so.intellisense: NSListAgent.SetVisibleForUserGroups
  langs:
  - crmscript
  name: 'SetVisibleForUserGroups'
  nameWithType: NSListAgent.SetVisibleForUserGroups
  fullName: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroups
  type: Method
  summary: "\nUpdate User groups that this list item is visible for\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] SetVisibleForUserGroups(Integer udListDefinitionId, Integer listItemId, NSSelectableMDOListItem[] userGroups)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: userGroups
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger udListDefinitionId;\nInteger listItemId;\nNSSelectableMDOListItem[] userGroups;\nNSSelectableMDOListItem[] res = agent.SetVisibleForUserGroups(udListDefinitionId, listItemId, userGroups);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroupsFromListName
  commentId: M:CRMScript.NetServer.NSListAgent.SetVisibleForUserGroupsFromListName
  id: 'SetVisibleForUserGroupsFromListName'
  so.intellisense: NSListAgent.SetVisibleForUserGroupsFromListName
  langs:
  - crmscript
  name: 'SetVisibleForUserGroupsFromListName'
  nameWithType: NSListAgent.SetVisibleForUserGroupsFromListName
  fullName: CRMScript.NetServer.NSListAgent.SetVisibleForUserGroupsFromListName
  type: Method
  summary: "\nUpdate User groups that this list item is visible for\n"
  remarks: 
  syntax: 
    content: NSSelectableMDOListItem[] SetVisibleForUserGroupsFromListName(String udListDefinitionName, Integer listItemId, NSSelectableMDOListItem[] userGroups)
    parameters:
    - id: udListDefinitionName
      type: CRMScript.Global.String
      description: 
    - id: listItemId
      type: CRMScript.Global.Integer
      description: 
    - id: userGroups
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
      description: 
    return:
      type: CRMScript.NetServer.NSSelectableMDOListItem[]
  example: 
  - "\n<pre><code>NSListAgent agent;\nString udListDefinitionName;\nInteger listItemId;\nNSSelectableMDOListItem[] userGroups;\nNSSelectableMDOListItem[] res = agent.SetVisibleForUserGroupsFromListName(udListDefinitionName, listItemId, userGroups);</code></pre>\n"
- uid: CRMScript.NetServer.NSListAgent.SortListItems
  commentId: M:CRMScript.NetServer.NSListAgent.SortListItems
  id: 'SortListItems'
  so.intellisense: NSListAgent.SortListItems
  langs:
  - crmscript
  name: 'SortListItems'
  nameWithType: NSListAgent.SortListItems
  fullName: CRMScript.NetServer.NSListAgent.SortListItems
  type: Method
  summary: "\nSort the list items in a given list alphabetically\n"
  remarks: 
  syntax: 
    content: Void SortListItems(Integer udListDefinitionId, String cultureName)
    parameters:
    - id: udListDefinitionId
      type: CRMScript.Global.Integer
      description: 
    - id: cultureName
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.NetServer.NSListAgent.UpdateHierarchyFromPath
  commentId: M:CRMScript.NetServer.NSListAgent.UpdateHierarchyFromPath
  id: 'UpdateHierarchyFromPath'
  so.intellisense: NSListAgent.UpdateHierarchyFromPath
  langs:
  - crmscript
  name: 'UpdateHierarchyFromPath'
  nameWithType: NSListAgent.UpdateHierarchyFromPath
  fullName: CRMScript.NetServer.NSListAgent.UpdateHierarchyFromPath
  type: Method
  summary: "\nUpdate a hierarchy item from a path\n"
  remarks: "\n<ul><li>Enum: 0 = Unknown</li><li>Enum: 1 = ExtraTables</li><li>Enum: 2 = ScreenDefinitions</li><li>Enum: 3 = Scripts</li><li>Enum: 4 = Selections</li><li>Enum: 5 = ExternalDocuments</li><li>Enum: 6 = UserGroups</li><li>Enum: 7 = ExternalDocumentRelatedToSpmMessage</li><li>Enum: 8 = Dashboards</li></ul>\n"
  syntax: 
    content: NSHierarchyEntity UpdateHierarchyFromPath(Integer domain, String path, NSHierarchyEntity entity)
    parameters:
    - id: domain
      type: CRMScript.Global.Integer
      description: 
    - id: path
      type: CRMScript.Global.String
      description: 
    - id: entity
      type: CRMScript.NetServer.NSHierarchyEntity
      description: 
    return:
      type: CRMScript.NetServer.NSHierarchyEntity
  example: 
  - "\n<pre><code>NSListAgent agent;\nInteger domain;\nString path;\nNSHierarchyEntity entity;\nNSHierarchyEntity res = agent.UpdateHierarchyFromPath(domain, path, entity);</code></pre>\n"
references:
- uid: CRMScript.NetServer.NSListAgent
  commentId: T:CRMScript.NetServer.NSListAgent
  isExternal: true
  name: NSListAgent
  nameWithType: NSListAgent
  fullName: CRMScript.NetServer.NSListAgent
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSListItemEntity
  commentId: T:CRMScript.NetServer.NSListItemEntity
  isExternal: true
  name: NSListItemEntity
  nameWithType: NSListItemEntity
  fullName: CRMScript.NetServer.NSListItemEntity
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSHierarchyEntity
  commentId: T:CRMScript.NetServer.NSHierarchyEntity
  isExternal: true
  name: NSHierarchyEntity
  nameWithType: NSHierarchyEntity
  fullName: CRMScript.NetServer.NSHierarchyEntity
- uid: CRMScript.Global.Float
  commentId: T:CRMScript.Global.Float
  isExternal: true
  name: Float
  nameWithType: Float
  fullName: CRMScript.Global.Float
- uid: CRMScript.NetServer.NSAmountClassEntity
  commentId: T:CRMScript.NetServer.NSAmountClassEntity
  isExternal: true
  name: NSAmountClassEntity
  nameWithType: NSAmountClassEntity
  fullName: CRMScript.NetServer.NSAmountClassEntity
- uid: CRMScript.NetServer.NSCountry
  commentId: T:CRMScript.NetServer.NSCountry
  isExternal: true
  name: NSCountry
  nameWithType: NSCountry
  fullName: CRMScript.NetServer.NSCountry
- uid: CRMScript.NetServer.NSCurrencyEntity
  commentId: T:CRMScript.NetServer.NSCurrencyEntity
  isExternal: true
  name: NSCurrencyEntity
  nameWithType: NSCurrencyEntity
  fullName: CRMScript.NetServer.NSCurrencyEntity
- uid: CRMScript.NetServer.NSDocumentTemplateEntity
  commentId: T:CRMScript.NetServer.NSDocumentTemplateEntity
  isExternal: true
  name: NSDocumentTemplateEntity
  nameWithType: NSDocumentTemplateEntity
  fullName: CRMScript.NetServer.NSDocumentTemplateEntity
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.NetServer.NSExtAppEntity
  commentId: T:CRMScript.NetServer.NSExtAppEntity
  isExternal: true
  name: NSExtAppEntity
  nameWithType: NSExtAppEntity
  fullName: CRMScript.NetServer.NSExtAppEntity
- uid: CRMScript.NetServer.NSHeadingEntity
  commentId: T:CRMScript.NetServer.NSHeadingEntity
  isExternal: true
  name: NSHeadingEntity
  nameWithType: NSHeadingEntity
  fullName: CRMScript.NetServer.NSHeadingEntity
- uid: CRMScript.NetServer.NSListEntity
  commentId: T:CRMScript.NetServer.NSListEntity
  isExternal: true
  name: NSListEntity
  nameWithType: NSListEntity
  fullName: CRMScript.NetServer.NSListEntity
- uid: CRMScript.NetServer.NSProjectTypeEntity
  commentId: T:CRMScript.NetServer.NSProjectTypeEntity
  isExternal: true
  name: NSProjectTypeEntity
  nameWithType: NSProjectTypeEntity
  fullName: CRMScript.NetServer.NSProjectTypeEntity
- uid: CRMScript.NetServer.NSRelationDefinitionEntity
  commentId: T:CRMScript.NetServer.NSRelationDefinitionEntity
  isExternal: true
  name: NSRelationDefinitionEntity
  nameWithType: NSRelationDefinitionEntity
  fullName: CRMScript.NetServer.NSRelationDefinitionEntity
- uid: CRMScript.NetServer.NSResourceEntity
  commentId: T:CRMScript.NetServer.NSResourceEntity
  isExternal: true
  name: NSResourceEntity
  nameWithType: NSResourceEntity
  fullName: CRMScript.NetServer.NSResourceEntity
- uid: CRMScript.NetServer.NSSaleStageEntity
  commentId: T:CRMScript.NetServer.NSSaleStageEntity
  isExternal: true
  name: NSSaleStageEntity
  nameWithType: NSSaleStageEntity
  fullName: CRMScript.NetServer.NSSaleStageEntity
- uid: CRMScript.NetServer.NSSaleTypeEntity
  commentId: T:CRMScript.NetServer.NSSaleTypeEntity
  isExternal: true
  name: NSSaleTypeEntity
  nameWithType: NSSaleTypeEntity
  fullName: CRMScript.NetServer.NSSaleTypeEntity
- uid: CRMScript.NetServer.NSTicketCategoryEntity
  commentId: T:CRMScript.NetServer.NSTicketCategoryEntity
  isExternal: true
  name: NSTicketCategoryEntity
  nameWithType: NSTicketCategoryEntity
  fullName: CRMScript.NetServer.NSTicketCategoryEntity
- uid: CRMScript.NetServer.NSTicketPriorityEntity
  commentId: T:CRMScript.NetServer.NSTicketPriorityEntity
  isExternal: true
  name: NSTicketPriorityEntity
  nameWithType: NSTicketPriorityEntity
  fullName: CRMScript.NetServer.NSTicketPriorityEntity
- uid: CRMScript.NetServer.NSTicketStatusEntity
  commentId: T:CRMScript.NetServer.NSTicketStatusEntity
  isExternal: true
  name: NSTicketStatusEntity
  nameWithType: NSTicketStatusEntity
  fullName: CRMScript.NetServer.NSTicketStatusEntity
- uid: CRMScript.NetServer.NSWebPanelEntity
  commentId: T:CRMScript.NetServer.NSWebPanelEntity
  isExternal: true
  name: NSWebPanelEntity
  nameWithType: NSWebPanelEntity
  fullName: CRMScript.NetServer.NSWebPanelEntity
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.NetServer.NSCountry[]
  isExternal: true
  name: NSCountry[]
  nameWithType: NSCountry[]
  fullName: CRMScript.NetServer.NSCountry[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCountry
    isExternal: true
    name: NSCountry
    nameWithType: NSCountry
    fullName: CRMScript.NetServer.NSCountry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCountry
  commentId: T:CRMScript.NetServer.NSCountry
  isExternal: true
  name: NSCountry
  nameWithType: NSCountry
  fullName: CRMScript.NetServer.NSCountry
- uid: CRMScript.NetServer.NSCurrencyEntity[]
  isExternal: true
  name: NSCurrencyEntity[]
  nameWithType: NSCurrencyEntity[]
  fullName: CRMScript.NetServer.NSCurrencyEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCurrencyEntity
    isExternal: true
    name: NSCurrencyEntity
    nameWithType: NSCurrencyEntity
    fullName: CRMScript.NetServer.NSCurrencyEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCurrencyEntity
  commentId: T:CRMScript.NetServer.NSCurrencyEntity
  isExternal: true
  name: NSCurrencyEntity
  nameWithType: NSCurrencyEntity
  fullName: CRMScript.NetServer.NSCurrencyEntity
- uid: CRMScript.NetServer.NSDocumentTemplateEntity[]
  isExternal: true
  name: NSDocumentTemplateEntity[]
  nameWithType: NSDocumentTemplateEntity[]
  fullName: CRMScript.NetServer.NSDocumentTemplateEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDocumentTemplateEntity
    isExternal: true
    name: NSDocumentTemplateEntity
    nameWithType: NSDocumentTemplateEntity
    fullName: CRMScript.NetServer.NSDocumentTemplateEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDocumentTemplateEntity
  commentId: T:CRMScript.NetServer.NSDocumentTemplateEntity
  isExternal: true
  name: NSDocumentTemplateEntity
  nameWithType: NSDocumentTemplateEntity
  fullName: CRMScript.NetServer.NSDocumentTemplateEntity
- uid: CRMScript.Global.Integer[]
  isExternal: true
  name: Integer[]
  nameWithType: Integer[]
  fullName: CRMScript.Global.Integer[]
  spec.crmscript:
  - uid: CRMScript.Global.Integer
    isExternal: true
    name: Integer
    nameWithType: Integer
    fullName: CRMScript.Global.Integer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.NetServer.NSListItemEntity[]
  isExternal: true
  name: NSListItemEntity[]
  nameWithType: NSListItemEntity[]
  fullName: CRMScript.NetServer.NSListItemEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSListItemEntity
    isExternal: true
    name: NSListItemEntity
    nameWithType: NSListItemEntity
    fullName: CRMScript.NetServer.NSListItemEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSListItemEntity
  commentId: T:CRMScript.NetServer.NSListItemEntity
  isExternal: true
  name: NSListItemEntity
  nameWithType: NSListItemEntity
  fullName: CRMScript.NetServer.NSListItemEntity
- uid: CRMScript.NetServer.NSHierarchyEntity[]
  isExternal: true
  name: NSHierarchyEntity[]
  nameWithType: NSHierarchyEntity[]
  fullName: CRMScript.NetServer.NSHierarchyEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSHierarchyEntity
    isExternal: true
    name: NSHierarchyEntity
    nameWithType: NSHierarchyEntity
    fullName: CRMScript.NetServer.NSHierarchyEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSHierarchyEntity
  commentId: T:CRMScript.NetServer.NSHierarchyEntity
  isExternal: true
  name: NSHierarchyEntity
  nameWithType: NSHierarchyEntity
  fullName: CRMScript.NetServer.NSHierarchyEntity
- uid: CRMScript.NetServer.NSSaleStageEntity[]
  isExternal: true
  name: NSSaleStageEntity[]
  nameWithType: NSSaleStageEntity[]
  fullName: CRMScript.NetServer.NSSaleStageEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSaleStageEntity
    isExternal: true
    name: NSSaleStageEntity
    nameWithType: NSSaleStageEntity
    fullName: CRMScript.NetServer.NSSaleStageEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSaleStageEntity
  commentId: T:CRMScript.NetServer.NSSaleStageEntity
  isExternal: true
  name: NSSaleStageEntity
  nameWithType: NSSaleStageEntity
  fullName: CRMScript.NetServer.NSSaleStageEntity
- uid: CRMScript.NetServer.NSSaleType[]
  isExternal: true
  name: NSSaleType[]
  nameWithType: NSSaleType[]
  fullName: CRMScript.NetServer.NSSaleType[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSaleType
    isExternal: true
    name: NSSaleType
    nameWithType: NSSaleType
    fullName: CRMScript.NetServer.NSSaleType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSaleType
  commentId: T:CRMScript.NetServer.NSSaleType
  isExternal: true
  name: NSSaleType
  nameWithType: NSSaleType
  fullName: CRMScript.NetServer.NSSaleType
- uid: CRMScript.NetServer.NSSaleTypeEntity[]
  isExternal: true
  name: NSSaleTypeEntity[]
  nameWithType: NSSaleTypeEntity[]
  fullName: CRMScript.NetServer.NSSaleTypeEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSaleTypeEntity
    isExternal: true
    name: NSSaleTypeEntity
    nameWithType: NSSaleTypeEntity
    fullName: CRMScript.NetServer.NSSaleTypeEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSaleTypeEntity
  commentId: T:CRMScript.NetServer.NSSaleTypeEntity
  isExternal: true
  name: NSSaleTypeEntity
  nameWithType: NSSaleTypeEntity
  fullName: CRMScript.NetServer.NSSaleTypeEntity
- uid: CRMScript.NetServer.NSTaskListItem[]
  isExternal: true
  name: NSTaskListItem[]
  nameWithType: NSTaskListItem[]
  fullName: CRMScript.NetServer.NSTaskListItem[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTaskListItem
    isExternal: true
    name: NSTaskListItem
    nameWithType: NSTaskListItem
    fullName: CRMScript.NetServer.NSTaskListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTaskListItem
  commentId: T:CRMScript.NetServer.NSTaskListItem
  isExternal: true
  name: NSTaskListItem
  nameWithType: NSTaskListItem
  fullName: CRMScript.NetServer.NSTaskListItem
- uid: CRMScript.NetServer.NSTicketPriorityEntity[]
  isExternal: true
  name: NSTicketPriorityEntity[]
  nameWithType: NSTicketPriorityEntity[]
  fullName: CRMScript.NetServer.NSTicketPriorityEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTicketPriorityEntity
    isExternal: true
    name: NSTicketPriorityEntity
    nameWithType: NSTicketPriorityEntity
    fullName: CRMScript.NetServer.NSTicketPriorityEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTicketPriorityEntity
  commentId: T:CRMScript.NetServer.NSTicketPriorityEntity
  isExternal: true
  name: NSTicketPriorityEntity
  nameWithType: NSTicketPriorityEntity
  fullName: CRMScript.NetServer.NSTicketPriorityEntity
- uid: CRMScript.NetServer.NSWebPanelEntity[]
  isExternal: true
  name: NSWebPanelEntity[]
  nameWithType: NSWebPanelEntity[]
  fullName: CRMScript.NetServer.NSWebPanelEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSWebPanelEntity
    isExternal: true
    name: NSWebPanelEntity
    nameWithType: NSWebPanelEntity
    fullName: CRMScript.NetServer.NSWebPanelEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSWebPanelEntity
  commentId: T:CRMScript.NetServer.NSWebPanelEntity
  isExternal: true
  name: NSWebPanelEntity
  nameWithType: NSWebPanelEntity
  fullName: CRMScript.NetServer.NSWebPanelEntity
- uid: CRMScript.NetServer.NSBusiness
  commentId: T:CRMScript.NetServer.NSBusiness
  isExternal: true
  name: NSBusiness
  nameWithType: NSBusiness
  fullName: CRMScript.NetServer.NSBusiness
- uid: CRMScript.NetServer.NSBusiness[]
  isExternal: true
  name: NSBusiness[]
  nameWithType: NSBusiness[]
  fullName: CRMScript.NetServer.NSBusiness[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSBusiness
    isExternal: true
    name: NSBusiness
    nameWithType: NSBusiness
    fullName: CRMScript.NetServer.NSBusiness
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSBusiness
  commentId: T:CRMScript.NetServer.NSBusiness
  isExternal: true
  name: NSBusiness
  nameWithType: NSBusiness
  fullName: CRMScript.NetServer.NSBusiness
- uid: CRMScript.NetServer.NSCategory[]
  isExternal: true
  name: NSCategory[]
  nameWithType: NSCategory[]
  fullName: CRMScript.NetServer.NSCategory[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCategory
    isExternal: true
    name: NSCategory
    nameWithType: NSCategory
    fullName: CRMScript.NetServer.NSCategory
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCategory
  commentId: T:CRMScript.NetServer.NSCategory
  isExternal: true
  name: NSCategory
  nameWithType: NSCategory
  fullName: CRMScript.NetServer.NSCategory
- uid: CRMScript.NetServer.NSCategory
  commentId: T:CRMScript.NetServer.NSCategory
  isExternal: true
  name: NSCategory
  nameWithType: NSCategory
  fullName: CRMScript.NetServer.NSCategory
- uid: CRMScript.NetServer.NSCompetitor
  commentId: T:CRMScript.NetServer.NSCompetitor
  isExternal: true
  name: NSCompetitor
  nameWithType: NSCompetitor
  fullName: CRMScript.NetServer.NSCompetitor
- uid: CRMScript.NetServer.NSCompetitor[]
  isExternal: true
  name: NSCompetitor[]
  nameWithType: NSCompetitor[]
  fullName: CRMScript.NetServer.NSCompetitor[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCompetitor
    isExternal: true
    name: NSCompetitor
    nameWithType: NSCompetitor
    fullName: CRMScript.NetServer.NSCompetitor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCompetitor
  commentId: T:CRMScript.NetServer.NSCompetitor
  isExternal: true
  name: NSCompetitor
  nameWithType: NSCompetitor
  fullName: CRMScript.NetServer.NSCompetitor
- uid: CRMScript.NetServer.NSConsentPurpose
  commentId: T:CRMScript.NetServer.NSConsentPurpose
  isExternal: true
  name: NSConsentPurpose
  nameWithType: NSConsentPurpose
  fullName: CRMScript.NetServer.NSConsentPurpose
- uid: CRMScript.NetServer.NSConsentPurpose[]
  isExternal: true
  name: NSConsentPurpose[]
  nameWithType: NSConsentPurpose[]
  fullName: CRMScript.NetServer.NSConsentPurpose[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSConsentPurpose
    isExternal: true
    name: NSConsentPurpose
    nameWithType: NSConsentPurpose
    fullName: CRMScript.NetServer.NSConsentPurpose
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSConsentPurpose
  commentId: T:CRMScript.NetServer.NSConsentPurpose
  isExternal: true
  name: NSConsentPurpose
  nameWithType: NSConsentPurpose
  fullName: CRMScript.NetServer.NSConsentPurpose
- uid: CRMScript.NetServer.NSConsentSource
  commentId: T:CRMScript.NetServer.NSConsentSource
  isExternal: true
  name: NSConsentSource
  nameWithType: NSConsentSource
  fullName: CRMScript.NetServer.NSConsentSource
- uid: CRMScript.NetServer.NSConsentSource[]
  isExternal: true
  name: NSConsentSource[]
  nameWithType: NSConsentSource[]
  fullName: CRMScript.NetServer.NSConsentSource[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSConsentSource
    isExternal: true
    name: NSConsentSource
    nameWithType: NSConsentSource
    fullName: CRMScript.NetServer.NSConsentSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSConsentSource
  commentId: T:CRMScript.NetServer.NSConsentSource
  isExternal: true
  name: NSConsentSource
  nameWithType: NSConsentSource
  fullName: CRMScript.NetServer.NSConsentSource
- uid: CRMScript.NetServer.NSCredited
  commentId: T:CRMScript.NetServer.NSCredited
  isExternal: true
  name: NSCredited
  nameWithType: NSCredited
  fullName: CRMScript.NetServer.NSCredited
- uid: CRMScript.NetServer.NSCredited[]
  isExternal: true
  name: NSCredited[]
  nameWithType: NSCredited[]
  fullName: CRMScript.NetServer.NSCredited[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCredited
    isExternal: true
    name: NSCredited
    nameWithType: NSCredited
    fullName: CRMScript.NetServer.NSCredited
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCredited
  commentId: T:CRMScript.NetServer.NSCredited
  isExternal: true
  name: NSCredited
  nameWithType: NSCredited
  fullName: CRMScript.NetServer.NSCredited
- uid: CRMScript.NetServer.NSCurrency[]
  isExternal: true
  name: NSCurrency[]
  nameWithType: NSCurrency[]
  fullName: CRMScript.NetServer.NSCurrency[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCurrency
    isExternal: true
    name: NSCurrency
    nameWithType: NSCurrency
    fullName: CRMScript.NetServer.NSCurrency
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCurrency
  commentId: T:CRMScript.NetServer.NSCurrency
  isExternal: true
  name: NSCurrency
  nameWithType: NSCurrency
  fullName: CRMScript.NetServer.NSCurrency
- uid: CRMScript.NetServer.NSCurrency
  commentId: T:CRMScript.NetServer.NSCurrency
  isExternal: true
  name: NSCurrency
  nameWithType: NSCurrency
  fullName: CRMScript.NetServer.NSCurrency
- uid: CRMScript.NetServer.NSCustomerLanguage
  commentId: T:CRMScript.NetServer.NSCustomerLanguage
  isExternal: true
  name: NSCustomerLanguage
  nameWithType: NSCustomerLanguage
  fullName: CRMScript.NetServer.NSCustomerLanguage
- uid: CRMScript.NetServer.NSCustomerLanguage[]
  isExternal: true
  name: NSCustomerLanguage[]
  nameWithType: NSCustomerLanguage[]
  fullName: CRMScript.NetServer.NSCustomerLanguage[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSCustomerLanguage
    isExternal: true
    name: NSCustomerLanguage
    nameWithType: NSCustomerLanguage
    fullName: CRMScript.NetServer.NSCustomerLanguage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSCustomerLanguage
  commentId: T:CRMScript.NetServer.NSCustomerLanguage
  isExternal: true
  name: NSCustomerLanguage
  nameWithType: NSCustomerLanguage
  fullName: CRMScript.NetServer.NSCustomerLanguage
- uid: CRMScript.NetServer.NSDeliveryTerm
  commentId: T:CRMScript.NetServer.NSDeliveryTerm
  isExternal: true
  name: NSDeliveryTerm
  nameWithType: NSDeliveryTerm
  fullName: CRMScript.NetServer.NSDeliveryTerm
- uid: CRMScript.NetServer.NSDeliveryTerm[]
  isExternal: true
  name: NSDeliveryTerm[]
  nameWithType: NSDeliveryTerm[]
  fullName: CRMScript.NetServer.NSDeliveryTerm[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDeliveryTerm
    isExternal: true
    name: NSDeliveryTerm
    nameWithType: NSDeliveryTerm
    fullName: CRMScript.NetServer.NSDeliveryTerm
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDeliveryTerm
  commentId: T:CRMScript.NetServer.NSDeliveryTerm
  isExternal: true
  name: NSDeliveryTerm
  nameWithType: NSDeliveryTerm
  fullName: CRMScript.NetServer.NSDeliveryTerm
- uid: CRMScript.NetServer.NSDeliveryType
  commentId: T:CRMScript.NetServer.NSDeliveryType
  isExternal: true
  name: NSDeliveryType
  nameWithType: NSDeliveryType
  fullName: CRMScript.NetServer.NSDeliveryType
- uid: CRMScript.NetServer.NSDeliveryType[]
  isExternal: true
  name: NSDeliveryType[]
  nameWithType: NSDeliveryType[]
  fullName: CRMScript.NetServer.NSDeliveryType[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDeliveryType
    isExternal: true
    name: NSDeliveryType
    nameWithType: NSDeliveryType
    fullName: CRMScript.NetServer.NSDeliveryType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDeliveryType
  commentId: T:CRMScript.NetServer.NSDeliveryType
  isExternal: true
  name: NSDeliveryType
  nameWithType: NSDeliveryType
  fullName: CRMScript.NetServer.NSDeliveryType
- uid: CRMScript.NetServer.NSDepartment
  commentId: T:CRMScript.NetServer.NSDepartment
  isExternal: true
  name: NSDepartment
  nameWithType: NSDepartment
  fullName: CRMScript.NetServer.NSDepartment
- uid: CRMScript.NetServer.NSDepartment[]
  isExternal: true
  name: NSDepartment[]
  nameWithType: NSDepartment[]
  fullName: CRMScript.NetServer.NSDepartment[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDepartment
    isExternal: true
    name: NSDepartment
    nameWithType: NSDepartment
    fullName: CRMScript.NetServer.NSDepartment
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDepartment
  commentId: T:CRMScript.NetServer.NSDepartment
  isExternal: true
  name: NSDepartment
  nameWithType: NSDepartment
  fullName: CRMScript.NetServer.NSDepartment
- uid: CRMScript.NetServer.NSDocumentTemplate
  commentId: T:CRMScript.NetServer.NSDocumentTemplate
  isExternal: true
  name: NSDocumentTemplate
  nameWithType: NSDocumentTemplate
  fullName: CRMScript.NetServer.NSDocumentTemplate
- uid: CRMScript.Global.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: CRMScript.Global.String[]
  spec.crmscript:
  - uid: CRMScript.Global.String
    isExternal: true
    name: String
    nameWithType: String
    fullName: CRMScript.Global.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.NetServer.NSDocumentTemplate[]
  isExternal: true
  name: NSDocumentTemplate[]
  nameWithType: NSDocumentTemplate[]
  fullName: CRMScript.NetServer.NSDocumentTemplate[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSDocumentTemplate
    isExternal: true
    name: NSDocumentTemplate
    nameWithType: NSDocumentTemplate
    fullName: CRMScript.NetServer.NSDocumentTemplate
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSDocumentTemplate
  commentId: T:CRMScript.NetServer.NSDocumentTemplate
  isExternal: true
  name: NSDocumentTemplate
  nameWithType: NSDocumentTemplate
  fullName: CRMScript.NetServer.NSDocumentTemplate
- uid: CRMScript.NetServer.NSTask[]
  isExternal: true
  name: NSTask[]
  nameWithType: NSTask[]
  fullName: CRMScript.NetServer.NSTask[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTask
    isExternal: true
    name: NSTask
    nameWithType: NSTask
    fullName: CRMScript.NetServer.NSTask
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTask
  commentId: T:CRMScript.NetServer.NSTask
  isExternal: true
  name: NSTask
  nameWithType: NSTask
  fullName: CRMScript.NetServer.NSTask
- uid: CRMScript.NetServer.NSStream
  commentId: T:CRMScript.NetServer.NSStream
  isExternal: true
  name: NSStream
  nameWithType: NSStream
  fullName: CRMScript.NetServer.NSStream
- uid: CRMScript.NetServer.NSTask
  commentId: T:CRMScript.NetServer.NSTask
  isExternal: true
  name: NSTask
  nameWithType: NSTask
  fullName: CRMScript.NetServer.NSTask
- uid: CRMScript.Global.StringDictionary
  commentId: T:CRMScript.Global.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: CRMScript.Global.StringDictionary
- uid: CRMScript.NetServer.NSSelectableMDOListItem[]
  isExternal: true
  name: NSSelectableMDOListItem[]
  nameWithType: NSSelectableMDOListItem[]
  fullName: CRMScript.NetServer.NSSelectableMDOListItem[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSelectableMDOListItem
    isExternal: true
    name: NSSelectableMDOListItem
    nameWithType: NSSelectableMDOListItem
    fullName: CRMScript.NetServer.NSSelectableMDOListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSelectableMDOListItem
  commentId: T:CRMScript.NetServer.NSSelectableMDOListItem
  isExternal: true
  name: NSSelectableMDOListItem
  nameWithType: NSSelectableMDOListItem
  fullName: CRMScript.NetServer.NSSelectableMDOListItem
- uid: CRMScript.NetServer.NSHeadingEntity[]
  isExternal: true
  name: NSHeadingEntity[]
  nameWithType: NSHeadingEntity[]
  fullName: CRMScript.NetServer.NSHeadingEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSHeadingEntity
    isExternal: true
    name: NSHeadingEntity
    nameWithType: NSHeadingEntity
    fullName: CRMScript.NetServer.NSHeadingEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSHeadingEntity
  commentId: T:CRMScript.NetServer.NSHeadingEntity
  isExternal: true
  name: NSHeadingEntity
  nameWithType: NSHeadingEntity
  fullName: CRMScript.NetServer.NSHeadingEntity
- uid: CRMScript.NetServer.NSLanguageInfo[]
  isExternal: true
  name: NSLanguageInfo[]
  nameWithType: NSLanguageInfo[]
  fullName: CRMScript.NetServer.NSLanguageInfo[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSLanguageInfo
    isExternal: true
    name: NSLanguageInfo
    nameWithType: NSLanguageInfo
    fullName: CRMScript.NetServer.NSLanguageInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSLanguageInfo
  commentId: T:CRMScript.NetServer.NSLanguageInfo
  isExternal: true
  name: NSLanguageInfo
  nameWithType: NSLanguageInfo
  fullName: CRMScript.NetServer.NSLanguageInfo
- uid: CRMScript.NetServer.NSLanguageInfo
  commentId: T:CRMScript.NetServer.NSLanguageInfo
  isExternal: true
  name: NSLanguageInfo
  nameWithType: NSLanguageInfo
  fullName: CRMScript.NetServer.NSLanguageInfo
- uid: CRMScript.NetServer.NSLegalBase
  commentId: T:CRMScript.NetServer.NSLegalBase
  isExternal: true
  name: NSLegalBase
  nameWithType: NSLegalBase
  fullName: CRMScript.NetServer.NSLegalBase
- uid: CRMScript.NetServer.NSLegalBase[]
  isExternal: true
  name: NSLegalBase[]
  nameWithType: NSLegalBase[]
  fullName: CRMScript.NetServer.NSLegalBase[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSLegalBase
    isExternal: true
    name: NSLegalBase
    nameWithType: NSLegalBase
    fullName: CRMScript.NetServer.NSLegalBase
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSLegalBase
  commentId: T:CRMScript.NetServer.NSLegalBase
  isExternal: true
  name: NSLegalBase
  nameWithType: NSLegalBase
  fullName: CRMScript.NetServer.NSLegalBase
- uid: CRMScript.NetServer.NSLink
  commentId: T:CRMScript.NetServer.NSLink
  isExternal: true
  name: NSLink
  nameWithType: NSLink
  fullName: CRMScript.NetServer.NSLink
- uid: CRMScript.NetServer.NSLink[]
  isExternal: true
  name: NSLink[]
  nameWithType: NSLink[]
  fullName: CRMScript.NetServer.NSLink[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSLink
    isExternal: true
    name: NSLink
    nameWithType: NSLink
    fullName: CRMScript.NetServer.NSLink
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSLink
  commentId: T:CRMScript.NetServer.NSLink
  isExternal: true
  name: NSLink
  nameWithType: NSLink
  fullName: CRMScript.NetServer.NSLink
- uid: CRMScript.NetServer.NSListEntity[]
  isExternal: true
  name: NSListEntity[]
  nameWithType: NSListEntity[]
  fullName: CRMScript.NetServer.NSListEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSListEntity
    isExternal: true
    name: NSListEntity
    nameWithType: NSListEntity
    fullName: CRMScript.NetServer.NSListEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSListEntity
  commentId: T:CRMScript.NetServer.NSListEntity
  isExternal: true
  name: NSListEntity
  nameWithType: NSListEntity
  fullName: CRMScript.NetServer.NSListEntity
- uid: CRMScript.NetServer.NSLocalizedText
  commentId: T:CRMScript.NetServer.NSLocalizedText
  isExternal: true
  name: NSLocalizedText
  nameWithType: NSLocalizedText
  fullName: CRMScript.NetServer.NSLocalizedText
- uid: CRMScript.NetServer.NSLocalizedText[]
  isExternal: true
  name: NSLocalizedText[]
  nameWithType: NSLocalizedText[]
  fullName: CRMScript.NetServer.NSLocalizedText[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSLocalizedText
    isExternal: true
    name: NSLocalizedText
    nameWithType: NSLocalizedText
    fullName: CRMScript.NetServer.NSLocalizedText
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSLocalizedText
  commentId: T:CRMScript.NetServer.NSLocalizedText
  isExternal: true
  name: NSLocalizedText
  nameWithType: NSLocalizedText
  fullName: CRMScript.NetServer.NSLocalizedText
- uid: CRMScript.NetServer.NSMrMrs
  commentId: T:CRMScript.NetServer.NSMrMrs
  isExternal: true
  name: NSMrMrs
  nameWithType: NSMrMrs
  fullName: CRMScript.NetServer.NSMrMrs
- uid: CRMScript.NetServer.NSMrMrs[]
  isExternal: true
  name: NSMrMrs[]
  nameWithType: NSMrMrs[]
  fullName: CRMScript.NetServer.NSMrMrs[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSMrMrs
    isExternal: true
    name: NSMrMrs
    nameWithType: NSMrMrs
    fullName: CRMScript.NetServer.NSMrMrs
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSMrMrs
  commentId: T:CRMScript.NetServer.NSMrMrs
  isExternal: true
  name: NSMrMrs
  nameWithType: NSMrMrs
  fullName: CRMScript.NetServer.NSMrMrs
- uid: CRMScript.NetServer.NSPaymentTerm
  commentId: T:CRMScript.NetServer.NSPaymentTerm
  isExternal: true
  name: NSPaymentTerm
  nameWithType: NSPaymentTerm
  fullName: CRMScript.NetServer.NSPaymentTerm
- uid: CRMScript.NetServer.NSPaymentTerm[]
  isExternal: true
  name: NSPaymentTerm[]
  nameWithType: NSPaymentTerm[]
  fullName: CRMScript.NetServer.NSPaymentTerm[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSPaymentTerm
    isExternal: true
    name: NSPaymentTerm
    nameWithType: NSPaymentTerm
    fullName: CRMScript.NetServer.NSPaymentTerm
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSPaymentTerm
  commentId: T:CRMScript.NetServer.NSPaymentTerm
  isExternal: true
  name: NSPaymentTerm
  nameWithType: NSPaymentTerm
  fullName: CRMScript.NetServer.NSPaymentTerm
- uid: CRMScript.NetServer.NSPaymentType
  commentId: T:CRMScript.NetServer.NSPaymentType
  isExternal: true
  name: NSPaymentType
  nameWithType: NSPaymentType
  fullName: CRMScript.NetServer.NSPaymentType
- uid: CRMScript.NetServer.NSPaymentType[]
  isExternal: true
  name: NSPaymentType[]
  nameWithType: NSPaymentType[]
  fullName: CRMScript.NetServer.NSPaymentType[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSPaymentType
    isExternal: true
    name: NSPaymentType
    nameWithType: NSPaymentType
    fullName: CRMScript.NetServer.NSPaymentType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSPaymentType
  commentId: T:CRMScript.NetServer.NSPaymentType
  isExternal: true
  name: NSPaymentType
  nameWithType: NSPaymentType
  fullName: CRMScript.NetServer.NSPaymentType
- uid: CRMScript.NetServer.NSPosition
  commentId: T:CRMScript.NetServer.NSPosition
  isExternal: true
  name: NSPosition
  nameWithType: NSPosition
  fullName: CRMScript.NetServer.NSPosition
- uid: CRMScript.NetServer.NSPosition[]
  isExternal: true
  name: NSPosition[]
  nameWithType: NSPosition[]
  fullName: CRMScript.NetServer.NSPosition[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSPosition
    isExternal: true
    name: NSPosition
    nameWithType: NSPosition
    fullName: CRMScript.NetServer.NSPosition
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSPosition
  commentId: T:CRMScript.NetServer.NSPosition
  isExternal: true
  name: NSPosition
  nameWithType: NSPosition
  fullName: CRMScript.NetServer.NSPosition
- uid: CRMScript.NetServer.NSPriority[]
  isExternal: true
  name: NSPriority[]
  nameWithType: NSPriority[]
  fullName: CRMScript.NetServer.NSPriority[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSPriority
    isExternal: true
    name: NSPriority
    nameWithType: NSPriority
    fullName: CRMScript.NetServer.NSPriority
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSPriority
  commentId: T:CRMScript.NetServer.NSPriority
  isExternal: true
  name: NSPriority
  nameWithType: NSPriority
  fullName: CRMScript.NetServer.NSPriority
- uid: CRMScript.NetServer.NSPriority
  commentId: T:CRMScript.NetServer.NSPriority
  isExternal: true
  name: NSPriority
  nameWithType: NSPriority
  fullName: CRMScript.NetServer.NSPriority
- uid: CRMScript.NetServer.NSProductCategory[]
  isExternal: true
  name: NSProductCategory[]
  nameWithType: NSProductCategory[]
  fullName: CRMScript.NetServer.NSProductCategory[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSProductCategory
    isExternal: true
    name: NSProductCategory
    nameWithType: NSProductCategory
    fullName: CRMScript.NetServer.NSProductCategory
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSProductCategory
  commentId: T:CRMScript.NetServer.NSProductCategory
  isExternal: true
  name: NSProductCategory
  nameWithType: NSProductCategory
  fullName: CRMScript.NetServer.NSProductCategory
- uid: CRMScript.NetServer.NSProductCategory
  commentId: T:CRMScript.NetServer.NSProductCategory
  isExternal: true
  name: NSProductCategory
  nameWithType: NSProductCategory
  fullName: CRMScript.NetServer.NSProductCategory
- uid: CRMScript.NetServer.NSProductFamily[]
  isExternal: true
  name: NSProductFamily[]
  nameWithType: NSProductFamily[]
  fullName: CRMScript.NetServer.NSProductFamily[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSProductFamily
    isExternal: true
    name: NSProductFamily
    nameWithType: NSProductFamily
    fullName: CRMScript.NetServer.NSProductFamily
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSProductFamily
  commentId: T:CRMScript.NetServer.NSProductFamily
  isExternal: true
  name: NSProductFamily
  nameWithType: NSProductFamily
  fullName: CRMScript.NetServer.NSProductFamily
- uid: CRMScript.NetServer.NSProductFamily
  commentId: T:CRMScript.NetServer.NSProductFamily
  isExternal: true
  name: NSProductFamily
  nameWithType: NSProductFamily
  fullName: CRMScript.NetServer.NSProductFamily
- uid: CRMScript.NetServer.NSProductType
  commentId: T:CRMScript.NetServer.NSProductType
  isExternal: true
  name: NSProductType
  nameWithType: NSProductType
  fullName: CRMScript.NetServer.NSProductType
- uid: CRMScript.NetServer.NSProductType[]
  isExternal: true
  name: NSProductType[]
  nameWithType: NSProductType[]
  fullName: CRMScript.NetServer.NSProductType[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSProductType
    isExternal: true
    name: NSProductType
    nameWithType: NSProductType
    fullName: CRMScript.NetServer.NSProductType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSProductType
  commentId: T:CRMScript.NetServer.NSProductType
  isExternal: true
  name: NSProductType
  nameWithType: NSProductType
  fullName: CRMScript.NetServer.NSProductType
- uid: CRMScript.NetServer.NSProjectStatus
  commentId: T:CRMScript.NetServer.NSProjectStatus
  isExternal: true
  name: NSProjectStatus
  nameWithType: NSProjectStatus
  fullName: CRMScript.NetServer.NSProjectStatus
- uid: CRMScript.NetServer.NSProjectStatus[]
  isExternal: true
  name: NSProjectStatus[]
  nameWithType: NSProjectStatus[]
  fullName: CRMScript.NetServer.NSProjectStatus[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSProjectStatus
    isExternal: true
    name: NSProjectStatus
    nameWithType: NSProjectStatus
    fullName: CRMScript.NetServer.NSProjectStatus
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSProjectStatus
  commentId: T:CRMScript.NetServer.NSProjectStatus
  isExternal: true
  name: NSProjectStatus
  nameWithType: NSProjectStatus
  fullName: CRMScript.NetServer.NSProjectStatus
- uid: CRMScript.NetServer.NSProjectType
  commentId: T:CRMScript.NetServer.NSProjectType
  isExternal: true
  name: NSProjectType
  nameWithType: NSProjectType
  fullName: CRMScript.NetServer.NSProjectType
- uid: CRMScript.NetServer.NSProjectType[]
  isExternal: true
  name: NSProjectType[]
  nameWithType: NSProjectType[]
  fullName: CRMScript.NetServer.NSProjectType[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSProjectType
    isExternal: true
    name: NSProjectType
    nameWithType: NSProjectType
    fullName: CRMScript.NetServer.NSProjectType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSProjectType
  commentId: T:CRMScript.NetServer.NSProjectType
  isExternal: true
  name: NSProjectType
  nameWithType: NSProjectType
  fullName: CRMScript.NetServer.NSProjectType
- uid: CRMScript.NetServer.NSQuickReply[]
  isExternal: true
  name: NSQuickReply[]
  nameWithType: NSQuickReply[]
  fullName: CRMScript.NetServer.NSQuickReply[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSQuickReply
    isExternal: true
    name: NSQuickReply
    nameWithType: NSQuickReply
    fullName: CRMScript.NetServer.NSQuickReply
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSQuickReply
  commentId: T:CRMScript.NetServer.NSQuickReply
  isExternal: true
  name: NSQuickReply
  nameWithType: NSQuickReply
  fullName: CRMScript.NetServer.NSQuickReply
- uid: CRMScript.NetServer.NSRating
  commentId: T:CRMScript.NetServer.NSRating
  isExternal: true
  name: NSRating
  nameWithType: NSRating
  fullName: CRMScript.NetServer.NSRating
- uid: CRMScript.NetServer.NSRating[]
  isExternal: true
  name: NSRating[]
  nameWithType: NSRating[]
  fullName: CRMScript.NetServer.NSRating[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSRating
    isExternal: true
    name: NSRating
    nameWithType: NSRating
    fullName: CRMScript.NetServer.NSRating
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSRating
  commentId: T:CRMScript.NetServer.NSRating
  isExternal: true
  name: NSRating
  nameWithType: NSRating
  fullName: CRMScript.NetServer.NSRating
- uid: CRMScript.NetServer.NSReason
  commentId: T:CRMScript.NetServer.NSReason
  isExternal: true
  name: NSReason
  nameWithType: NSReason
  fullName: CRMScript.NetServer.NSReason
- uid: CRMScript.NetServer.NSReason[]
  isExternal: true
  name: NSReason[]
  nameWithType: NSReason[]
  fullName: CRMScript.NetServer.NSReason[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSReason
    isExternal: true
    name: NSReason
    nameWithType: NSReason
    fullName: CRMScript.NetServer.NSReason
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSReason
  commentId: T:CRMScript.NetServer.NSReason
  isExternal: true
  name: NSReason
  nameWithType: NSReason
  fullName: CRMScript.NetServer.NSReason
- uid: CRMScript.NetServer.NSReasonSold
  commentId: T:CRMScript.NetServer.NSReasonSold
  isExternal: true
  name: NSReasonSold
  nameWithType: NSReasonSold
  fullName: CRMScript.NetServer.NSReasonSold
- uid: CRMScript.NetServer.NSReasonSold[]
  isExternal: true
  name: NSReasonSold[]
  nameWithType: NSReasonSold[]
  fullName: CRMScript.NetServer.NSReasonSold[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSReasonSold
    isExternal: true
    name: NSReasonSold
    nameWithType: NSReasonSold
    fullName: CRMScript.NetServer.NSReasonSold
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSReasonSold
  commentId: T:CRMScript.NetServer.NSReasonSold
  isExternal: true
  name: NSReasonSold
  nameWithType: NSReasonSold
  fullName: CRMScript.NetServer.NSReasonSold
- uid: CRMScript.NetServer.NSReasonStalled
  commentId: T:CRMScript.NetServer.NSReasonStalled
  isExternal: true
  name: NSReasonStalled
  nameWithType: NSReasonStalled
  fullName: CRMScript.NetServer.NSReasonStalled
- uid: CRMScript.NetServer.NSReasonStalled[]
  isExternal: true
  name: NSReasonStalled[]
  nameWithType: NSReasonStalled[]
  fullName: CRMScript.NetServer.NSReasonStalled[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSReasonStalled
    isExternal: true
    name: NSReasonStalled
    nameWithType: NSReasonStalled
    fullName: CRMScript.NetServer.NSReasonStalled
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSReasonStalled
  commentId: T:CRMScript.NetServer.NSReasonStalled
  isExternal: true
  name: NSReasonStalled
  nameWithType: NSReasonStalled
  fullName: CRMScript.NetServer.NSReasonStalled
- uid: CRMScript.NetServer.NSSaleType
  commentId: T:CRMScript.NetServer.NSSaleType
  isExternal: true
  name: NSSaleType
  nameWithType: NSSaleType
  fullName: CRMScript.NetServer.NSSaleType
- uid: CRMScript.NetServer.NSSelectionCategory
  commentId: T:CRMScript.NetServer.NSSelectionCategory
  isExternal: true
  name: NSSelectionCategory
  nameWithType: NSSelectionCategory
  fullName: CRMScript.NetServer.NSSelectionCategory
- uid: CRMScript.NetServer.NSSelectionCategory[]
  isExternal: true
  name: NSSelectionCategory[]
  nameWithType: NSSelectionCategory[]
  fullName: CRMScript.NetServer.NSSelectionCategory[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSelectionCategory
    isExternal: true
    name: NSSelectionCategory
    nameWithType: NSSelectionCategory
    fullName: CRMScript.NetServer.NSSelectionCategory
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSelectionCategory
  commentId: T:CRMScript.NetServer.NSSelectionCategory
  isExternal: true
  name: NSSelectionCategory
  nameWithType: NSSelectionCategory
  fullName: CRMScript.NetServer.NSSelectionCategory
- uid: CRMScript.NetServer.NSSource
  commentId: T:CRMScript.NetServer.NSSource
  isExternal: true
  name: NSSource
  nameWithType: NSSource
  fullName: CRMScript.NetServer.NSSource
- uid: CRMScript.NetServer.NSSource[]
  isExternal: true
  name: NSSource[]
  nameWithType: NSSource[]
  fullName: CRMScript.NetServer.NSSource[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSSource
    isExternal: true
    name: NSSource
    nameWithType: NSSource
    fullName: CRMScript.NetServer.NSSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSSource
  commentId: T:CRMScript.NetServer.NSSource
  isExternal: true
  name: NSSource
  nameWithType: NSSource
  fullName: CRMScript.NetServer.NSSource
- uid: CRMScript.NetServer.NSTicketCategoryEntity[]
  isExternal: true
  name: NSTicketCategoryEntity[]
  nameWithType: NSTicketCategoryEntity[]
  fullName: CRMScript.NetServer.NSTicketCategoryEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTicketCategoryEntity
    isExternal: true
    name: NSTicketCategoryEntity
    nameWithType: NSTicketCategoryEntity
    fullName: CRMScript.NetServer.NSTicketCategoryEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTicketCategoryEntity
  commentId: T:CRMScript.NetServer.NSTicketCategoryEntity
  isExternal: true
  name: NSTicketCategoryEntity
  nameWithType: NSTicketCategoryEntity
  fullName: CRMScript.NetServer.NSTicketCategoryEntity
- uid: CRMScript.NetServer.NSMDOListItem[]
  isExternal: true
  name: NSMDOListItem[]
  nameWithType: NSMDOListItem[]
  fullName: CRMScript.NetServer.NSMDOListItem[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSMDOListItem
    isExternal: true
    name: NSMDOListItem
    nameWithType: NSMDOListItem
    fullName: CRMScript.NetServer.NSMDOListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSMDOListItem
  commentId: T:CRMScript.NetServer.NSMDOListItem
  isExternal: true
  name: NSMDOListItem
  nameWithType: NSMDOListItem
  fullName: CRMScript.NetServer.NSMDOListItem
- uid: CRMScript.NetServer.NSTicketCategory
  commentId: T:CRMScript.NetServer.NSTicketCategory
  isExternal: true
  name: NSTicketCategory
  nameWithType: NSTicketCategory
  fullName: CRMScript.NetServer.NSTicketCategory
- uid: CRMScript.NetServer.NSTicketPriority[]
  isExternal: true
  name: NSTicketPriority[]
  nameWithType: NSTicketPriority[]
  fullName: CRMScript.NetServer.NSTicketPriority[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTicketPriority
    isExternal: true
    name: NSTicketPriority
    nameWithType: NSTicketPriority
    fullName: CRMScript.NetServer.NSTicketPriority
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTicketPriority
  commentId: T:CRMScript.NetServer.NSTicketPriority
  isExternal: true
  name: NSTicketPriority
  nameWithType: NSTicketPriority
  fullName: CRMScript.NetServer.NSTicketPriority
- uid: CRMScript.NetServer.NSTicketPriority
  commentId: T:CRMScript.NetServer.NSTicketPriority
  isExternal: true
  name: NSTicketPriority
  nameWithType: NSTicketPriority
  fullName: CRMScript.NetServer.NSTicketPriority
- uid: CRMScript.NetServer.NSTicketStatusEntity[]
  isExternal: true
  name: NSTicketStatusEntity[]
  nameWithType: NSTicketStatusEntity[]
  fullName: CRMScript.NetServer.NSTicketStatusEntity[]
  spec.crmscript:
  - uid: CRMScript.NetServer.NSTicketStatusEntity
    isExternal: true
    name: NSTicketStatusEntity
    nameWithType: NSTicketStatusEntity
    fullName: CRMScript.NetServer.NSTicketStatusEntity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: CRMScript.NetServer.NSTicketStatusEntity
  commentId: T:CRMScript.NetServer.NSTicketStatusEntity
  isExternal: true
  name: NSTicketStatusEntity
  nameWithType: NSTicketStatusEntity
  fullName: CRMScript.NetServer.NSTicketStatusEntity
- uid: CRMScript.NetServer.NSTemplateInfo
  commentId: T:CRMScript.NetServer.NSTemplateInfo
  isExternal: true
  name: NSTemplateInfo
  nameWithType: NSTemplateInfo
  fullName: CRMScript.NetServer.NSTemplateInfo