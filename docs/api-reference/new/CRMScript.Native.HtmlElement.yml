### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  id: HtmlElement
  so.intellisense: Void.HtmlElement
  langs:
  - crmscript
  children:
  - CRMScript.Native.HtmlElement.clearValue
  - CRMScript.Native.HtmlElement.getFieldValue
  - CRMScript.Native.HtmlElement.getNextTabIndex
  - CRMScript.Native.HtmlElement.getTabIndexString
  - CRMScript.Native.HtmlElement.getTypeName
  - CRMScript.Native.HtmlElement.isEmpty
  - CRMScript.Native.HtmlElement.setDisabled
  - CRMScript.Native.HtmlElement.setErrorMessage
  - CRMScript.Native.HtmlElement.setFieldValue
  - CRMScript.Native.HtmlElement.setFromCgi
  - CRMScript.Native.HtmlElement.setInfoMessage
  - CRMScript.Native.HtmlElement.setNotEditable
  - CRMScript.Native.HtmlElement.setValue
  - CRMScript.Native.HtmlElement.toBool
  - CRMScript.Native.HtmlElement.toInteger
  - CRMScript.Native.HtmlElement.toString
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
  type: Class
  summary: "\nThe CRMScript<strong>HtmlElement</strong>class represents HTML elements in the SuperOffice UI.\n"
  example: 
- uid: CRMScript.Native.HtmlElement.clearValue
  commentId: M:CRMScript.Native.HtmlElement.clearValue
  id: 'clearValue'
  so.intellisense: HtmlElement.clearValue
  langs:
  - crmscript
  name: 'clearValue'
  nameWithType: HtmlElement.clearValue
  fullName: CRMScript.Native.HtmlElement.clearValue
  type: Method
  summary: 
  remarks: 
  syntax: 
    content: Void clearValue()
    parameters:
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.getFieldValue
  commentId: M:CRMScript.Native.HtmlElement.getFieldValue
  id: 'getFieldValue'
  so.intellisense: HtmlElement.getFieldValue
  langs:
  - crmscript
  name: 'getFieldValue'
  nameWithType: HtmlElement.getFieldValue
  fullName: CRMScript.Native.HtmlElement.getFieldValue
  type: Method
  summary: "\nReturns the value of a specific field.\n"
  remarks: 
  syntax: 
    content: String getFieldValue(String field)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Native.HtmlElement.getNextTabIndex
  commentId: M:CRMScript.Native.HtmlElement.getNextTabIndex
  id: 'getNextTabIndex'
  so.intellisense: HtmlElement.getNextTabIndex
  langs:
  - crmscript
  name: 'getNextTabIndex'
  nameWithType: HtmlElement.getNextTabIndex
  fullName: CRMScript.Native.HtmlElement.getNextTabIndex
  type: Method
  summary: "\nThe HTML<code>tabindex</code>attribute specifies the tab order of an element. It determines the sequence of entering fields with Tab or Shift+Tab.\n"
  remarks: 
  syntax: 
    content: Integer getNextTabIndex()
    parameters:
    return:
      type: CRMScript.Global.Integer
  example: 
- uid: CRMScript.Native.HtmlElement.getTabIndexString
  commentId: M:CRMScript.Native.HtmlElement.getTabIndexString
  id: 'getTabIndexString'
  so.intellisense: HtmlElement.getTabIndexString
  langs:
  - crmscript
  name: 'getTabIndexString'
  nameWithType: HtmlElement.getTabIndexString
  fullName: CRMScript.Native.HtmlElement.getTabIndexString
  type: Method
  summary: "\nCRMScript method in class HtmlElement that retrieves the tabulator index string of the elementReturns the tabulator index string of the element. By default, a special ID is added for the 1st element. You can optionally signal to omit element ID if it is the 1st element.<p></p>\nThe HTML<code>tabindex</code>attribute specifies the tab order of an element. It determines the sequence of entering fields with Tab or Shift+Tab.<p></p>\nA variant of<code>getTabIndexString()</code>that omits element ID if it is the 1st element.\n"
  remarks: 
  syntax: 
    content: String getTabIndexString()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Native.HtmlElement.getTypeName
  commentId: M:CRMScript.Native.HtmlElement.getTypeName
  id: 'getTypeName'
  so.intellisense: HtmlElement.getTypeName
  langs:
  - crmscript
  name: 'getTypeName'
  nameWithType: HtmlElement.getTypeName
  fullName: CRMScript.Native.HtmlElement.getTypeName
  type: Method
  summary: "\nReturns the element type. For example, HtmlAnchorLine or HtmlGrid.<p></p>\n[!TIP]
Look up specific elements in the [bLogic screen element][1] reference.<p></p>\n<!-- Referenced links -->\n"
  remarks: 
  syntax: 
    content: String getTypeName()
    parameters:
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Native.HtmlElement.isEmpty
  commentId: M:CRMScript.Native.HtmlElement.isEmpty
  id: 'isEmpty'
  so.intellisense: HtmlElement.isEmpty
  langs:
  - crmscript
  name: 'isEmpty'
  nameWithType: HtmlElement.isEmpty
  fullName: CRMScript.Native.HtmlElement.isEmpty
  type: Method
  summary: "\nReturns true if the HtmlElement says it is empty.\n"
  remarks: 
  syntax: 
    content: Bool isEmpty()
    parameters:
    return:
      type: CRMScript.Global.Bool
  example: 
- uid: CRMScript.Native.HtmlElement.setDisabled
  commentId: M:CRMScript.Native.HtmlElement.setDisabled
  id: 'setDisabled'
  so.intellisense: HtmlElement.setDisabled
  langs:
  - crmscript
  name: 'setDisabled'
  nameWithType: HtmlElement.setDisabled
  fullName: CRMScript.Native.HtmlElement.setDisabled
  type: Method
  summary: "\nToggles whether the element is visible or invisible. Commonly used in combination with role-based access.\n"
  remarks: 
  syntax: 
    content: Void setDisabled(Bool invisible)
    parameters:
    - id: invisible
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setErrorMessage
  commentId: M:CRMScript.Native.HtmlElement.setErrorMessage
  id: 'setErrorMessage'
  so.intellisense: HtmlElement.setErrorMessage
  langs:
  - crmscript
  name: 'setErrorMessage'
  nameWithType: HtmlElement.setErrorMessage
  fullName: CRMScript.Native.HtmlElement.setErrorMessage
  type: Method
  summary: "\nSets an error message above the element if the form is posted.<p></p>\nUsed to inform users that something went wrong and attempt to help them out.<p></p>\n<pre><code>HtmlElement page = getHtmlElement(&quot;HtmlPage&quot;);\npage.setErrorMessage(&quot;This page contains an error&quot;);</code></pre>\n"
  remarks: 
  syntax: 
    content: Void setErrorMessage(String errorMessage)
    parameters:
    - id: errorMessage
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement page = getHtmlElement(&quot;HtmlPage&quot;);\npage.setErrorMessage(&quot;This page contains an error&quot;);</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.setFieldValue
  commentId: M:CRMScript.Native.HtmlElement.setFieldValue
  id: 'setFieldValue'
  so.intellisense: HtmlElement.setFieldValue
  langs:
  - crmscript
  name: 'setFieldValue'
  nameWithType: HtmlElement.setFieldValue
  fullName: CRMScript.Native.HtmlElement.setFieldValue
  type: Method
  summary: "\nSets 1 or more field values on an element.<p></p>\n<pre><code>HtmlElement formPage;\n\nMap m;\nm.insert(&quot;name&quot;, &quot;superButton&quot;);\nm.insert(&quot;label&quot;, &quot;Click me!&quot;);\nm.insert(&quot;style&quot;, &quot;StyleGreen&quot;);\n\nformPage.setFieldValue(&quot;addButton&quot;, m);</code></pre>\n"
  remarks: 
  syntax: 
    content: Void setFieldValue(String name, Map map)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
    - id: map
      type: CRMScript.Global.Map
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement formPage;\n\nMap m;\nm.insert(&quot;name&quot;, &quot;superButton&quot;);\nm.insert(&quot;label&quot;, &quot;Click me!&quot;);\nm.insert(&quot;style&quot;, &quot;StyleGreen&quot;);\n\nformPage.setFieldValue(&quot;addButton&quot;, m);</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.setFromCgi
  commentId: M:CRMScript.Native.HtmlElement.setFromCgi
  id: 'setFromCgi'
  so.intellisense: HtmlElement.setFromCgi
  langs:
  - crmscript
  name: 'setFromCgi'
  nameWithType: HtmlElement.setFromCgi
  fullName: CRMScript.Native.HtmlElement.setFromCgi
  type: Method
  summary: "\nCalled when the element should find its values from the CGI variables. Commonly used for [screens containing forms][1].<p></p>\n<!-- Referenced links -->\n"
  remarks: 
  syntax: 
    content: Void setFromCgi()
    parameters:
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setInfoMessage
  commentId: M:CRMScript.Native.HtmlElement.setInfoMessage
  id: 'setInfoMessage'
  so.intellisense: HtmlElement.setInfoMessage
  langs:
  - crmscript
  name: 'setInfoMessage'
  nameWithType: HtmlElement.setInfoMessage
  fullName: CRMScript.Native.HtmlElement.setInfoMessage
  type: Method
  summary: "\nSets an info message above the element if the form is posted.<p></p>\nUsed to display the text of a purely informative nature.\n"
  remarks: 
  syntax: 
    content: Void setInfoMessage(String infoMessage)
    parameters:
    - id: infoMessage
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setNotEditable
  commentId: M:CRMScript.Native.HtmlElement.setNotEditable
  id: 'setNotEditable'
  so.intellisense: HtmlElement.setNotEditable
  langs:
  - crmscript
  name: 'setNotEditable'
  nameWithType: HtmlElement.setNotEditable
  fullName: CRMScript.Native.HtmlElement.setNotEditable
  type: Method
  summary: "\nToggles whether the element can be edited (for those elements that support this property). Commonly used in combination with role-based access.\n"
  remarks: 
  syntax: 
    content: Void setNotEditable(Bool canEdit)
    parameters:
    - id: canEdit
      type: CRMScript.Global.Bool
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
- uid: CRMScript.Native.HtmlElement.setValue
  commentId: M:CRMScript.Native.HtmlElement.setValue
  id: 'setValue'
  so.intellisense: HtmlElement.setValue
  langs:
  - crmscript
  name: 'setValue'
  nameWithType: HtmlElement.setValue
  fullName: CRMScript.Native.HtmlElement.setValue
  type: Method
  summary: "\nSets the value of a specific element.<p></p>\n<pre><code>HtmlElement selectDate;\nselectDate.setValue(&quot;2020.09.10&quot;);</code></pre>\n"
  remarks: 
  syntax: 
    content: Void setValue(String value)
    parameters:
    - id: value
      type: CRMScript.Global.String
      description: 
    return:
      type: CRMScript.Global.Void
  example: 
  - "\n<pre><code>HtmlElement selectDate;\nselectDate.setValue(&quot;2020.09.10&quot;);</code></pre><pre><code>HtmlElement t;\nt.setValue(&quot;x_boolean&quot;, &quot;1&quot;)</code></pre>\n"
- uid: CRMScript.Native.HtmlElement.toBool
  commentId: M:CRMScript.Native.HtmlElement.toBool
  id: 'toBool'
  so.intellisense: HtmlElement.toBool
  langs:
  - crmscript
  name: 'toBool'
  nameWithType: HtmlElement.toBool
  fullName: CRMScript.Native.HtmlElement.toBool
  type: Method
  summary: "\nReturns the value of the element as a Bool.\n"
  remarks: 
  syntax: 
    content: toBool()
    parameters:
  example: 
- uid: CRMScript.Native.HtmlElement.toInteger
  commentId: M:CRMScript.Native.HtmlElement.toInteger
  id: 'toInteger'
  so.intellisense: HtmlElement.toInteger
  langs:
  - crmscript
  name: 'toInteger'
  nameWithType: HtmlElement.toInteger
  fullName: CRMScript.Native.HtmlElement.toInteger
  type: Method
  summary: "\nReturns the element value as an integer.\n"
  remarks: 
  syntax: 
    content: toInteger()
    parameters:
  example: 
- uid: CRMScript.Native.HtmlElement.toString
  commentId: M:CRMScript.Native.HtmlElement.toString
  id: 'toString'
  so.intellisense: HtmlElement.toString
  langs:
  - crmscript
  name: 'toString'
  nameWithType: HtmlElement.toString
  fullName: CRMScript.Native.HtmlElement.toString
  type: Method
  summary: "\nReturns the value of the element as a String.\n"
  remarks: 
  syntax: 
    content: toString()
    parameters:
  example: 
references:
- uid: CRMScript.Native.HtmlElement
  commentId: T:CRMScript.Native.HtmlElement
  isExternal: true
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: CRMScript.Native.HtmlElement
- uid: CRMScript.Global.Void
  commentId: T:CRMScript.Global.Void
  isExternal: true
  name: Void
  nameWithType: Void
  fullName: CRMScript.Global.Void
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool
- uid: CRMScript.Global.Map
  commentId: T:CRMScript.Global.Map
  isExternal: true
  name: Map
  nameWithType: Map
  fullName: CRMScript.Global.Map