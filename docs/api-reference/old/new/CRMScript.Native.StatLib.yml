### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.StatLib
  commentId: T:CRMScript.Native.StatLib
  id: StatLib
  so.intellisense: Void.StatLib
  langs:
  - crmscript
  children:
  - CRMScript.Native.StatLib.addAggregate(Integer,Integer,String,String,Integer,Integer)
  - CRMScript.Native.StatLib.addCallback(Integer,String)
  - CRMScript.Native.StatLib.addGroup(Integer,Bool)
  - CRMScript.Native.StatLib.dropOrder()
  - CRMScript.Native.StatLib.execute()
  - CRMScript.Native.StatLib.setGenericSearch()
  - CRMScript.Native.StatLib.setName(String)
  - CRMScript.Native.StatLib.setSearchEngine()
  - CRMScript.Native.StatLib.setSql(String)
  - CRMScript.Native.StatLib.setStringMatrix()
  - CRMScript.Native.StatLib.#ctor()
  name: StatLib
  nameWithType: StatLib
  fullName: CRMScript.Native.StatLib
  type: Class
  summary: 
  example: 
- uid: CRMScript.Native.StatLib.addAggregate(Integer,Integer,String,String,Integer,Integer)
  commentId: M:CRMScript.Native.StatLib.addAggregate(Integer,Integer,String,String,Integer,Integer)
  id: 'addAggregate(Integer,Integer,String,String,Integer,Integer)'
  so.intellisense: StatLib.addAggregate
  langs:
  - crmscript
  name: 'addAggregate(Integer,Integer,String,String,Integer,Integer)'
  nameWithType: StatLib.addAggregate(Integer,Integer,String,String,Integer,Integer)
  fullName: CRMScript.Native.StatLib.addAggregate(Integer,Integer,String,String,Integer,Integer)
  type: Method
  summary: "\nCRMScript method in the StatLib class that add an aggregate function to the specified groupAdds an aggregate function to the specified group. An<strong>aggregate function</strong>is a function that is calculated for all values for a given column in a group. For example, the average response time for each category.<p></p>\nYou can optionally signal to calculate only for the rows that have a unique value in this column.\n"
  remarks: "\n<h3>Available functions</h3><ul><li>Count</li><li>Sum</li><li>Avg</li><li>Max</li><li>Min</li></ul>\n"
  syntax: 
    content: addAggregate()
    parameters:
    - id: groupColumn
      type: CRMScript.Global.Integer
      description: The column used for grouping.
    - id: column
      type: CRMScript.Global.Integer
      description: The column used for the calculation.
    - id: name
      type: CRMScript.Global.String
      description: The name of the calculated variable in the Parser or StatResult
    - id: type
      type: CRMScript.Global.String
      description: The type of function.
    - id: decimals
      type: CRMScript.Global.Integer
      description: The number of decimals to use in the calculated value
    - id: uniqueColumn
      type: CRMScript.Global.Integer
      description: Optional. The value is only calculated for the rows which have a unique value in this column.
  example: 
- uid: CRMScript.Native.StatLib.addCallback(Integer,String)
  commentId: M:CRMScript.Native.StatLib.addCallback(Integer,String)
  id: 'addCallback(Integer,String)'
  so.intellisense: StatLib.addCallback
  langs:
  - crmscript
  name: 'addCallback(Integer,String)'
  nameWithType: StatLib.addCallback(Integer,String)
  fullName: CRMScript.Native.StatLib.addCallback(Integer,String)
  type: Method
  summary: "\nAdd a callback. A callback is a PARSER-snippet which will be executed for the given column for each row. This is an old method. Use StatResult and iterate instead.\n"
  remarks: 
  syntax: 
    content: addCallback(Integer column, String script)
    parameters:
    - id: column
      type: CRMScript.Global.Integer
      description: 
    - id: script
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.StatLib.addGroup(Integer,Bool)
  commentId: M:CRMScript.Native.StatLib.addGroup(Integer,Bool)
  id: 'addGroup(Integer,Bool)'
  so.intellisense: StatLib.addGroup
  langs:
  - crmscript
  name: 'addGroup(Integer,Bool)'
  nameWithType: StatLib.addGroup(Integer,Bool)
  fullName: CRMScript.Native.StatLib.addGroup(Integer,Bool)
  type: Method
  summary: "\nCRMScript method in the StatLib class that adds a group to the StatLib instanceAdds a group to the<code>StatLib</code>instance. A<strong>group</strong>is a subset of the results that have a common value for a given column. Aggregate values can be calculated for groups, for example,  the average response time per category.\n"
  remarks: 
  syntax: 
    content: addGroup()
    parameters:
    - id: column
      type: CRMScript.Global.Integer
      description: The column to used to identify the groups
    - id: desc
      type: CRMScript.Global.Bool
      description: Sort order. True = descending, otherwise ascending
  example: 
- uid: CRMScript.Native.StatLib.dropOrder()
  commentId: M:CRMScript.Native.StatLib.dropOrder()
  id: 'dropOrder()'
  so.intellisense: StatLib.dropOrder
  langs:
  - crmscript
  name: 'dropOrder()'
  nameWithType: StatLib.dropOrder()
  fullName: CRMScript.Native.StatLib.dropOrder()
  type: Method
  summary: "\nCalling this function will make the StatLib instance skip sorting the results in the groups.\n"
  remarks: 
  syntax: 
    content: dropOrder()
    parameters:
  example: 
- uid: CRMScript.Native.StatLib.execute()
  commentId: M:CRMScript.Native.StatLib.execute()
  id: 'execute()'
  so.intellisense: StatLib.execute
  langs:
  - crmscript
  name: 'execute()'
  nameWithType: StatLib.execute()
  fullName: CRMScript.Native.StatLib.execute()
  type: Method
  summary: "\nCRMScript method in the Attachment class that runs the query and aggregations and stores the results in either a Parser or StatResultRuns the query and aggregation and stores the results. You can choose between storing in a Parser or a StatResult by passing the appropriate object.\n"
  remarks: 
  syntax: 
    content: execute()
    parameters:
  example: 
- uid: CRMScript.Native.StatLib.setGenericSearch()
  commentId: M:CRMScript.Native.StatLib.setGenericSearch()
  id: 'setGenericSearch()'
  so.intellisense: StatLib.setGenericSearch
  langs:
  - crmscript
  name: 'setGenericSearch()'
  nameWithType: StatLib.setGenericSearch()
  fullName: CRMScript.Native.StatLib.setGenericSearch()
  type: Method
  summary: "\nUse the given GenericSearch entry as query (instead of SQL string).\n"
  remarks: 
  syntax: 
    content: setGenericSearch(GenericSearch gs)
    parameters:
  example: 
- uid: CRMScript.Native.StatLib.setName(String)
  commentId: M:CRMScript.Native.StatLib.setName(String)
  id: 'setName(String)'
  so.intellisense: StatLib.setName
  langs:
  - crmscript
  name: 'setName(String)'
  nameWithType: StatLib.setName(String)
  fullName: CRMScript.Native.StatLib.setName(String)
  type: Method
  summary: "\nSets the name for the instance. The name is used to prefix the result in the Parser.\n"
  remarks: 
  syntax: 
    content: setName(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.StatLib.setSearchEngine()
  commentId: M:CRMScript.Native.StatLib.setSearchEngine()
  id: 'setSearchEngine()'
  so.intellisense: StatLib.setSearchEngine
  langs:
  - crmscript
  name: 'setSearchEngine()'
  nameWithType: StatLib.setSearchEngine()
  fullName: CRMScript.Native.StatLib.setSearchEngine()
  type: Method
  summary: "\nUse the given SearchEngine entry as query (instead of SQL string).\n"
  remarks: 
  syntax: 
    content: setSearchEngine(SearchEngine se)
    parameters:
  example: 
- uid: CRMScript.Native.StatLib.setSql(String)
  commentId: M:CRMScript.Native.StatLib.setSql(String)
  id: 'setSql(String)'
  so.intellisense: StatLib.setSql
  langs:
  - crmscript
  name: 'setSql(String)'
  nameWithType: StatLib.setSql(String)
  fullName: CRMScript.Native.StatLib.setSql(String)
  type: Method
  summary: "\nSets the query for the instance.\n"
  remarks: 
  syntax: 
    content: setSql(String sqlStatement)
    parameters:
    - id: sqlStatement
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.StatLib.setStringMatrix()
  commentId: M:CRMScript.Native.StatLib.setStringMatrix()
  id: 'setStringMatrix()'
  so.intellisense: StatLib.setStringMatrix
  langs:
  - crmscript
  name: 'setStringMatrix()'
  nameWithType: StatLib.setStringMatrix()
  fullName: CRMScript.Native.StatLib.setStringMatrix()
  type: Method
  summary: "\nUse the given StringMatrix entry as query (instead of SQL string).\n"
  remarks: 
  syntax: 
    content: setStringMatrix(StringMatrix sm)
    parameters:
  example: 
- uid: CRMScript.Native.StatLib.#ctor()
  commentId: M:CRMScript.Native.StatLib.#ctor()
  id: '#ctor()'
  so.intellisense: Void.StatLib
  langs:
  - crmscript
  name: '#ctor()'
  nameWithType: StatLib.#ctor()
  fullName: CRMScript.Native.StatLib.#ctor()
  type: Constructor
  summary: 
  remarks: 
  syntax: 
    content: StatLib
  example: 
references:
- uid: CRMScript.Native.StatLib
  commentId: T:CRMScript.Native.StatLib
  isExternal: true
  name: StatLib
  nameWithType: StatLib
  fullName: CRMScript.Native.StatLib
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool