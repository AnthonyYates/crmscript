### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.InvoiceEntry
  commentId: T:CRMScript.Native.InvoiceEntry
  id: InvoiceEntry
  so.intellisense: Void.InvoiceEntry
  langs:
  - crmscript
  children:
  - CRMScript.Native.InvoiceEntry.getDiscount()
  - CRMScript.Native.InvoiceEntry.getDiscountMoney()
  - CRMScript.Native.InvoiceEntry.getPricePrUnit()
  - CRMScript.Native.InvoiceEntry.getValue(String)
  - CRMScript.Native.InvoiceEntry.#ctor
  - CRMScript.Native.InvoiceEntry.load(Integer)
  - CRMScript.Native.InvoiceEntry.save()
  - CRMScript.Native.InvoiceEntry.setDiscount()
  - CRMScript.Native.InvoiceEntry.setDiscountMoney()
  - CRMScript.Native.InvoiceEntry.setPricePrUnit()
  - CRMScript.Native.InvoiceEntry.setValue(String,String)
  name: InvoiceEntry
  nameWithType: InvoiceEntry
  fullName: CRMScript.Native.InvoiceEntry
  type: Class
  summary: "\nThis class represent invoice entries. You will be able to create new or modify existing invoice entries with this class.\n"
  example: 
  - "\n<pre><code>InvoiceEntry i;\n\ni.setValue(&quot;description&quot;, &quot;test&quot;);\ni.setValue(&quot;quantity&quot;, &quot;1&quot;);\ni.setValue(&quot;pricePrUnit&quot;, &quot;700&quot;);\ni.setValue(&quot;discount&quot;, &quot;0.2&quot;);\nDate d; // Default value for date is today\ni.setValue(&quot;date&quot;, d.toString());</code></pre>\n"
- uid: CRMScript.Native.InvoiceEntry.getDiscount()
  commentId: M:CRMScript.Native.InvoiceEntry.getDiscount()
  id: 'getDiscount()'
  so.intellisense: InvoiceEntry.getDiscount
  langs:
  - crmscript
  name: 'getDiscount()'
  nameWithType: InvoiceEntry.getDiscount()
  fullName: CRMScript.Native.InvoiceEntry.getDiscount()
  type: Method
  summary: "\nThis method will get the discount of the current InvoiceEntry object in percent.
It will be returned as a String-representation of a number with 2 decimals accuracy.
The save-function calculates the discount in percent and money.
So if the discount is set in money (setDiscountMoney()),  you have to save the invoiceentry before getting the corresponding value in percent.<p></p>\n<ul><li><strong>Returns:</strong>The dicount in percent.</li></ul>\n"
  remarks: 
  syntax: 
    content: getDiscount()
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.getDiscountMoney()
  commentId: M:CRMScript.Native.InvoiceEntry.getDiscountMoney()
  id: 'getDiscountMoney()'
  so.intellisense: InvoiceEntry.getDiscountMoney
  langs:
  - crmscript
  name: 'getDiscountMoney()'
  nameWithType: InvoiceEntry.getDiscountMoney()
  fullName: CRMScript.Native.InvoiceEntry.getDiscountMoney()
  type: Method
  summary: "\nThis method will get the discount of the current InvoiceEntry object in money.
It will be returned as a String-representation of a number with 2 decimals
accuracy.
The save-function calculates the discount in percent and money.
So if the discount is set in percent (setDiscount()), you have to save the
invoiceentry before getting the corresponding value in money with this function.<p></p>\n<ul><li><strong>Returns:</strong>The discount in money</li></ul>\n"
  remarks: 
  syntax: 
    content: getDiscountMoney()
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.getPricePrUnit()
  commentId: M:CRMScript.Native.InvoiceEntry.getPricePrUnit()
  id: 'getPricePrUnit()'
  so.intellisense: InvoiceEntry.getPricePrUnit
  langs:
  - crmscript
  name: 'getPricePrUnit()'
  nameWithType: InvoiceEntry.getPricePrUnit()
  fullName: CRMScript.Native.InvoiceEntry.getPricePrUnit()
  type: Method
  summary: "\nThis method will return thep price per unit of the current InvoiceEntry object.
It will be returned as a String-representation of a number with 2 decimals
accuracy.<p></p>\n<ul><li><strong>Returns:</strong>Price per unit</li></ul>\n"
  remarks: 
  syntax: 
    content: getPricePrUnit()
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.getValue(String)
  commentId: M:CRMScript.Native.InvoiceEntry.getValue(String)
  id: 'getValue(String)'
  so.intellisense: InvoiceEntry.getValue
  langs:
  - crmscript
  name: 'getValue(String)'
  nameWithType: InvoiceEntry.getValue(String)
  fullName: CRMScript.Native.InvoiceEntry.getValue(String)
  type: Method
  summary: "\nGet the value of the specifed field.\n"
  remarks: 
  syntax: 
    content: getValue(String field)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.InvoiceEntry.#ctor
  commentId: M:CRMScript.Native.InvoiceEntry.#ctor
  id: '#ctor'
  so.intellisense: Void.InvoiceEntry
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: InvoiceEntry.#ctor
  fullName: CRMScript.Native.InvoiceEntry.#ctor
  type: Constructor
  summary: "\nThis class represent invoice entries. You will be able to create new or modify existing invoice entries with this class.\n"
  remarks: 
  syntax: 
    content: InvoiceEntry
  example: 
  - "\n<pre><code>InvoiceEntry i;\n\ni.setValue(&quot;description&quot;, &quot;test&quot;);\ni.setValue(&quot;quantity&quot;, &quot;1&quot;);\ni.setValue(&quot;pricePrUnit&quot;, &quot;700&quot;);\ni.setValue(&quot;discount&quot;, &quot;0.2&quot;);\nDate d; // Default value for date is today\ni.setValue(&quot;date&quot;, d.toString());</code></pre>\n"
- uid: CRMScript.Native.InvoiceEntry.load(Integer)
  commentId: M:CRMScript.Native.InvoiceEntry.load(Integer)
  id: 'load(Integer)'
  so.intellisense: InvoiceEntry.load
  langs:
  - crmscript
  name: 'load(Integer)'
  nameWithType: InvoiceEntry.load(Integer)
  fullName: CRMScript.Native.InvoiceEntry.load(Integer)
  type: Method
  summary: "\nThis method will load an existing InvoiceEntry object.\n"
  remarks: 
  syntax: 
    content: load(Integer id)
    parameters:
    - id: id
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.InvoiceEntry.save()
  commentId: M:CRMScript.Native.InvoiceEntry.save()
  id: 'save()'
  so.intellisense: InvoiceEntry.save
  langs:
  - crmscript
  name: 'save()'
  nameWithType: InvoiceEntry.save()
  fullName: CRMScript.Native.InvoiceEntry.save()
  type: Method
  summary: "\nWill save the existing InvoiceEntry object and return the id.<p></p>\n<ul><li><strong>Returns:</strong>The id of the saved InvoiceEntry object</li></ul>\n"
  remarks: 
  syntax: 
    content: save()
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.setDiscount()
  commentId: M:CRMScript.Native.InvoiceEntry.setDiscount()
  id: 'setDiscount()'
  so.intellisense: InvoiceEntry.setDiscount
  langs:
  - crmscript
  name: 'setDiscount()'
  nameWithType: InvoiceEntry.setDiscount()
  fullName: CRMScript.Native.InvoiceEntry.setDiscount()
  type: Method
  summary: "\nThis method will set the discount of the current InvoiceEntry object with the given
percent.
If discount is set in both percent and money, the save-function use the money-version.\n"
  remarks: 
  syntax: 
    content: setDiscount(Float percent)
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.setDiscountMoney()
  commentId: M:CRMScript.Native.InvoiceEntry.setDiscountMoney()
  id: 'setDiscountMoney()'
  so.intellisense: InvoiceEntry.setDiscountMoney
  langs:
  - crmscript
  name: 'setDiscountMoney()'
  nameWithType: InvoiceEntry.setDiscountMoney()
  fullName: CRMScript.Native.InvoiceEntry.setDiscountMoney()
  type: Method
  summary: "\nThis method will set the discount of the current InvoiceEntry object with the given
money.
If both<code>setDiscount()</code>and this function has been used, the<code>save()</code>-function use the discount in money.\n"
  remarks: 
  syntax: 
    content: setDiscountMoney(Float money)
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.setPricePrUnit()
  commentId: M:CRMScript.Native.InvoiceEntry.setPricePrUnit()
  id: 'setPricePrUnit()'
  so.intellisense: InvoiceEntry.setPricePrUnit
  langs:
  - crmscript
  name: 'setPricePrUnit()'
  nameWithType: InvoiceEntry.setPricePrUnit()
  fullName: CRMScript.Native.InvoiceEntry.setPricePrUnit()
  type: Method
  summary: "\nThis method will set the price per unit for the current InvoiceEntry object with the given price.\n"
  remarks: 
  syntax: 
    content: setPricePrUnit(Float price)
    parameters:
  example: 
- uid: CRMScript.Native.InvoiceEntry.setValue(String,String)
  commentId: M:CRMScript.Native.InvoiceEntry.setValue(String,String)
  id: 'setValue(String,String)'
  so.intellisense: InvoiceEntry.setValue
  langs:
  - crmscript
  name: 'setValue(String,String)'
  nameWithType: InvoiceEntry.setValue(String,String)
  fullName: CRMScript.Native.InvoiceEntry.setValue(String,String)
  type: Method
  summary: "\nThis method will set a field of the current InvoiceEntry object with the given value.\n"
  remarks: 
  syntax: 
    content: setValue(String field, String value)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
  example: 
references:
- uid: CRMScript.Native.InvoiceEntry
  commentId: T:CRMScript.Native.InvoiceEntry
  isExternal: true
  name: InvoiceEntry
  nameWithType: InvoiceEntry
  fullName: CRMScript.Native.InvoiceEntry
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer