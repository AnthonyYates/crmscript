### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.GenericSearch
  commentId: T:CRMScript.Native.GenericSearch
  id: GenericSearch
  so.intellisense: Void.GenericSearch
  langs:
  - crmscript
  children:
  - CRMScript.Native.GenericSearch.addComparison(String,String,String,String,Integer)
  - CRMScript.Native.GenericSearch.addCriteria(String,String,String,String,Integer)
  - CRMScript.Native.GenericSearch.addField(String,Integer)
  - CRMScript.Native.GenericSearch.addOrder(String,Bool)
  - CRMScript.Native.GenericSearch.countRows()
  - CRMScript.Native.GenericSearch.eof()
  - CRMScript.Native.GenericSearch.execute()
  - CRMScript.Native.GenericSearch.first()
  - CRMScript.Native.GenericSearch.#ctor
  - CRMScript.Native.GenericSearch.get(String,Integer)
  - CRMScript.Native.GenericSearch.next()
  - CRMScript.Native.GenericSearch.setLanguage(Integer)
  - CRMScript.Native.GenericSearch.setLimit(Integer)
  name: GenericSearch
  nameWithType: GenericSearch
  fullName: CRMScript.Native.GenericSearch
  type: Class
  summary: "\nThis class is obsolete. Use SearchEngine instead.<p></p>\nClass for representing a generic database search. The GenericSearch is originally made for searching and fetching data from the eJournal database. Thereby its name. GenericSearch is a tool for building up SQL queries, by adding fields and criteria.\n"
  example: 
- uid: CRMScript.Native.GenericSearch.addComparison(String,String,String,String,Integer)
  commentId: M:CRMScript.Native.GenericSearch.addComparison(String,String,String,String,Integer)
  id: 'addComparison(String,String,String,String,Integer)'
  so.intellisense: GenericSearch.addComparison
  langs:
  - crmscript
  name: 'addComparison(String,String,String,String,Integer)'
  nameWithType: GenericSearch.addComparison(String,String,String,String,Integer)
  fullName: CRMScript.Native.GenericSearch.addComparison(String,String,String,String,Integer)
  type: Method
  summary: "\nAdds a criteria between two database-fields to the database query<p></p>\n<ul><li><strong>field1:</strong>The field to compare with field2</li><li><strong>compOperator:</strong>Comparison operator. Possible values:
OperatorEquals, OperatorNotEquals, OperatorLt, OperatorLte, OperatorGt,
OperatorGte, OperatorLike, OperatorNotLike, OperatorContains,
OperatorBeginsWith, OperatorEndsWith, OperatorIn, OperatorNotIn,
OperatorIs, OperatorOracleLeftJoin, OperatorIsNot</li><li><strong>field2:</strong>The field to compare with field1</li><li><strong>rowOperator:</strong>Operator for composing this criteria with a following
criteria</li></ul><strong>Possible values</strong><br />OperatorAnd, OperatorOr, OperatorNotAnd, OperatorNotOr<p></p>\n<ul><li><strong>concatLevel:</strong>A number. All criterias with the same number will be placed
inside the same brackets</li></ul>\n"
  remarks: 
  syntax: 
    content: addComparison(String field1, String compOperator, String field2, String rowOperator, Integer concatLevel)
    parameters:
    - id: field1
      type: CRMScript.Global.String
      description: 
    - id: compOperator
      type: CRMScript.Global.String
      description: 
    - id: field2
      type: CRMScript.Global.String
      description: 
    - id: rowOperator
      type: CRMScript.Global.String
      description: 
    - id: concatLevel
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.GenericSearch.addCriteria(String,String,String,String,Integer)
  commentId: M:CRMScript.Native.GenericSearch.addCriteria(String,String,String,String,Integer)
  id: 'addCriteria(String,String,String,String,Integer)'
  so.intellisense: GenericSearch.addCriteria
  langs:
  - crmscript
  name: 'addCriteria(String,String,String,String,Integer)'
  nameWithType: GenericSearch.addCriteria(String,String,String,String,Integer)
  fullName: CRMScript.Native.GenericSearch.addCriteria(String,String,String,String,Integer)
  type: Method
  summary: "\nAdd search criteria to the search.
The concatLevel which specifies how this criteria will be concatenated with the rest of the query (parenthesis level).
A higher concatLevel gives a &quot;(&quot;, and a lower concatlevel gives a &quot;)&quot;.\n"
  remarks: 
  syntax: 
    content: addCriteria(String field, String operator, String value, String andOr, Integer concatLevel)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: 
    - id: operator
      type: CRMScript.Global.String
      description: 
    - id: value
      type: CRMScript.Global.String
      description: 
    - id: andOr
      type: CRMScript.Global.String
      description: 
    - id: concatLevel
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.GenericSearch.addField(String,Integer)
  commentId: M:CRMScript.Native.GenericSearch.addField(String,Integer)
  id: 'addField(String,Integer)'
  so.intellisense: GenericSearch.addField
  langs:
  - crmscript
  name: 'addField(String,Integer)'
  nameWithType: GenericSearch.addField(String,Integer)
  fullName: CRMScript.Native.GenericSearch.addField(String,Integer)
  type: Method
  summary: "\nCRMScript method in the GenericSearch class that adds a field to the queryAdds a field to be selected to the database query. You can optionally provide a field mask.\n"
  remarks: "\n<h3>fieldMask</h3><table><thead><tr><th>Mask</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>ID of the table</td></tr><tr><td>2</td><td>Data value</td></tr><tr><td>4</td><td>Display value</td></tr><tr><td>8</td><td>Search value</td></tr></tbody></table>\n"
  syntax: 
    content: addField()
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: The name of the field to select
    - id: fieldMask
      type: CRMScript.Global.Integer
      description: See below
  example: 
- uid: CRMScript.Native.GenericSearch.addOrder(String,Bool)
  commentId: M:CRMScript.Native.GenericSearch.addOrder(String,Bool)
  id: 'addOrder(String,Bool)'
  so.intellisense: GenericSearch.addOrder
  langs:
  - crmscript
  name: 'addOrder(String,Bool)'
  nameWithType: GenericSearch.addOrder(String,Bool)
  fullName: CRMScript.Native.GenericSearch.addOrder(String,Bool)
  type: Method
  summary: "\nAdd order on specified field, desc/asc as specified by the Bool.\n"
  remarks: 
  syntax: 
    content: addOrder(String field, Bool asc)
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: 
    - id: asc
      type: CRMScript.Global.Bool
      description: 
  example: 
- uid: CRMScript.Native.GenericSearch.countRows()
  commentId: M:CRMScript.Native.GenericSearch.countRows()
  id: 'countRows()'
  so.intellisense: GenericSearch.countRows
  langs:
  - crmscript
  name: 'countRows()'
  nameWithType: GenericSearch.countRows()
  fullName: CRMScript.Native.GenericSearch.countRows()
  type: Method
  summary: "\nReturns the number of rows in the resultset<p></p>\n<ul><li><strong>Returns:</strong>the number of rows in the resultset</li></ul>\n"
  remarks: 
  syntax: 
    content: countRows()
    parameters:
  example: 
- uid: CRMScript.Native.GenericSearch.eof()
  commentId: M:CRMScript.Native.GenericSearch.eof()
  id: 'eof()'
  so.intellisense: GenericSearch.eof
  langs:
  - crmscript
  name: 'eof()'
  nameWithType: GenericSearch.eof()
  fullName: CRMScript.Native.GenericSearch.eof()
  type: Method
  summary: "\nReturns true if the resultpointer has reached the end of result set, or false otherwise.\n"
  remarks: 
  syntax: 
    content: eof()
    parameters:
  example: 
- uid: CRMScript.Native.GenericSearch.execute()
  commentId: M:CRMScript.Native.GenericSearch.execute()
  id: 'execute()'
  so.intellisense: GenericSearch.execute
  langs:
  - crmscript
  name: 'execute()'
  nameWithType: GenericSearch.execute()
  fullName: CRMScript.Native.GenericSearch.execute()
  type: Method
  summary: "\nExecute the query.\n"
  remarks: 
  syntax: 
    content: execute()
    parameters:
  example: 
- uid: CRMScript.Native.GenericSearch.first()
  commentId: M:CRMScript.Native.GenericSearch.first()
  id: 'first()'
  so.intellisense: GenericSearch.first
  langs:
  - crmscript
  name: 'first()'
  nameWithType: GenericSearch.first()
  fullName: CRMScript.Native.GenericSearch.first()
  type: Method
  summary: "\nSet the resultpointer to point at the first row in the resultset<p></p>\n<ul><li><strong>Returns:</strong>false if the resultset is empty, else true</li></ul>\n"
  remarks: 
  syntax: 
    content: first()
    parameters:
  example: 
- uid: CRMScript.Native.GenericSearch.#ctor
  commentId: M:CRMScript.Native.GenericSearch.#ctor
  id: '#ctor'
  so.intellisense: Void.GenericSearch
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: GenericSearch.#ctor
  fullName: CRMScript.Native.GenericSearch.#ctor
  type: Constructor
  summary: "\nThis class is obsolete. Use SearchEngine instead.<p></p>\nClass for representing a generic database search. The GenericSearch is originally made for searching and fetching data from the eJournal database. Thereby its name. GenericSearch is a tool for building up SQL queries, by adding fields and criteria.\n"
  remarks: 
  syntax: 
    content: GenericSearch
  example: 
- uid: CRMScript.Native.GenericSearch.get(String,Integer)
  commentId: M:CRMScript.Native.GenericSearch.get(String,Integer)
  id: 'get(String,Integer)'
  so.intellisense: GenericSearch.get
  langs:
  - crmscript
  name: 'get(String,Integer)'
  nameWithType: GenericSearch.get(String,Integer)
  fullName: CRMScript.Native.GenericSearch.get(String,Integer)
  type: Method
  summary: "\nCRMScript method in the GenericSearch class that retrieves the value of a field according to a field maskRetrieves the value of a field according to the given field mask. You can provide the field as either a String or an Integer.<p></p>\nReturns the value of the field.\n"
  remarks: "\n<h3>fieldMask</h3><table><thead><tr><th>Mask</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>ID of the table</td></tr><tr><td>2</td><td>Data value</td></tr><tr><td>4</td><td>Display value</td></tr><tr><td>8</td><td>Search value</td></tr></tbody></table>\n"
  syntax: 
    content: String get()
    parameters:
    - id: field
      type: CRMScript.Global.String
      description: The name or ID of the field to select
    - id: fieldMask
      type: CRMScript.Global.Integer
      description: See below
    return:
      type: CRMScript.Global.String
  example: 
- uid: CRMScript.Native.GenericSearch.next()
  commentId: M:CRMScript.Native.GenericSearch.next()
  id: 'next()'
  so.intellisense: GenericSearch.next
  langs:
  - crmscript
  name: 'next()'
  nameWithType: GenericSearch.next()
  fullName: CRMScript.Native.GenericSearch.next()
  type: Method
  summary: "\nSets the resultset pointer to next row, returns true if there was a next row or false otherwise.<p></p>\n<ul><li><strong>Returns:</strong>false if the pointer has reached the last resultset, else true</li></ul>\n"
  remarks: 
  syntax: 
    content: next()
    parameters:
  example: 
- uid: CRMScript.Native.GenericSearch.setLanguage(Integer)
  commentId: M:CRMScript.Native.GenericSearch.setLanguage(Integer)
  id: 'setLanguage(Integer)'
  so.intellisense: GenericSearch.setLanguage
  langs:
  - crmscript
  name: 'setLanguage(Integer)'
  nameWithType: GenericSearch.setLanguage(Integer)
  fullName: CRMScript.Native.GenericSearch.setLanguage(Integer)
  type: Method
  summary: "\nSet what language to use when showing display fields.\n"
  remarks: 
  syntax: 
    content: setLanguage(Integer languageId)
    parameters:
    - id: languageId
      type: CRMScript.Global.Integer
      description: 
  example: 
- uid: CRMScript.Native.GenericSearch.setLimit(Integer)
  commentId: M:CRMScript.Native.GenericSearch.setLimit(Integer)
  id: 'setLimit(Integer)'
  so.intellisense: GenericSearch.setLimit
  langs:
  - crmscript
  name: 'setLimit(Integer)'
  nameWithType: GenericSearch.setLimit(Integer)
  fullName: CRMScript.Native.GenericSearch.setLimit(Integer)
  type: Method
  summary: "\nSet a limit of the number of rows that will be returned in the resultset<p></p>\n<ul><li><strong>limit:</strong>The maximum number of rows to be returned in the resultset</li></ul>\n"
  remarks: 
  syntax: 
    content: setLimit(Integer limit)
    parameters:
    - id: limit
      type: CRMScript.Global.Integer
      description: 
  example: 
references:
- uid: CRMScript.Native.GenericSearch
  commentId: T:CRMScript.Native.GenericSearch
  isExternal: true
  name: GenericSearch
  nameWithType: GenericSearch
  fullName: CRMScript.Native.GenericSearch
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String
- uid: CRMScript.Global.Integer
  commentId: T:CRMScript.Global.Integer
  isExternal: true
  name: Integer
  nameWithType: Integer
  fullName: CRMScript.Global.Integer
- uid: CRMScript.Global.Bool
  commentId: T:CRMScript.Global.Bool
  isExternal: true
  name: Bool
  nameWithType: Bool
  fullName: CRMScript.Global.Bool