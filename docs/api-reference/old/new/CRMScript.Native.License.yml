### YamlMime:ManagedReference
items:
- uid: CRMScript.Native.License
  commentId: T:CRMScript.Native.License
  id: License
  so.intellisense: Void.License
  langs:
  - crmscript
  children:
  - CRMScript.Native.License.getInfo()
  - CRMScript.Native.License.getReasonInvalid()
  - CRMScript.Native.License.getValue(String)
  - CRMScript.Native.License.legalKey()
  - CRMScript.Native.License.#ctor
  - CRMScript.Native.License.toParser()
  name: License
  nameWithType: License
  fullName: CRMScript.Native.License
  type: Class
  summary: 
  example: 
- uid: CRMScript.Native.License.getInfo()
  commentId: M:CRMScript.Native.License.getInfo()
  id: 'getInfo()'
  so.intellisense: License.getInfo
  langs:
  - crmscript
  name: 'getInfo()'
  nameWithType: License.getInfo()
  fullName: CRMScript.Native.License.getInfo()
  type: Method
  summary: "\nDeprecated in 7.1.<p></p>\nGet info about license key. Check if its legal and print hostname and modules.<p></p>\n<ul><li><strong>Returns:</strong>Info.</li></ul>\n"
  remarks: 
  syntax: 
    content: getInfo()
    parameters:
  example: 
- uid: CRMScript.Native.License.getReasonInvalid()
  commentId: M:CRMScript.Native.License.getReasonInvalid()
  id: 'getReasonInvalid()'
  so.intellisense: License.getReasonInvalid
  langs:
  - crmscript
  name: 'getReasonInvalid()'
  nameWithType: License.getReasonInvalid()
  fullName: CRMScript.Native.License.getReasonInvalid()
  type: Method
  summary: "\nDeprecated in 7.1.<p></p>\nCheck if the license key is valid and returns the reason as a string.<p></p>\n<ul><li><strong>Returns:</strong>reason why not valid or null string if valid</li></ul>\n"
  remarks: 
  syntax: 
    content: getReasonInvalid()
    parameters:
  example: 
- uid: CRMScript.Native.License.getValue(String)
  commentId: M:CRMScript.Native.License.getValue(String)
  id: 'getValue(String)'
  so.intellisense: License.getValue
  langs:
  - crmscript
  name: 'getValue(String)'
  nameWithType: License.getValue(String)
  fullName: CRMScript.Native.License.getValue(String)
  type: Method
  summary: "\nDeprecated in 7.1.<p></p>\nExtract a value from the license key.\n"
  remarks: 
  syntax: 
    content: getValue(String name)
    parameters:
    - id: name
      type: CRMScript.Global.String
      description: 
  example: 
- uid: CRMScript.Native.License.legalKey()
  commentId: M:CRMScript.Native.License.legalKey()
  id: 'legalKey()'
  so.intellisense: License.legalKey
  langs:
  - crmscript
  name: 'legalKey()'
  nameWithType: License.legalKey()
  fullName: CRMScript.Native.License.legalKey()
  type: Method
  summary: "\nDeprecated in 7.1.<p></p>\nDetermines if a license key is legal or not.<p></p>\n<ul><li><strong>Returns:</strong>true if the key is legal.</li></ul>\n"
  remarks: 
  syntax: 
    content: legalKey()
    parameters:
  example: 
- uid: CRMScript.Native.License.#ctor
  commentId: M:CRMScript.Native.License.#ctor
  id: '#ctor'
  so.intellisense: Void.License
  langs:
  - crmscript
  name: '#ctor'
  nameWithType: License.#ctor
  fullName: CRMScript.Native.License.#ctor
  type: Constructor
  summary: 
  remarks: 
  syntax: 
    content: License
  example: 
- uid: CRMScript.Native.License.toParser()
  commentId: M:CRMScript.Native.License.toParser()
  id: 'toParser()'
  so.intellisense: License.toParser
  langs:
  - crmscript
  name: 'toParser()'
  nameWithType: License.toParser()
  fullName: CRMScript.Native.License.toParser()
  type: Method
  summary: "\nDeprecated in 7.1.<p></p>\nThis function will fill a Parser object with License values.\n"
  remarks: 
  syntax: 
    content: toParser(Parser parser)
    parameters:
  example: 
references:
- uid: CRMScript.Native.License
  commentId: T:CRMScript.Native.License
  isExternal: true
  name: License
  nameWithType: License
  fullName: CRMScript.Native.License
- uid: CRMScript.Global.String
  commentId: T:CRMScript.Global.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: CRMScript.Global.String